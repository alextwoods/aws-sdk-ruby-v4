# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file was code generated using smithy-ruby.
# https://github.com/awslabs/smithy-ruby
#
# WARNING ABOUT GENERATED CODE

module AWS::SDK::DeviceFarm
  module Types

    # <p>A container for account-level settings in AWS Device Farm.</p>
    #
    # @!attribute aws_account_number
    #   <p>The AWS account number specified in the <code>AccountSettings</code>
    #               container.</p>
    #
    #   @return [String]
    #
    # @!attribute unmetered_devices
    #   <p>Returns the unmetered devices you have purchased or want to purchase.</p>
    #
    #   @return [Hash<String, Integer>]
    #
    # @!attribute unmetered_remote_access_devices
    #   <p>Returns the unmetered remote access devices you have purchased or want to
    #               purchase.</p>
    #
    #   @return [Hash<String, Integer>]
    #
    # @!attribute max_job_timeout_minutes
    #   <p>The maximum number of minutes a test run executes before it times out.</p>
    #
    #   @return [Integer]
    #
    # @!attribute trial_minutes
    #   <p>Information about an AWS account's usage of free trial device minutes.</p>
    #
    #   @return [TrialMinutes]
    #
    # @!attribute max_slots
    #   <p>The maximum number of device slots that the AWS account can purchase. Each maximum
    #               is expressed as an <code>offering-id:number</code> pair, where the
    #                   <code>offering-id</code> represents one of the IDs returned by the
    #                   <code>ListOfferings</code> command.</p>
    #
    #   @return [Hash<String, Integer>]
    #
    # @!attribute default_job_timeout_minutes
    #   <p>The default number of minutes (at the account level) a test run executes before it times out. The
    #               default value is 150 minutes.</p>
    #
    #   @return [Integer]
    #
    # @!attribute skip_app_resign
    #   <p>When set to <code>true</code>, for private devices, Device Farm does not sign your app again. For public
    #               devices, Device Farm always signs your apps again.</p>
    #           <p>For more information about how Device Farm re-signs your apps, see <a href="https://aws.amazon.com/device-farm/faq/">Do you modify my app?</a> in the <i>AWS Device
    #                   Farm FAQs</i>.</p>
    #
    #   @return [Boolean]
    #
    AccountSettings = ::Struct.new(
      :aws_account_number,
      :unmetered_devices,
      :unmetered_remote_access_devices,
      :max_job_timeout_minutes,
      :trial_minutes,
      :max_slots,
      :default_job_timeout_minutes,
      :skip_app_resign,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>An invalid argument was specified.</p>
    #
    # @!attribute message
    #   <p>Any additional information about the exception.</p>
    #
    #   @return [String]
    #
    ArgumentException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the output of a test. Examples of artifacts include logs and
    #             screenshots.</p>
    #
    # @!attribute arn
    #   <p>The artifact's ARN.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The artifact's name.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The artifact's type.</p>
    #           <p>Allowed values include the following:</p>
    #           <ul>
    #               <li>
    #                   <p>UNKNOWN</p>
    #               </li>
    #               <li>
    #                   <p>SCREENSHOT</p>
    #               </li>
    #               <li>
    #                   <p>DEVICE_LOG</p>
    #               </li>
    #               <li>
    #                   <p>MESSAGE_LOG</p>
    #               </li>
    #               <li>
    #                   <p>VIDEO_LOG</p>
    #               </li>
    #               <li>
    #                   <p>RESULT_LOG</p>
    #               </li>
    #               <li>
    #                   <p>SERVICE_LOG</p>
    #               </li>
    #               <li>
    #                   <p>WEBKIT_LOG</p>
    #               </li>
    #               <li>
    #                   <p>INSTRUMENTATION_OUTPUT</p>
    #               </li>
    #               <li>
    #                   <p>EXERCISER_MONKEY_OUTPUT: the artifact (log) generated by an Android fuzz test.</p>
    #               </li>
    #               <li>
    #                   <p>CALABASH_JSON_OUTPUT</p>
    #               </li>
    #               <li>
    #                   <p>CALABASH_PRETTY_OUTPUT</p>
    #               </li>
    #               <li>
    #                   <p>CALABASH_STANDARD_OUTPUT</p>
    #               </li>
    #               <li>
    #                   <p>CALABASH_JAVA_XML_OUTPUT</p>
    #               </li>
    #               <li>
    #                   <p>AUTOMATION_OUTPUT</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_SERVER_OUTPUT</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_OUTPUT</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_XML_OUTPUT</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_PYTHON_OUTPUT</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_PYTHON_XML_OUTPUT</p>
    #               </li>
    #               <li>
    #                   <p>EXPLORER_EVENT_LOG</p>
    #               </li>
    #               <li>
    #                   <p>EXPLORER_SUMMARY_LOG</p>
    #               </li>
    #               <li>
    #                   <p>APPLICATION_CRASH_REPORT</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_LOG</p>
    #               </li>
    #               <li>
    #                   <p>VIDEO</p>
    #               </li>
    #               <li>
    #                   <p>CUSTOMER_ARTIFACT</p>
    #               </li>
    #               <li>
    #                   <p>CUSTOMER_ARTIFACT_LOG</p>
    #               </li>
    #               <li>
    #                   <p>TESTSPEC_OUTPUT</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["UNKNOWN", "SCREENSHOT", "DEVICE_LOG", "MESSAGE_LOG", "VIDEO_LOG", "RESULT_LOG", "SERVICE_LOG", "WEBKIT_LOG", "INSTRUMENTATION_OUTPUT", "EXERCISER_MONKEY_OUTPUT", "CALABASH_JSON_OUTPUT", "CALABASH_PRETTY_OUTPUT", "CALABASH_STANDARD_OUTPUT", "CALABASH_JAVA_XML_OUTPUT", "AUTOMATION_OUTPUT", "APPIUM_SERVER_OUTPUT", "APPIUM_JAVA_OUTPUT", "APPIUM_JAVA_XML_OUTPUT", "APPIUM_PYTHON_OUTPUT", "APPIUM_PYTHON_XML_OUTPUT", "EXPLORER_EVENT_LOG", "EXPLORER_SUMMARY_LOG", "APPLICATION_CRASH_REPORT", "XCTEST_LOG", "VIDEO", "CUSTOMER_ARTIFACT", "CUSTOMER_ARTIFACT_LOG", "TESTSPEC_OUTPUT"]
    #
    #   @return [String]
    #
    # @!attribute extension
    #   <p>The artifact's file extension.</p>
    #
    #   @return [String]
    #
    # @!attribute url
    #   <p>The presigned Amazon S3 URL that can be used with a GET request to download the artifact's
    #               file.</p>
    #
    #   @return [String]
    #
    Artifact = ::Struct.new(
      :arn,
      :name,
      :type,
      :extension,
      :url,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for ArtifactCategory
    #
    module ArtifactCategory
      # No documentation available.
      #
      SCREENSHOT = "SCREENSHOT"

      # No documentation available.
      #
      FILE = "FILE"

      # No documentation available.
      #
      LOG = "LOG"
    end

    # Includes enum constants for ArtifactType
    #
    module ArtifactType
      # No documentation available.
      #
      UNKNOWN = "UNKNOWN"

      # No documentation available.
      #
      SCREENSHOT = "SCREENSHOT"

      # No documentation available.
      #
      DEVICE_LOG = "DEVICE_LOG"

      # No documentation available.
      #
      MESSAGE_LOG = "MESSAGE_LOG"

      # No documentation available.
      #
      VIDEO_LOG = "VIDEO_LOG"

      # No documentation available.
      #
      RESULT_LOG = "RESULT_LOG"

      # No documentation available.
      #
      SERVICE_LOG = "SERVICE_LOG"

      # No documentation available.
      #
      WEBKIT_LOG = "WEBKIT_LOG"

      # No documentation available.
      #
      INSTRUMENTATION_OUTPUT = "INSTRUMENTATION_OUTPUT"

      # No documentation available.
      #
      EXERCISER_MONKEY_OUTPUT = "EXERCISER_MONKEY_OUTPUT"

      # No documentation available.
      #
      CALABASH_JSON_OUTPUT = "CALABASH_JSON_OUTPUT"

      # No documentation available.
      #
      CALABASH_PRETTY_OUTPUT = "CALABASH_PRETTY_OUTPUT"

      # No documentation available.
      #
      CALABASH_STANDARD_OUTPUT = "CALABASH_STANDARD_OUTPUT"

      # No documentation available.
      #
      CALABASH_JAVA_XML_OUTPUT = "CALABASH_JAVA_XML_OUTPUT"

      # No documentation available.
      #
      AUTOMATION_OUTPUT = "AUTOMATION_OUTPUT"

      # No documentation available.
      #
      APPIUM_SERVER_OUTPUT = "APPIUM_SERVER_OUTPUT"

      # No documentation available.
      #
      APPIUM_JAVA_OUTPUT = "APPIUM_JAVA_OUTPUT"

      # No documentation available.
      #
      APPIUM_JAVA_XML_OUTPUT = "APPIUM_JAVA_XML_OUTPUT"

      # No documentation available.
      #
      APPIUM_PYTHON_OUTPUT = "APPIUM_PYTHON_OUTPUT"

      # No documentation available.
      #
      APPIUM_PYTHON_XML_OUTPUT = "APPIUM_PYTHON_XML_OUTPUT"

      # No documentation available.
      #
      EXPLORER_EVENT_LOG = "EXPLORER_EVENT_LOG"

      # No documentation available.
      #
      EXPLORER_SUMMARY_LOG = "EXPLORER_SUMMARY_LOG"

      # No documentation available.
      #
      APPLICATION_CRASH_REPORT = "APPLICATION_CRASH_REPORT"

      # No documentation available.
      #
      XCTEST_LOG = "XCTEST_LOG"

      # No documentation available.
      #
      VIDEO = "VIDEO"

      # No documentation available.
      #
      CUSTOMER_ARTIFACT = "CUSTOMER_ARTIFACT"

      # No documentation available.
      #
      CUSTOMER_ARTIFACT_LOG = "CUSTOMER_ARTIFACT_LOG"

      # No documentation available.
      #
      TESTSPEC_OUTPUT = "TESTSPEC_OUTPUT"
    end

    # Includes enum constants for BillingMethod
    #
    module BillingMethod
      # No documentation available.
      #
      METERED = "METERED"

      # No documentation available.
      #
      UNMETERED = "UNMETERED"
    end

    # <p>Represents the amount of CPU that an app is using on a physical device. Does not represent system-wide
    #             CPU usage.</p>
    #
    # @!attribute frequency
    #   <p>The CPU's frequency.</p>
    #
    #   @return [String]
    #
    # @!attribute architecture
    #   <p>The CPU's architecture (for example, x86 or ARM).</p>
    #
    #   @return [String]
    #
    # @!attribute clock
    #   <p>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2
    #               GHz CPU is expressed as 1200000000.</p>
    #
    #   @return [Float]
    #
    CPU = ::Struct.new(
      :frequency,
      :architecture,
      :clock,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The requested object could not be deleted.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    CannotDeleteException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents entity counters.</p>
    #
    # @!attribute total
    #   <p>The total number of entities.</p>
    #
    #   @return [Integer]
    #
    # @!attribute passed
    #   <p>The number of passed entities.</p>
    #
    #   @return [Integer]
    #
    # @!attribute failed
    #   <p>The number of failed entities.</p>
    #
    #   @return [Integer]
    #
    # @!attribute warned
    #   <p>The number of warned entities.</p>
    #
    #   @return [Integer]
    #
    # @!attribute errored
    #   <p>The number of errored entities.</p>
    #
    #   @return [Integer]
    #
    # @!attribute stopped
    #   <p>The number of stopped entities.</p>
    #
    #   @return [Integer]
    #
    # @!attribute skipped
    #   <p>The number of skipped entities.</p>
    #
    #   @return [Integer]
    #
    Counters = ::Struct.new(
      :total,
      :passed,
      :failed,
      :warned,
      :errored,
      :stopped,
      :skipped,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the create device pool operation.</p>
    #
    # @!attribute project_arn
    #   <p>The ARN of the project for the device pool.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The device pool's name.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>The device pool's description.</p>
    #
    #   @return [String]
    #
    # @!attribute rules
    #   <p>The device pool's rules.</p>
    #
    #   @return [Array<Rule>]
    #
    # @!attribute max_devices
    #   <p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are
    #               available and meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many
    #               devices meet these constraints, your device pool might contain fewer devices than the value for this
    #               parameter.</p>
    #           <p>By specifying the maximum number of devices, you can control the costs that you incur
    #               by running tests.</p>
    #
    #   @return [Integer]
    #
    CreateDevicePoolInput = ::Struct.new(
      :project_arn,
      :name,
      :description,
      :rules,
      :max_devices,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a create device pool request.</p>
    #
    # @!attribute device_pool
    #   <p>The newly created device pool.</p>
    #
    #   @return [DevicePool]
    #
    CreateDevicePoolOutput = ::Struct.new(
      :device_pool,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute name
    #   <p>The name of your instance profile.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>The description of your instance profile.</p>
    #
    #   @return [String]
    #
    # @!attribute package_cleanup
    #   <p>When set to <code>true</code>, Device Farm removes app packages after a test run. The default value is
    #                   <code>false</code> for private devices.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute exclude_app_packages_from_cleanup
    #   <p>An array of strings that specifies the list of app packages that should not be cleaned up from the device
    #               after a test run.</p>
    #           <p>The list of packages is considered only if you set <code>packageCleanup</code> to
    #               <code>true</code>.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute reboot_after_use
    #   <p>When set to <code>true</code>, Device Farm reboots the instance after a test run. The default value is
    #                   <code>true</code>.</p>
    #
    #   @return [Boolean]
    #
    CreateInstanceProfileInput = ::Struct.new(
      :name,
      :description,
      :package_cleanup,
      :exclude_app_packages_from_cleanup,
      :reboot_after_use,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_profile
    #   <p>An object that contains information about your instance profile.</p>
    #
    #   @return [InstanceProfile]
    #
    CreateInstanceProfileOutput = ::Struct.new(
      :instance_profile,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute project_arn
    #   <p>The Amazon Resource Name (ARN) of the project for which you want to create a
    #               network profile.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The name for the new network profile.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>The description of the network profile.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The type of network profile to create. Valid values are listed here.</p>
    #
    #   Enum, one of: ["CURATED", "PRIVATE"]
    #
    #   @return [String]
    #
    # @!attribute uplink_bandwidth_bits
    #   <p>The data throughput rate in bits per second, as an integer from 0 to
    #               104857600.</p>
    #
    #   @return [Integer]
    #
    # @!attribute downlink_bandwidth_bits
    #   <p>The data throughput rate in bits per second, as an integer from 0 to
    #               104857600.</p>
    #
    #   @return [Integer]
    #
    # @!attribute uplink_delay_ms
    #   <p>Delay time for all packets to destination in milliseconds as an integer from 0 to
    #               2000.</p>
    #
    #   @return [Integer]
    #
    # @!attribute downlink_delay_ms
    #   <p>Delay time for all packets to destination in milliseconds as an integer from 0 to
    #               2000.</p>
    #
    #   @return [Integer]
    #
    # @!attribute uplink_jitter_ms
    #   <p>Time variation in the delay of received packets in milliseconds as an integer from
    #               0 to 2000.</p>
    #
    #   @return [Integer]
    #
    # @!attribute downlink_jitter_ms
    #   <p>Time variation in the delay of received packets in milliseconds as an integer from
    #               0 to 2000.</p>
    #
    #   @return [Integer]
    #
    # @!attribute uplink_loss_percent
    #   <p>Proportion of transmitted packets that fail to arrive from 0 to 100
    #               percent.</p>
    #
    #   @return [Integer]
    #
    # @!attribute downlink_loss_percent
    #   <p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>
    #
    #   @return [Integer]
    #
    CreateNetworkProfileInput = ::Struct.new(
      :project_arn,
      :name,
      :description,
      :type,
      :uplink_bandwidth_bits,
      :downlink_bandwidth_bits,
      :uplink_delay_ms,
      :downlink_delay_ms,
      :uplink_jitter_ms,
      :downlink_jitter_ms,
      :uplink_loss_percent,
      :downlink_loss_percent,
      keyword_init: true
    ) do
      include Hearth::Structure
      def initialize(*)
        super
        self.uplink_loss_percent ||= 0
        self.downlink_loss_percent ||= 0
      end

    end

    # @!attribute network_profile
    #   <p>The network profile that is returned by the create network profile
    #               request.</p>
    #
    #   @return [NetworkProfile]
    #
    CreateNetworkProfileOutput = ::Struct.new(
      :network_profile,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the create project operation.</p>
    #
    # @!attribute name
    #   <p>The project's name.</p>
    #
    #   @return [String]
    #
    # @!attribute default_job_timeout_minutes
    #   <p>Sets the execution timeout value (in minutes) for a project. All test runs in this project use the
    #               specified execution timeout value unless overridden when scheduling a run.</p>
    #
    #   @return [Integer]
    #
    CreateProjectInput = ::Struct.new(
      :name,
      :default_job_timeout_minutes,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a create project request.</p>
    #
    # @!attribute project
    #   <p>The newly created project.</p>
    #
    #   @return [Project]
    #
    CreateProjectOutput = ::Struct.new(
      :project,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Configuration settings for a remote access session, including billing
    #             method.</p>
    #
    # @!attribute billing_method
    #   <p>The billing method for the remote access session.</p>
    #
    #   Enum, one of: ["METERED", "UNMETERED"]
    #
    #   @return [String]
    #
    # @!attribute vpce_configuration_arns
    #   <p>An array of ARNs included in the VPC endpoint configuration.</p>
    #
    #   @return [Array<String>]
    #
    CreateRemoteAccessSessionConfiguration = ::Struct.new(
      :billing_method,
      :vpce_configuration_arns,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Creates and submits a request to start a remote access session.</p>
    #
    # @!attribute project_arn
    #   <p>The Amazon Resource Name (ARN) of the project for which you want to create a remote
    #               access session.</p>
    #
    #   @return [String]
    #
    # @!attribute device_arn
    #   <p>The ARN of the device for which you want to create a remote access session.</p>
    #
    #   @return [String]
    #
    # @!attribute instance_arn
    #   <p>The Amazon Resource Name (ARN) of the device instance for which you want to create a
    #               remote access session.</p>
    #
    #   @return [String]
    #
    # @!attribute ssh_public_key
    #   <p>Ignored. The public key of the <code>ssh</code> key pair you want to use for connecting to remote
    #               devices in your remote debugging session. This key is required only if <code>remoteDebugEnabled</code> is
    #               set to <code>true</code>.</p>
    #           <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
    #                   longer supported</a>.</p>
    #
    #   @return [String]
    #
    # @!attribute remote_debug_enabled
    #   <p>Set to <code>true</code> if you want to access devices remotely for debugging in
    #               your remote access session.</p>
    #           <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
    #                   longer supported</a>.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute remote_record_enabled
    #   <p>Set to <code>true</code> to enable remote recording for the remote access
    #               session.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute remote_record_app_arn
    #   <p>The Amazon Resource Name (ARN) for the app to be recorded in the remote access
    #               session.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The name of the remote access session to create.</p>
    #
    #   @return [String]
    #
    # @!attribute client_id
    #   <p>Unique identifier for the client. If you want access to multiple devices on the same client, you should
    #               pass the same <code>clientId</code> value in each call to <code>CreateRemoteAccessSession</code>. This
    #               identifier is required only if <code>remoteDebugEnabled</code> is set to <code>true</code>.</p>
    #           <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
    #                   longer supported</a>.</p>
    #
    #   @return [String]
    #
    # @!attribute configuration
    #   <p>The configuration information for the remote access session request.</p>
    #
    #   @return [CreateRemoteAccessSessionConfiguration]
    #
    # @!attribute interaction_mode
    #   <p>The interaction mode of the remote access session. Valid values are:</p>
    #           <ul>
    #               <li>
    #                   <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and
    #                       rotating the screen. You cannot run XCUITest framework-based tests in this
    #                       mode.</p>
    #               </li>
    #               <li>
    #                   <p>NO_VIDEO: You are connected to the device, but cannot interact with it or view the screen. This
    #                       mode has the fastest test execution speed. You can run XCUITest framework-based tests in this
    #                       mode.</p>
    #               </li>
    #               <li>
    #                   <p>VIDEO_ONLY: You can view the screen, but cannot touch or rotate it. You can run XCUITest
    #                       framework-based tests and watch the screen in this mode.</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["INTERACTIVE", "NO_VIDEO", "VIDEO_ONLY"]
    #
    #   @return [String]
    #
    # @!attribute skip_app_resign
    #   <p>When set to <code>true</code>, for private devices, Device Farm does not sign your app again. For public
    #               devices, Device Farm always signs your apps again.</p>
    #           <p>For more information on how Device Farm modifies your uploads during tests, see <a href="https://aws.amazon.com/device-farm/faq/">Do you modify my app?</a>
    #            </p>
    #
    #   @return [Boolean]
    #
    CreateRemoteAccessSessionInput = ::Struct.new(
      :project_arn,
      :device_arn,
      :instance_arn,
      :ssh_public_key,
      :remote_debug_enabled,
      :remote_record_enabled,
      :remote_record_app_arn,
      :name,
      :client_id,
      :configuration,
      :interaction_mode,
      :skip_app_resign,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the server response from a request to create a remote access
    #             session.</p>
    #
    # @!attribute remote_access_session
    #   <p>A container that describes the remote access session when the request to create a
    #               remote access session is sent.</p>
    #
    #   @return [RemoteAccessSession]
    #
    CreateRemoteAccessSessionOutput = ::Struct.new(
      :remote_access_session,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute name
    #   <p>Human-readable name of the Selenium testing project.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>Human-readable description of the project.</p>
    #
    #   @return [String]
    #
    # @!attribute vpc_config
    #   <p>The VPC security groups and subnets that are attached to a project.</p>
    #
    #   @return [TestGridVpcConfig]
    #
    CreateTestGridProjectInput = ::Struct.new(
      :name,
      :description,
      :vpc_config,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute test_grid_project
    #   <p>ARN of the Selenium testing project that was created.</p>
    #
    #   @return [TestGridProject]
    #
    CreateTestGridProjectOutput = ::Struct.new(
      :test_grid_project,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute project_arn
    #   <p>ARN (from <a>CreateTestGridProject</a> or <a>ListTestGridProjects</a>) to associate
    #            with the short-term URL. </p>
    #
    #   @return [String]
    #
    # @!attribute expires_in_seconds
    #   <p>Lifetime, in seconds, of the URL.</p>
    #
    #   @return [Integer]
    #
    CreateTestGridUrlInput = ::Struct.new(
      :project_arn,
      :expires_in_seconds,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute url
    #   <p>A signed URL, expiring in <a>CreateTestGridUrlRequest$expiresInSeconds</a> seconds, to be passed
    #            to a <code>RemoteWebDriver</code>. </p>
    #
    #   @return [String]
    #
    # @!attribute expires
    #   <p>The number of seconds the URL from <a>CreateTestGridUrlResult$url</a> stays active.</p>
    #
    #   @return [Time]
    #
    CreateTestGridUrlOutput = ::Struct.new(
      :url,
      :expires,
      keyword_init: true
    ) do
      include Hearth::Structure

      def to_s
        "#<struct AWS::SDK::DeviceFarm::Types::CreateTestGridUrlOutput "\
          "url=\"[SENSITIVE]\", "\
          "expires=#{expires || 'nil'}>"
      end
    end

    # <p>Represents a request to the create upload operation.</p>
    #
    # @!attribute project_arn
    #   <p>The ARN of the project for the upload.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The upload's file name. The name should not contain any forward slashes (<code>/</code>). If you are
    #               uploading an iOS app, the file name must end with the <code>.ipa</code> extension. If you are uploading an
    #               Android app, the file name must end with the <code>.apk</code> extension. For all others, the file name must
    #               end with the <code>.zip</code> file extension.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The upload's upload type.</p>
    #           <p>Must be one of the following values:</p>
    #           <ul>
    #               <li>
    #                   <p>ANDROID_APP</p>
    #               </li>
    #               <li>
    #                   <p>IOS_APP</p>
    #               </li>
    #               <li>
    #                   <p>WEB_APP</p>
    #               </li>
    #               <li>
    #                   <p>EXTERNAL_DATA</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_PYTHON_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_NODE_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_RUBY_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_PYTHON_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_NODE_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_RUBY_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>CALABASH_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>INSTRUMENTATION_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATION_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATOR_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_UI_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_JUNIT_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_TESTNG_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_PYTHON_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_NODE_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_RUBY_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_PYTHON_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_NODE_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_RUBY_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>INSTRUMENTATION_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_UI_TEST_SPEC</p>
    #               </li>
    #            </ul>
    #           <p> If you call <code>CreateUpload</code> with <code>WEB_APP</code> specified, AWS
    #               Device Farm throws an <code>ArgumentException</code> error.</p>
    #
    #   Enum, one of: ["ANDROID_APP", "IOS_APP", "WEB_APP", "EXTERNAL_DATA", "APPIUM_JAVA_JUNIT_TEST_PACKAGE", "APPIUM_JAVA_TESTNG_TEST_PACKAGE", "APPIUM_PYTHON_TEST_PACKAGE", "APPIUM_NODE_TEST_PACKAGE", "APPIUM_RUBY_TEST_PACKAGE", "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE", "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE", "APPIUM_WEB_PYTHON_TEST_PACKAGE", "APPIUM_WEB_NODE_TEST_PACKAGE", "APPIUM_WEB_RUBY_TEST_PACKAGE", "CALABASH_TEST_PACKAGE", "INSTRUMENTATION_TEST_PACKAGE", "UIAUTOMATION_TEST_PACKAGE", "UIAUTOMATOR_TEST_PACKAGE", "XCTEST_TEST_PACKAGE", "XCTEST_UI_TEST_PACKAGE", "APPIUM_JAVA_JUNIT_TEST_SPEC", "APPIUM_JAVA_TESTNG_TEST_SPEC", "APPIUM_PYTHON_TEST_SPEC", "APPIUM_NODE_TEST_SPEC", "APPIUM_RUBY_TEST_SPEC", "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC", "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC", "APPIUM_WEB_PYTHON_TEST_SPEC", "APPIUM_WEB_NODE_TEST_SPEC", "APPIUM_WEB_RUBY_TEST_SPEC", "INSTRUMENTATION_TEST_SPEC", "XCTEST_UI_TEST_SPEC"]
    #
    #   @return [String]
    #
    # @!attribute content_type
    #   <p>The upload's content type (for example, <code>application/octet-stream</code>).</p>
    #
    #   @return [String]
    #
    CreateUploadInput = ::Struct.new(
      :project_arn,
      :name,
      :type,
      :content_type,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a create upload request.</p>
    #
    # @!attribute upload
    #   <p>The newly created upload.</p>
    #
    #   @return [Upload]
    #
    CreateUploadOutput = ::Struct.new(
      :upload,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute vpce_configuration_name
    #   <p>The friendly name you give to your VPC endpoint configuration, to manage your
    #               configurations more easily.</p>
    #
    #   @return [String]
    #
    # @!attribute vpce_service_name
    #   <p>The name of the VPC endpoint service running in your AWS account that you want Device Farm to test.</p>
    #
    #   @return [String]
    #
    # @!attribute service_dns_name
    #   <p>The DNS name of the service running in your VPC that you want Device Farm to
    #               test.</p>
    #
    #   @return [String]
    #
    # @!attribute vpce_configuration_description
    #   <p>An optional description that provides details about your VPC endpoint configuration.</p>
    #
    #   @return [String]
    #
    CreateVPCEConfigurationInput = ::Struct.new(
      :vpce_configuration_name,
      :vpce_service_name,
      :service_dns_name,
      :vpce_configuration_description,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute vpce_configuration
    #   <p>An object that contains information about your VPC endpoint configuration.</p>
    #
    #   @return [VPCEConfiguration]
    #
    CreateVPCEConfigurationOutput = ::Struct.new(
      :vpce_configuration,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for CurrencyCode
    #
    module CurrencyCode
      # No documentation available.
      #
      USD = "USD"
    end

    # <p>A JSON object that specifies the paths where the artifacts generated by the customer's tests, on the
    #             device or in the test environment, are pulled from.</p>
    #         <p>Specify <code>deviceHostPaths</code> and optionally specify either
    #                 <code>iosPaths</code> or <code>androidPaths</code>.</p>
    #         <p>For web app tests, you can specify both <code>iosPaths</code> and
    #                 <code>androidPaths</code>.</p>
    #
    # @!attribute ios_paths
    #   <p>Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests
    #               are pulled from.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute android_paths
    #   <p>Comma-separated list of paths on the Android device where the artifacts generated by the customer's
    #               tests are pulled from.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute device_host_paths
    #   <p>Comma-separated list of paths in the test execution environment where the artifacts generated by the
    #               customer's tests are pulled from.</p>
    #
    #   @return [Array<String>]
    #
    CustomerArtifactPaths = ::Struct.new(
      :ios_paths,
      :android_paths,
      :device_host_paths,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the delete device pool operation.</p>
    #
    # @!attribute arn
    #   <p>Represents the Amazon Resource Name (ARN) of the Device Farm device pool to delete.</p>
    #
    #   @return [String]
    #
    DeleteDevicePoolInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a delete device pool request.</p>
    #
    DeleteDevicePoolOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the instance profile you are requesting to
    #               delete.</p>
    #
    #   @return [String]
    #
    DeleteInstanceProfileInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    DeleteInstanceProfileOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute arn
    #   <p>The ARN of the network profile to delete.</p>
    #
    #   @return [String]
    #
    DeleteNetworkProfileInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    DeleteNetworkProfileOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the delete project operation.</p>
    #
    # @!attribute arn
    #   <p>Represents the Amazon Resource Name (ARN) of the Device Farm project to delete.</p>
    #
    #   @return [String]
    #
    DeleteProjectInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a delete project request.</p>
    #
    DeleteProjectOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the request to delete the specified remote access session.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the session for which you want to delete remote
    #               access.</p>
    #
    #   @return [String]
    #
    DeleteRemoteAccessSessionInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The response from the server when a request is made to delete the remote access
    #             session.</p>
    #
    DeleteRemoteAccessSessionOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the delete run operation.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) for the run to delete.</p>
    #
    #   @return [String]
    #
    DeleteRunInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a delete run request.</p>
    #
    DeleteRunOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute project_arn
    #   <p>The ARN of the project to delete, from <a>CreateTestGridProject</a> or <a>ListTestGridProjects</a>.</p>
    #
    #   @return [String]
    #
    DeleteTestGridProjectInput = ::Struct.new(
      :project_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    DeleteTestGridProjectOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the delete upload operation.</p>
    #
    # @!attribute arn
    #   <p>Represents the Amazon Resource Name (ARN) of the Device Farm upload to delete.</p>
    #
    #   @return [String]
    #
    DeleteUploadInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a delete upload request.</p>
    #
    DeleteUploadOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to
    #               delete.</p>
    #
    #   @return [String]
    #
    DeleteVPCEConfigurationInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    DeleteVPCEConfigurationOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a device type that an app is tested against.</p>
    #
    # @!attribute arn
    #   <p>The device's ARN.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The device's display name.</p>
    #
    #   @return [String]
    #
    # @!attribute manufacturer
    #   <p>The device's manufacturer name.</p>
    #
    #   @return [String]
    #
    # @!attribute model
    #   <p>The device's model name.</p>
    #
    #   @return [String]
    #
    # @!attribute model_id
    #   <p>The device's model ID.</p>
    #
    #   @return [String]
    #
    # @!attribute form_factor
    #   <p>The device's form factor.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>PHONE</p>
    #               </li>
    #               <li>
    #                   <p>TABLET</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["PHONE", "TABLET"]
    #
    #   @return [String]
    #
    # @!attribute platform
    #   <p>The device's platform.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>ANDROID</p>
    #               </li>
    #               <li>
    #                   <p>IOS</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["ANDROID", "IOS"]
    #
    #   @return [String]
    #
    # @!attribute os
    #   <p>The device's operating system type.</p>
    #
    #   @return [String]
    #
    # @!attribute cpu
    #   <p>Information about the device's CPU.</p>
    #
    #   @return [CPU]
    #
    # @!attribute resolution
    #   <p>The resolution of the device.</p>
    #
    #   @return [Resolution]
    #
    # @!attribute heap_size
    #   <p>The device's heap size, expressed in bytes.</p>
    #
    #   @return [Integer]
    #
    # @!attribute memory
    #   <p>The device's total memory size, expressed in bytes.</p>
    #
    #   @return [Integer]
    #
    # @!attribute image
    #   <p>The device's image name.</p>
    #
    #   @return [String]
    #
    # @!attribute carrier
    #   <p>The device's carrier.</p>
    #
    #   @return [String]
    #
    # @!attribute radio
    #   <p>The device's radio.</p>
    #
    #   @return [String]
    #
    # @!attribute remote_access_enabled
    #   <p>Specifies whether remote access has been enabled for the specified
    #               device.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute remote_debug_enabled
    #   <p>This flag is set to <code>true</code> if remote debugging is enabled for the
    #               device.</p>
    #           <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
    #                   longer supported</a>.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute fleet_type
    #   <p>The type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.</p>
    #
    #   @return [String]
    #
    # @!attribute fleet_name
    #   <p>The name of the fleet to which this device belongs.</p>
    #
    #   @return [String]
    #
    # @!attribute instances
    #   <p>The instances that belong to this device.</p>
    #
    #   @return [Array<DeviceInstance>]
    #
    # @!attribute availability
    #   <p>Indicates how likely a device is available for a test run. Currently available in the <a>ListDevices</a> and GetDevice API methods.</p>
    #
    #   Enum, one of: ["TEMPORARY_NOT_AVAILABLE", "BUSY", "AVAILABLE", "HIGHLY_AVAILABLE"]
    #
    #   @return [String]
    #
    Device = ::Struct.new(
      :arn,
      :name,
      :manufacturer,
      :model,
      :model_id,
      :form_factor,
      :platform,
      :os,
      :cpu,
      :resolution,
      :heap_size,
      :memory,
      :image,
      :carrier,
      :radio,
      :remote_access_enabled,
      :remote_debug_enabled,
      :fleet_type,
      :fleet_name,
      :instances,
      :availability,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for DeviceAttribute
    #
    module DeviceAttribute
      # No documentation available.
      #
      ARN = "ARN"

      # No documentation available.
      #
      PLATFORM = "PLATFORM"

      # No documentation available.
      #
      FORM_FACTOR = "FORM_FACTOR"

      # No documentation available.
      #
      MANUFACTURER = "MANUFACTURER"

      # No documentation available.
      #
      REMOTE_ACCESS_ENABLED = "REMOTE_ACCESS_ENABLED"

      # No documentation available.
      #
      REMOTE_DEBUG_ENABLED = "REMOTE_DEBUG_ENABLED"

      # No documentation available.
      #
      APPIUM_VERSION = "APPIUM_VERSION"

      # No documentation available.
      #
      INSTANCE_ARN = "INSTANCE_ARN"

      # No documentation available.
      #
      INSTANCE_LABELS = "INSTANCE_LABELS"

      # No documentation available.
      #
      FLEET_TYPE = "FLEET_TYPE"

      # No documentation available.
      #
      OS_VERSION = "OS_VERSION"

      # No documentation available.
      #
      MODEL = "MODEL"

      # No documentation available.
      #
      AVAILABILITY = "AVAILABILITY"
    end

    # Includes enum constants for DeviceAvailability
    #
    module DeviceAvailability
      # No documentation available.
      #
      TEMPORARY_NOT_AVAILABLE = "TEMPORARY_NOT_AVAILABLE"

      # No documentation available.
      #
      BUSY = "BUSY"

      # No documentation available.
      #
      AVAILABLE = "AVAILABLE"

      # No documentation available.
      #
      HIGHLY_AVAILABLE = "HIGHLY_AVAILABLE"
    end

    # <p>Represents a device filter used to select a set of devices to be included in a test
    #             run. This data structure is passed in as the <code>deviceSelectionConfiguration</code>
    #             parameter to <code>ScheduleRun</code>. For an example of the JSON request syntax, see
    #                 <a>ScheduleRun</a>.</p>
    #         <p>It is also passed in as the <code>filters</code> parameter to
    #             <code>ListDevices</code>. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>
    #
    # @!attribute attribute
    #   <p>The aspect of a device such as platform or model used as the selection criteria in a
    #               device filter.</p>
    #           <p>The supported operators for each attribute are provided in the following list.</p>
    #           <dl>
    #               <dt>ARN</dt>
    #               <dd>
    #                       <p>The Amazon Resource Name (ARN) of the device (for example,
    #                               <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>).</p>
    #                       <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code>
    #                  </p>
    #                   </dd>
    #               <dt>PLATFORM</dt>
    #               <dd>
    #                       <p>The device platform. Valid values are ANDROID or IOS.</p>
    #                       <p>Supported operators: <code>EQUALS</code>
    #                  </p>
    #                   </dd>
    #               <dt>OS_VERSION</dt>
    #               <dd>
    #                       <p>The operating system version (for example, 10.3.2).</p>
    #                       <p>Supported operators: <code>EQUALS</code>, <code>GREATER_THAN</code>,
    #                               <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>,
    #                               <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>,
    #                               <code>NOT_IN</code>
    #                  </p>
    #                   </dd>
    #               <dt>MODEL</dt>
    #               <dd>
    #                       <p>The device model (for example, iPad 5th Gen).</p>
    #                       <p>Supported operators: <code>CONTAINS</code>, <code>EQUALS</code>,
    #                               <code>IN</code>, <code>NOT_IN</code>
    #                  </p>
    #                   </dd>
    #               <dt>AVAILABILITY</dt>
    #               <dd>
    #                       <p>The current availability of the device. Valid values are AVAILABLE,
    #                           HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p>
    #                       <p>Supported operators: <code>EQUALS</code>
    #                  </p>
    #                   </dd>
    #               <dt>FORM_FACTOR</dt>
    #               <dd>
    #                       <p>The device form factor. Valid values are PHONE or TABLET.</p>
    #                       <p>Supported operators: <code>EQUALS</code>
    #                  </p>
    #                   </dd>
    #               <dt>MANUFACTURER</dt>
    #               <dd>
    #                       <p>The device manufacturer (for example, Apple).</p>
    #                       <p>Supported operators: <code>EQUALS</code>, <code>IN</code>,
    #                               <code>NOT_IN</code>
    #                  </p>
    #                   </dd>
    #               <dt>REMOTE_ACCESS_ENABLED</dt>
    #               <dd>
    #                       <p>Whether the device is enabled for remote access. Valid values are TRUE or
    #                           FALSE.</p>
    #                       <p>Supported operators: <code>EQUALS</code>
    #                  </p>
    #                   </dd>
    #               <dt>REMOTE_DEBUG_ENABLED</dt>
    #               <dd>
    #                       <p>Whether the device is enabled for remote debugging. Valid values are TRUE or FALSE.</p>
    #                       <p>Supported operators: <code>EQUALS</code>
    #                  </p>
    #                       <p>Because remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no longer
    #                               supported</a>, this filter is ignored.</p>
    #                   </dd>
    #               <dt>INSTANCE_ARN</dt>
    #               <dd>
    #                       <p>The Amazon Resource Name (ARN) of the device instance.</p>
    #                       <p>Supported operators: <code>EQUALS</code>, <code>IN</code>,
    #                               <code>NOT_IN</code>
    #                  </p>
    #                   </dd>
    #               <dt>INSTANCE_LABELS</dt>
    #               <dd>
    #                       <p>The label of the device instance.</p>
    #                       <p>Supported operators: <code>CONTAINS</code>
    #                  </p>
    #                   </dd>
    #               <dt>FLEET_TYPE</dt>
    #               <dd>
    #                       <p>The fleet type. Valid values are PUBLIC or PRIVATE.</p>
    #                       <p>Supported operators: <code>EQUALS</code>
    #                  </p>
    #                   </dd>
    #            </dl>
    #
    #   Enum, one of: ["ARN", "PLATFORM", "OS_VERSION", "MODEL", "AVAILABILITY", "FORM_FACTOR", "MANUFACTURER", "REMOTE_ACCESS_ENABLED", "REMOTE_DEBUG_ENABLED", "INSTANCE_ARN", "INSTANCE_LABELS", "FLEET_TYPE"]
    #
    #   @return [String]
    #
    # @!attribute operator
    #   <p>Specifies how Device Farm compares the filter's attribute to the value. See the attribute
    #               descriptions.</p>
    #
    #   Enum, one of: ["EQUALS", "LESS_THAN", "LESS_THAN_OR_EQUALS", "GREATER_THAN", "GREATER_THAN_OR_EQUALS", "IN", "NOT_IN", "CONTAINS"]
    #
    #   @return [String]
    #
    # @!attribute values
    #   <p>An array of one or more filter values used in a device filter.</p>
    #           <p class="title">
    #               <b>Operator Values</b>
    #            </p>
    #            <ul>
    #               <li>
    #                   <p>The IN and NOT_IN operators can take a values array that has more than one
    #                       element.</p>
    #               </li>
    #               <li>
    #                   <p>The other operators require an array with a single element.</p>
    #               </li>
    #            </ul>
    #           <p class="title">
    #               <b>Attribute Values</b>
    #            </p>
    #            <ul>
    #               <li>
    #                   <p>The PLATFORM attribute can be set to ANDROID or IOS.</p>
    #               </li>
    #               <li>
    #                   <p>The AVAILABILITY attribute can be set to AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
    #                       TEMPORARY_NOT_AVAILABLE.</p>
    #               </li>
    #               <li>
    #                   <p>The FORM_FACTOR attribute can be set to PHONE or TABLET.</p>
    #               </li>
    #               <li>
    #                   <p>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</p>
    #               </li>
    #            </ul>
    #
    #   @return [Array<String>]
    #
    DeviceFilter = ::Struct.new(
      :attribute,
      :operator,
      :values,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for DeviceFilterAttribute
    #
    module DeviceFilterAttribute
      # No documentation available.
      #
      ARN = "ARN"

      # No documentation available.
      #
      PLATFORM = "PLATFORM"

      # No documentation available.
      #
      OS_VERSION = "OS_VERSION"

      # No documentation available.
      #
      MODEL = "MODEL"

      # No documentation available.
      #
      AVAILABILITY = "AVAILABILITY"

      # No documentation available.
      #
      FORM_FACTOR = "FORM_FACTOR"

      # No documentation available.
      #
      MANUFACTURER = "MANUFACTURER"

      # No documentation available.
      #
      REMOTE_ACCESS_ENABLED = "REMOTE_ACCESS_ENABLED"

      # No documentation available.
      #
      REMOTE_DEBUG_ENABLED = "REMOTE_DEBUG_ENABLED"

      # No documentation available.
      #
      INSTANCE_ARN = "INSTANCE_ARN"

      # No documentation available.
      #
      INSTANCE_LABELS = "INSTANCE_LABELS"

      # No documentation available.
      #
      FLEET_TYPE = "FLEET_TYPE"
    end

    # Includes enum constants for DeviceFormFactor
    #
    module DeviceFormFactor
      # No documentation available.
      #
      PHONE = "PHONE"

      # No documentation available.
      #
      TABLET = "TABLET"
    end

    # <p>Represents the device instance.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the device instance.</p>
    #
    #   @return [String]
    #
    # @!attribute device_arn
    #   <p>The ARN of the device.</p>
    #
    #   @return [String]
    #
    # @!attribute labels
    #   <p>An array of strings that describe the device instance.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute status
    #   <p>The status of the device instance. Valid values are listed here.</p>
    #
    #   Enum, one of: ["IN_USE", "PREPARING", "AVAILABLE", "NOT_AVAILABLE"]
    #
    #   @return [String]
    #
    # @!attribute udid
    #   <p>Unique device identifier for the device instance.</p>
    #
    #   @return [String]
    #
    # @!attribute instance_profile
    #   <p>A object that contains information about the instance profile.</p>
    #
    #   @return [InstanceProfile]
    #
    DeviceInstance = ::Struct.new(
      :arn,
      :device_arn,
      :labels,
      :status,
      :udid,
      :instance_profile,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the total (metered or unmetered) minutes used by the resource to run
    #             tests. Contains the sum of minutes consumed by all children.</p>
    #
    # @!attribute total
    #   <p>When specified, represents the total minutes used by the resource to run
    #               tests.</p>
    #
    #   @return [Float]
    #
    # @!attribute metered
    #   <p>When specified, represents only the sum of metered minutes used by the resource to
    #               run tests.</p>
    #
    #   @return [Float]
    #
    # @!attribute unmetered
    #   <p>When specified, represents only the sum of unmetered minutes used by the resource
    #               to run tests.</p>
    #
    #   @return [Float]
    #
    DeviceMinutes = ::Struct.new(
      :total,
      :metered,
      :unmetered,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for DevicePlatform
    #
    module DevicePlatform
      # No documentation available.
      #
      ANDROID = "ANDROID"

      # No documentation available.
      #
      IOS = "IOS"
    end

    # <p>Represents a collection of device types.</p>
    #
    # @!attribute arn
    #   <p>The device pool's ARN.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The device pool's name.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>The device pool's description.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The device pool's type.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>CURATED: A device pool that is created and managed by AWS Device
    #                       Farm.</p>
    #               </li>
    #               <li>
    #                   <p>PRIVATE: A device pool that is created and managed by the device pool
    #                       developer.</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["CURATED", "PRIVATE"]
    #
    #   @return [String]
    #
    # @!attribute rules
    #   <p>Information about the device pool's rules.</p>
    #
    #   @return [Array<Rule>]
    #
    # @!attribute max_devices
    #   <p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are
    #               available and meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many
    #               devices meet these constraints, your device pool might contain fewer devices than the value for this
    #               parameter.</p>
    #           <p>By specifying the maximum number of devices, you can control the costs that you incur
    #               by running tests.</p>
    #
    #   @return [Integer]
    #
    DevicePool = ::Struct.new(
      :arn,
      :name,
      :description,
      :type,
      :rules,
      :max_devices,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a device pool compatibility result.</p>
    #
    # @!attribute device
    #   <p>The device (phone or tablet) to return information about.</p>
    #
    #   @return [Device]
    #
    # @!attribute compatible
    #   <p>Whether the result was compatible with the device pool.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute incompatibility_messages
    #   <p>Information about the compatibility.</p>
    #
    #   @return [Array<IncompatibilityMessage>]
    #
    DevicePoolCompatibilityResult = ::Struct.new(
      :device,
      :compatible,
      :incompatibility_messages,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for DevicePoolType
    #
    module DevicePoolType
      # No documentation available.
      #
      CURATED = "CURATED"

      # No documentation available.
      #
      PRIVATE = "PRIVATE"
    end

    # <p>Represents the device filters used in a test run and the maximum number of devices to be included in the
    #             run. It is passed in as the <code>deviceSelectionConfiguration</code> request parameter in <a>ScheduleRun</a>.</p>
    #
    # @!attribute filters
    #   <p>Used to dynamically select a set of devices for a test run. A filter is made up of an
    #               attribute, an operator, and one or more values.</p>
    #           <ul>
    #               <li>
    #                   <p>
    #                     <b>Attribute</b>
    #                  </p>
    #                   <p>The aspect of a device such as platform or model used as the selection
    #                       criteria in a device filter.</p>
    #                   <p>Allowed values include:</p>
    #                   <ul>
    #                     <li>
    #                           <p>ARN: The Amazon Resource Name (ARN) of the device (for example,
    #                                   <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>).</p>
    #                       </li>
    #                     <li>
    #                           <p>PLATFORM: The device platform. Valid values are ANDROID or
    #                               IOS.</p>
    #                       </li>
    #                     <li>
    #                           <p>OS_VERSION: The operating system version (for example,
    #                               10.3.2).</p>
    #                       </li>
    #                     <li>
    #                           <p>MODEL: The device model (for example, iPad 5th Gen).</p>
    #                       </li>
    #                     <li>
    #                           <p>AVAILABILITY: The current availability of the device. Valid values
    #                               are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
    #                               TEMPORARY_NOT_AVAILABLE.</p>
    #                       </li>
    #                     <li>
    #                           <p>FORM_FACTOR: The device form factor. Valid values are PHONE or
    #                               TABLET.</p>
    #                       </li>
    #                     <li>
    #                           <p>MANUFACTURER: The device manufacturer (for example,
    #                               Apple).</p>
    #                       </li>
    #                     <li>
    #                           <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote
    #                               access. Valid values are TRUE or FALSE.</p>
    #                       </li>
    #                     <li>
    #                           <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote debugging. Valid values
    #                               are TRUE or FALSE. Because remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
    #                                   longer supported</a>, this filter is ignored.</p>
    #                       </li>
    #                     <li>
    #                           <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device
    #                               instance.</p>
    #                       </li>
    #                     <li>
    #                           <p>INSTANCE_LABELS: The label of the device instance.</p>
    #                       </li>
    #                     <li>
    #                           <p>FLEET_TYPE: The fleet type. Valid values are PUBLIC or PRIVATE.</p>
    #                       </li>
    #                  </ul>
    #               </li>
    #               <li>
    #                   <p>
    #                     <b>Operator</b>
    #                  </p>
    #                   <p>The filter operator.</p>
    #                   <ul>
    #                     <li>
    #                           <p>The EQUALS operator is available for every attribute except
    #                               INSTANCE_LABELS.</p>
    #                       </li>
    #                     <li>
    #                           <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL
    #                               attributes.</p>
    #                       </li>
    #                     <li>
    #                           <p>The IN and NOT_IN operators are available for the ARN, OS_VERSION,
    #                               MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p>
    #                       </li>
    #                     <li>
    #                           <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and
    #                               GREATER_THAN_OR_EQUALS operators are also available for the OS_VERSION
    #                               attribute.</p>
    #                       </li>
    #                  </ul>
    #               </li>
    #               <li>
    #                   <p>
    #                     <b>Values</b>
    #                  </p>
    #                   <p>An array of one or more filter values.</p>
    #                   <p class="title">
    #                     <b>Operator Values</b>
    #                  </p>
    #                  <ul>
    #                     <li>
    #                           <p>The IN and NOT_IN operators can take a values array that has more than
    #                               one element.</p>
    #                       </li>
    #                     <li>
    #                           <p>The other operators require an array with a single element.</p>
    #                       </li>
    #                  </ul>
    #                   <p class="title">
    #                     <b>Attribute Values</b>
    #                  </p>
    #                  <ul>
    #                     <li>
    #                           <p>The PLATFORM attribute can be set to ANDROID or IOS.</p>
    #                       </li>
    #                     <li>
    #                           <p>The AVAILABILITY attribute can be set to AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
    #                               TEMPORARY_NOT_AVAILABLE.</p>
    #                       </li>
    #                     <li>
    #                           <p>The FORM_FACTOR attribute can be set to PHONE or TABLET.</p>
    #                       </li>
    #                     <li>
    #                           <p>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</p>
    #                       </li>
    #                  </ul>
    #               </li>
    #            </ul>
    #
    #   @return [Array<DeviceFilter>]
    #
    # @!attribute max_devices
    #   <p>The maximum number of devices to be included in a test run.</p>
    #
    #   @return [Integer]
    #
    DeviceSelectionConfiguration = ::Struct.new(
      :filters,
      :max_devices,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains the run results requested by the device selection configuration and how many devices were
    #             returned. For an example of the JSON response syntax, see <a>ScheduleRun</a>.</p>
    #
    # @!attribute filters
    #   <p>The filters in a device selection result.</p>
    #
    #   @return [Array<DeviceFilter>]
    #
    # @!attribute matched_devices_count
    #   <p>The number of devices that matched the device filter selection criteria.</p>
    #
    #   @return [Integer]
    #
    # @!attribute max_devices
    #   <p>The maximum number of devices to be selected by a device filter and included in a test
    #               run.</p>
    #
    #   @return [Integer]
    #
    DeviceSelectionResult = ::Struct.new(
      :filters,
      :matched_devices_count,
      :max_devices,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents configuration information about a test run, such as the execution
    #             timeout (in minutes).</p>
    #
    # @!attribute job_timeout_minutes
    #   <p>The number of minutes a test run executes before it times out.</p>
    #
    #   @return [Integer]
    #
    # @!attribute accounts_cleanup
    #   <p>True if account cleanup is enabled at the beginning of the test. Otherwise, false.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute app_packages_cleanup
    #   <p>True if app package cleanup is enabled at the beginning of the test. Otherwise, false.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute video_capture
    #   <p>Set to true to enable video capture. Otherwise, set to false. The default is true.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute skip_app_resign
    #   <p>When set to <code>true</code>, for private devices, Device Farm does not sign your app again. For public
    #               devices, Device Farm always signs your apps again.</p>
    #           <p>For more information about how Device Farm re-signs your apps, see <a href="https://aws.amazon.com/device-farm/faq/">Do you modify my app?</a> in the <i>AWS Device
    #                   Farm FAQs</i>.</p>
    #
    #   @return [Boolean]
    #
    ExecutionConfiguration = ::Struct.new(
      :job_timeout_minutes,
      :accounts_cleanup,
      :app_packages_cleanup,
      :video_capture,
      :skip_app_resign,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for ExecutionResult
    #
    module ExecutionResult
      # No documentation available.
      #
      PENDING = "PENDING"

      # No documentation available.
      #
      PASSED = "PASSED"

      # No documentation available.
      #
      WARNED = "WARNED"

      # No documentation available.
      #
      FAILED = "FAILED"

      # No documentation available.
      #
      SKIPPED = "SKIPPED"

      # No documentation available.
      #
      ERRORED = "ERRORED"

      # No documentation available.
      #
      STOPPED = "STOPPED"
    end

    # Includes enum constants for ExecutionResultCode
    #
    module ExecutionResultCode
      # No documentation available.
      #
      PARSING_FAILED = "PARSING_FAILED"

      # No documentation available.
      #
      VPC_ENDPOINT_SETUP_FAILED = "VPC_ENDPOINT_SETUP_FAILED"
    end

    # Includes enum constants for ExecutionStatus
    #
    module ExecutionStatus
      # No documentation available.
      #
      PENDING = "PENDING"

      # No documentation available.
      #
      PENDING_CONCURRNECY = "PENDING_CONCURRENCY"

      # No documentation available.
      #
      PENDING_DEVICE = "PENDING_DEVICE"

      # No documentation available.
      #
      PROCESSING = "PROCESSING"

      # No documentation available.
      #
      SCHEDULING = "SCHEDULING"

      # No documentation available.
      #
      PREPARING = "PREPARING"

      # No documentation available.
      #
      RUNNING = "RUNNING"

      # No documentation available.
      #
      COMPLETED = "COMPLETED"

      # No documentation available.
      #
      STOPPING = "STOPPING"
    end

    # <p>Represents the request sent to retrieve the account settings.</p>
    #
    GetAccountSettingsInput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the account settings return values from the
    #                 <code>GetAccountSettings</code> request.</p>
    #
    # @!attribute account_settings
    #   <p>The account settings.</p>
    #
    #   @return [AccountSettings]
    #
    GetAccountSettingsOutput = ::Struct.new(
      :account_settings,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the get device request.</p>
    #
    # @!attribute arn
    #   <p>The device type's ARN.</p>
    #
    #   @return [String]
    #
    GetDeviceInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the instance you're requesting information
    #               about.</p>
    #
    #   @return [String]
    #
    GetDeviceInstanceInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute device_instance
    #   <p>An object that contains information about your device instance.</p>
    #
    #   @return [DeviceInstance]
    #
    GetDeviceInstanceOutput = ::Struct.new(
      :device_instance,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a get device request.</p>
    #
    # @!attribute device
    #   <p>An object that contains information about the requested device.</p>
    #
    #   @return [Device]
    #
    GetDeviceOutput = ::Struct.new(
      :device,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the get device pool compatibility operation.</p>
    #
    # @!attribute device_pool_arn
    #   <p>The device pool's ARN.</p>
    #
    #   @return [String]
    #
    # @!attribute app_arn
    #   <p>The ARN of the app that is associated with the specified device pool.</p>
    #
    #   @return [String]
    #
    # @!attribute test_type
    #   <p>The test type for the specified device pool.</p>
    #           <p>Allowed values include the following:</p>
    #           <ul>
    #               <li>
    #                   <p>BUILTIN_FUZZ.</p>
    #               </li>
    #               <li>
    #                   <p>BUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting with
    #                       it and capturing screenshots at the same time.</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_JUNIT.</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_TESTNG.</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_PYTHON.</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_NODE.</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_RUBY.</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_JUNIT.</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_TESTNG.</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_PYTHON.</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_NODE.</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_RUBY.</p>
    #               </li>
    #               <li>
    #                   <p>CALABASH.</p>
    #               </li>
    #               <li>
    #                   <p>INSTRUMENTATION.</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATION.</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATOR.</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST.</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_UI.</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["BUILTIN_FUZZ", "BUILTIN_EXPLORER", "WEB_PERFORMANCE_PROFILE", "APPIUM_JAVA_JUNIT", "APPIUM_JAVA_TESTNG", "APPIUM_PYTHON", "APPIUM_NODE", "APPIUM_RUBY", "APPIUM_WEB_JAVA_JUNIT", "APPIUM_WEB_JAVA_TESTNG", "APPIUM_WEB_PYTHON", "APPIUM_WEB_NODE", "APPIUM_WEB_RUBY", "CALABASH", "INSTRUMENTATION", "UIAUTOMATION", "UIAUTOMATOR", "XCTEST", "XCTEST_UI", "REMOTE_ACCESS_RECORD", "REMOTE_ACCESS_REPLAY"]
    #
    #   @return [String]
    #
    # @!attribute test
    #   <p>Information about the uploaded test to be run against the device pool.</p>
    #
    #   @return [ScheduleRunTest]
    #
    # @!attribute configuration
    #   <p>An object that contains information about the settings for a run.</p>
    #
    #   @return [ScheduleRunConfiguration]
    #
    GetDevicePoolCompatibilityInput = ::Struct.new(
      :device_pool_arn,
      :app_arn,
      :test_type,
      :test,
      :configuration,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of describe device pool compatibility request.</p>
    #
    # @!attribute compatible_devices
    #   <p>Information about compatible devices.</p>
    #
    #   @return [Array<DevicePoolCompatibilityResult>]
    #
    # @!attribute incompatible_devices
    #   <p>Information about incompatible devices.</p>
    #
    #   @return [Array<DevicePoolCompatibilityResult>]
    #
    GetDevicePoolCompatibilityOutput = ::Struct.new(
      :compatible_devices,
      :incompatible_devices,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the get device pool operation.</p>
    #
    # @!attribute arn
    #   <p>The device pool's ARN.</p>
    #
    #   @return [String]
    #
    GetDevicePoolInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a get device pool request.</p>
    #
    # @!attribute device_pool
    #   <p>An object that contains information about the requested device pool.</p>
    #
    #   @return [DevicePool]
    #
    GetDevicePoolOutput = ::Struct.new(
      :device_pool,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of an instance profile.</p>
    #
    #   @return [String]
    #
    GetInstanceProfileInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_profile
    #   <p>An object that contains information about an instance profile.</p>
    #
    #   @return [InstanceProfile]
    #
    GetInstanceProfileOutput = ::Struct.new(
      :instance_profile,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the get job operation.</p>
    #
    # @!attribute arn
    #   <p>The job's ARN.</p>
    #
    #   @return [String]
    #
    GetJobInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a get job request.</p>
    #
    # @!attribute job
    #   <p>An object that contains information about the requested job.</p>
    #
    #   @return [Job]
    #
    GetJobOutput = ::Struct.new(
      :job,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute arn
    #   <p>The ARN of the network profile to return information about.</p>
    #
    #   @return [String]
    #
    GetNetworkProfileInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute network_profile
    #   <p>The network profile.</p>
    #
    #   @return [NetworkProfile]
    #
    GetNetworkProfileOutput = ::Struct.new(
      :network_profile,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the request to retrieve the offering status for the specified customer
    #             or account.</p>
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    GetOfferingStatusInput = ::Struct.new(
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Returns the status result for a device offering.</p>
    #
    # @!attribute current
    #   <p>When specified, gets the offering status for the current period.</p>
    #
    #   @return [Hash<String, OfferingStatus>]
    #
    # @!attribute next_period
    #   <p>When specified, gets the offering status for the next period.</p>
    #
    #   @return [Hash<String, OfferingStatus>]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    GetOfferingStatusOutput = ::Struct.new(
      :current,
      :next_period,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the get project operation.</p>
    #
    # @!attribute arn
    #   <p>The project's ARN.</p>
    #
    #   @return [String]
    #
    GetProjectInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a get project request.</p>
    #
    # @!attribute project
    #   <p>The project to get information about.</p>
    #
    #   @return [Project]
    #
    GetProjectOutput = ::Struct.new(
      :project,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the request to get information about the specified remote access
    #             session.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the remote access session about which you want to
    #               get session information.</p>
    #
    #   @return [String]
    #
    GetRemoteAccessSessionInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the response from the server that lists detailed information about the
    #             remote access session.</p>
    #
    # @!attribute remote_access_session
    #   <p>A container that lists detailed information about the remote access
    #               session.</p>
    #
    #   @return [RemoteAccessSession]
    #
    GetRemoteAccessSessionOutput = ::Struct.new(
      :remote_access_session,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the get run operation.</p>
    #
    # @!attribute arn
    #   <p>The run's ARN.</p>
    #
    #   @return [String]
    #
    GetRunInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a get run request.</p>
    #
    # @!attribute run
    #   <p>The run to get results from.</p>
    #
    #   @return [Run]
    #
    GetRunOutput = ::Struct.new(
      :run,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the get suite operation.</p>
    #
    # @!attribute arn
    #   <p>The suite's ARN.</p>
    #
    #   @return [String]
    #
    GetSuiteInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a get suite request.</p>
    #
    # @!attribute suite
    #   <p>A collection of one or more tests.</p>
    #
    #   @return [Suite]
    #
    GetSuiteOutput = ::Struct.new(
      :suite,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute project_arn
    #   <p>The ARN of the Selenium testing project, from either <a>CreateTestGridProject</a> or <a>ListTestGridProjects</a>.</p>
    #
    #   @return [String]
    #
    GetTestGridProjectInput = ::Struct.new(
      :project_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute test_grid_project
    #   <p>A <a>TestGridProject</a>.</p>
    #
    #   @return [TestGridProject]
    #
    GetTestGridProjectOutput = ::Struct.new(
      :test_grid_project,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute project_arn
    #   <p>The ARN for the project that this session belongs to. See <a>CreateTestGridProject</a> and <a>ListTestGridProjects</a>.</p>
    #
    #   @return [String]
    #
    # @!attribute session_id
    #   <p>An ID associated with this session.</p>
    #
    #   @return [String]
    #
    # @!attribute session_arn
    #   <p>An ARN that uniquely identifies a <a>TestGridSession</a>.</p>
    #
    #   @return [String]
    #
    GetTestGridSessionInput = ::Struct.new(
      :project_arn,
      :session_id,
      :session_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute test_grid_session
    #   <p>The <a>TestGridSession</a> that was requested.</p>
    #
    #   @return [TestGridSession]
    #
    GetTestGridSessionOutput = ::Struct.new(
      :test_grid_session,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the get test operation.</p>
    #
    # @!attribute arn
    #   <p>The test's ARN.</p>
    #
    #   @return [String]
    #
    GetTestInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a get test request.</p>
    #
    # @!attribute test
    #   <p>A test condition that is evaluated.</p>
    #
    #   @return [Test]
    #
    GetTestOutput = ::Struct.new(
      :test,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the get upload operation.</p>
    #
    # @!attribute arn
    #   <p>The upload's ARN.</p>
    #
    #   @return [String]
    #
    GetUploadInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a get upload request.</p>
    #
    # @!attribute upload
    #   <p>An app or a set of one or more tests to upload or that have been
    #               uploaded.</p>
    #
    #   @return [Upload]
    #
    GetUploadOutput = ::Struct.new(
      :upload,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to
    #               describe.</p>
    #
    #   @return [String]
    #
    GetVPCEConfigurationInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute vpce_configuration
    #   <p>An object that contains information about your VPC endpoint configuration.</p>
    #
    #   @return [VPCEConfiguration]
    #
    GetVPCEConfigurationOutput = ::Struct.new(
      :vpce_configuration,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>An entity with the same name already exists.</p>
    #
    # @!attribute message
    #   <p>Any additional information about the exception.</p>
    #
    #   @return [String]
    #
    IdempotencyException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents information about incompatibility.</p>
    #
    # @!attribute message
    #   <p>A message about the incompatibility.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The type of incompatibility.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>ARN</p>
    #               </li>
    #               <li>
    #                   <p>FORM_FACTOR (for example, phone or tablet)</p>
    #               </li>
    #               <li>
    #                   <p>MANUFACTURER</p>
    #               </li>
    #               <li>
    #                   <p>PLATFORM (for example, Android or iOS)</p>
    #               </li>
    #               <li>
    #                   <p>REMOTE_ACCESS_ENABLED</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_VERSION</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["ARN", "PLATFORM", "FORM_FACTOR", "MANUFACTURER", "REMOTE_ACCESS_ENABLED", "REMOTE_DEBUG_ENABLED", "APPIUM_VERSION", "INSTANCE_ARN", "INSTANCE_LABELS", "FLEET_TYPE", "OS_VERSION", "MODEL", "AVAILABILITY"]
    #
    #   @return [String]
    #
    IncompatibilityMessage = ::Struct.new(
      :message,
      :type,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the request to install an Android application (in .apk format) or an iOS
    #             application (in .ipa format) as part of a remote access session.</p>
    #
    # @!attribute remote_access_session_arn
    #   <p>The Amazon Resource Name (ARN) of the remote access session about which you are
    #               requesting information.</p>
    #
    #   @return [String]
    #
    # @!attribute app_arn
    #   <p>The ARN of the app about which you are requesting information.</p>
    #
    #   @return [String]
    #
    InstallToRemoteAccessSessionInput = ::Struct.new(
      :remote_access_session_arn,
      :app_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the response from the server after AWS Device Farm makes a request to
    #             install to a remote access session.</p>
    #
    # @!attribute app_upload
    #   <p>An app to upload or that has been uploaded.</p>
    #
    #   @return [Upload]
    #
    InstallToRemoteAccessSessionOutput = ::Struct.new(
      :app_upload,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the instance profile.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the instance profile.</p>
    #
    #   @return [String]
    #
    # @!attribute package_cleanup
    #   <p>When set to <code>true</code>, Device Farm removes app packages after a test run. The default value is
    #                   <code>false</code> for private devices.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute exclude_app_packages_from_cleanup
    #   <p>An array of strings containing the list of app packages that should not be cleaned up from the device
    #               after a test run completes.</p>
    #           <p>The list of packages is considered only if you set <code>packageCleanup</code> to
    #               <code>true</code>.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute reboot_after_use
    #   <p>When set to <code>true</code>, Device Farm reboots the instance after a test run. The default value is
    #                   <code>true</code>.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute name
    #   <p>The name of the instance profile.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>The description of the instance profile.</p>
    #
    #   @return [String]
    #
    InstanceProfile = ::Struct.new(
      :arn,
      :package_cleanup,
      :exclude_app_packages_from_cleanup,
      :reboot_after_use,
      :name,
      :description,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for InstanceStatus
    #
    module InstanceStatus
      # No documentation available.
      #
      IN_USE = "IN_USE"

      # No documentation available.
      #
      PREPARING = "PREPARING"

      # No documentation available.
      #
      AVAILABLE = "AVAILABLE"

      # No documentation available.
      #
      NOT_AVAILABLE = "NOT_AVAILABLE"
    end

    # Includes enum constants for InteractionMode
    #
    module InteractionMode
      # No documentation available.
      #
      INTERACTIVE = "INTERACTIVE"

      # No documentation available.
      #
      NO_VIDEO = "NO_VIDEO"

      # No documentation available.
      #
      VIDEO_ONLY = "VIDEO_ONLY"
    end

    # <p>An internal exception was raised in the service. Contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a> if you see this
    #          error. </p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    InternalServiceException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>There was an error with the update request, or you do not have sufficient permissions
    #             to update this VPC endpoint configuration.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    InvalidOperationException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a device.</p>
    #
    # @!attribute arn
    #   <p>The job's ARN.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The job's name.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The job's type.</p>
    #           <p>Allowed values include the following:</p>
    #           <ul>
    #               <li>
    #                   <p>BUILTIN_FUZZ</p>
    #               </li>
    #               <li>
    #                   <p>BUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting with
    #                       it and capturing screenshots at the same time.</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_JUNIT</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_TESTNG</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_PYTHON</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_NODE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_RUBY</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_JUNIT</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_TESTNG</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_PYTHON</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_NODE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_RUBY</p>
    #               </li>
    #               <li>
    #                   <p>CALABASH</p>
    #               </li>
    #               <li>
    #                   <p>INSTRUMENTATION</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATION</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATOR</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_UI</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["BUILTIN_FUZZ", "BUILTIN_EXPLORER", "WEB_PERFORMANCE_PROFILE", "APPIUM_JAVA_JUNIT", "APPIUM_JAVA_TESTNG", "APPIUM_PYTHON", "APPIUM_NODE", "APPIUM_RUBY", "APPIUM_WEB_JAVA_JUNIT", "APPIUM_WEB_JAVA_TESTNG", "APPIUM_WEB_PYTHON", "APPIUM_WEB_NODE", "APPIUM_WEB_RUBY", "CALABASH", "INSTRUMENTATION", "UIAUTOMATION", "UIAUTOMATOR", "XCTEST", "XCTEST_UI", "REMOTE_ACCESS_RECORD", "REMOTE_ACCESS_REPLAY"]
    #
    #   @return [String]
    #
    # @!attribute created
    #   <p>When the job was created.</p>
    #
    #   @return [Time]
    #
    # @!attribute status
    #   <p>The job's status.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>PENDING</p>
    #               </li>
    #               <li>
    #                   <p>PENDING_CONCURRENCY</p>
    #               </li>
    #               <li>
    #                   <p>PENDING_DEVICE</p>
    #               </li>
    #               <li>
    #                   <p>PROCESSING</p>
    #               </li>
    #               <li>
    #                   <p>SCHEDULING</p>
    #               </li>
    #               <li>
    #                   <p>PREPARING</p>
    #               </li>
    #               <li>
    #                   <p>RUNNING</p>
    #               </li>
    #               <li>
    #                   <p>COMPLETED</p>
    #               </li>
    #               <li>
    #                   <p>STOPPING</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["PENDING", "PENDING_CONCURRENCY", "PENDING_DEVICE", "PROCESSING", "SCHEDULING", "PREPARING", "RUNNING", "COMPLETED", "STOPPING"]
    #
    #   @return [String]
    #
    # @!attribute result
    #   <p>The job's result.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>PENDING</p>
    #               </li>
    #               <li>
    #                   <p>PASSED</p>
    #               </li>
    #               <li>
    #                   <p>WARNED</p>
    #               </li>
    #               <li>
    #                   <p>FAILED</p>
    #               </li>
    #               <li>
    #                   <p>SKIPPED</p>
    #               </li>
    #               <li>
    #                   <p>ERRORED</p>
    #               </li>
    #               <li>
    #                   <p>STOPPED</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["PENDING", "PASSED", "WARNED", "FAILED", "SKIPPED", "ERRORED", "STOPPED"]
    #
    #   @return [String]
    #
    # @!attribute started
    #   <p>The job's start time.</p>
    #
    #   @return [Time]
    #
    # @!attribute stopped
    #   <p>The job's stop time.</p>
    #
    #   @return [Time]
    #
    # @!attribute counters
    #   <p>The job's result counters.</p>
    #
    #   @return [Counters]
    #
    # @!attribute message
    #   <p>A message about the job's result.</p>
    #
    #   @return [String]
    #
    # @!attribute device
    #   <p>The device (phone or tablet).</p>
    #
    #   @return [Device]
    #
    # @!attribute instance_arn
    #   <p>The ARN of the instance.</p>
    #
    #   @return [String]
    #
    # @!attribute device_minutes
    #   <p>Represents the total (metered or unmetered) minutes used by the job.</p>
    #
    #   @return [DeviceMinutes]
    #
    # @!attribute video_endpoint
    #   <p>The endpoint for streaming device video.</p>
    #
    #   @return [String]
    #
    # @!attribute video_capture
    #   <p>This value is set to true if video capture is enabled. Otherwise, it is set to false.</p>
    #
    #   @return [Boolean]
    #
    Job = ::Struct.new(
      :arn,
      :name,
      :type,
      :created,
      :status,
      :result,
      :started,
      :stopped,
      :counters,
      :message,
      :device,
      :instance_arn,
      :device_minutes,
      :video_endpoint,
      :video_capture,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>A limit was exceeded.</p>
    #
    # @!attribute message
    #   <p>Any additional information about the exception.</p>
    #
    #   @return [String]
    #
    LimitExceededException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the list artifacts operation.</p>
    #
    # @!attribute arn
    #   <p>The run, job, suite, or test ARN.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The artifacts' type.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>FILE</p>
    #               </li>
    #               <li>
    #                   <p>LOG</p>
    #               </li>
    #               <li>
    #                   <p>SCREENSHOT</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["SCREENSHOT", "FILE", "LOG"]
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListArtifactsInput = ::Struct.new(
      :arn,
      :type,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a list artifacts operation.</p>
    #
    # @!attribute artifacts
    #   <p>Information about the artifacts.</p>
    #
    #   @return [Array<Artifact>]
    #
    # @!attribute next_token
    #   <p>If the number of items that are returned is significantly large, this is an identifier that is also
    #               returned. It can be used in a subsequent call to this operation to return the next set of items in the
    #               list.</p>
    #
    #   @return [String]
    #
    ListArtifactsOutput = ::Struct.new(
      :artifacts,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute max_results
    #   <p>An integer that specifies the maximum number of items you want to return in the API response.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can be
    #               used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListDeviceInstancesInput = ::Struct.new(
      :max_results,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute device_instances
    #   <p>An object that contains information about your device instances.</p>
    #
    #   @return [Array<DeviceInstance>]
    #
    # @!attribute next_token
    #   <p>An identifier that can be used in the next call to this operation to return the next
    #               set of items in the list.</p>
    #
    #   @return [String]
    #
    ListDeviceInstancesOutput = ::Struct.new(
      :device_instances,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a list device pools request.</p>
    #
    # @!attribute arn
    #   <p>The project ARN.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The device pools' type.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>CURATED: A device pool that is created and managed by AWS Device
    #                       Farm.</p>
    #               </li>
    #               <li>
    #                   <p>PRIVATE: A device pool that is created and managed by the device pool
    #                       developer.</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["CURATED", "PRIVATE"]
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListDevicePoolsInput = ::Struct.new(
      :arn,
      :type,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a list device pools request.</p>
    #
    # @!attribute device_pools
    #   <p>Information about the device pools.</p>
    #
    #   @return [Array<DevicePool>]
    #
    # @!attribute next_token
    #   <p>If the number of items that are returned is significantly large, this is an identifier that is also
    #               returned. It can be used in a subsequent call to this operation to return the next set of items in the
    #               list.</p>
    #
    #   @return [String]
    #
    ListDevicePoolsOutput = ::Struct.new(
      :device_pools,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a list devices request.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the project.</p>
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    # @!attribute filters
    #   <p>Used to select a set of devices. A filter is made up of an attribute, an operator, and
    #               one or more values.</p>
    #           <ul>
    #               <li>
    #                   <p>Attribute: The aspect of a device such as platform or model used as the
    #                       selection criteria in a device filter.</p>
    #                   <p>Allowed values include:</p>
    #                   <ul>
    #                     <li>
    #                           <p>ARN: The Amazon Resource Name (ARN) of the device (for example,
    #                                   <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>).</p>
    #                       </li>
    #                     <li>
    #                           <p>PLATFORM: The device platform. Valid values are ANDROID or IOS.</p>
    #                       </li>
    #                     <li>
    #                           <p>OS_VERSION: The operating system version (for example, 10.3.2).</p>
    #                       </li>
    #                     <li>
    #                           <p>MODEL: The device model (for example, iPad 5th Gen).</p>
    #                       </li>
    #                     <li>
    #                           <p>AVAILABILITY: The current availability of the device. Valid values are AVAILABLE,
    #                               HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p>
    #                       </li>
    #                     <li>
    #                           <p>FORM_FACTOR: The device form factor. Valid values are PHONE or TABLET.</p>
    #                       </li>
    #                     <li>
    #                           <p>MANUFACTURER: The device manufacturer (for example, Apple).</p>
    #                       </li>
    #                     <li>
    #                           <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access. Valid values
    #                               are TRUE or FALSE.</p>
    #                       </li>
    #                     <li>
    #                           <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote debugging. Valid values
    #                               are TRUE or FALSE. Because remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
    #                                   longer supported</a>, this attribute is ignored.</p>
    #                       </li>
    #                     <li>
    #                           <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device
    #                               instance.</p>
    #                       </li>
    #                     <li>
    #                           <p>INSTANCE_LABELS: The label of the device instance.</p>
    #                       </li>
    #                     <li>
    #                           <p>FLEET_TYPE: The fleet type. Valid values are PUBLIC or PRIVATE.</p>
    #                       </li>
    #                  </ul>
    #               </li>
    #               <li>
    #                   <p>Operator: The filter operator.</p>
    #                   <ul>
    #                     <li>
    #                           <p>The EQUALS operator is available for every attribute except
    #                               INSTANCE_LABELS.</p>
    #                       </li>
    #                     <li>
    #                           <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL
    #                               attributes.</p>
    #                       </li>
    #                     <li>
    #                           <p>The IN and NOT_IN operators are available for the ARN, OS_VERSION,
    #                               MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p>
    #                       </li>
    #                     <li>
    #                           <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and
    #                               GREATER_THAN_OR_EQUALS operators are also available for the OS_VERSION
    #                               attribute.</p>
    #                       </li>
    #                  </ul>
    #               </li>
    #               <li>
    #                   <p>Values: An array of one or more filter values.</p>
    #                   <ul>
    #                     <li>
    #                           <p>The IN and NOT_IN operators take a values array that has one or more
    #                               elements.</p>
    #                       </li>
    #                     <li>
    #                           <p>The other operators require an array with a single element.</p>
    #                       </li>
    #                     <li>
    #                           <p>In a request, the AVAILABILITY attribute takes the following values: AVAILABLE,
    #                               HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p>
    #                       </li>
    #                  </ul>
    #               </li>
    #            </ul>
    #
    #   @return [Array<DeviceFilter>]
    #
    ListDevicesInput = ::Struct.new(
      :arn,
      :next_token,
      :filters,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a list devices operation.</p>
    #
    # @!attribute devices
    #   <p>Information about the devices.</p>
    #
    #   @return [Array<Device>]
    #
    # @!attribute next_token
    #   <p>If the number of items that are returned is significantly large, this is an identifier that is also
    #               returned. It can be used in a subsequent call to this operation to return the next set of items in the
    #               list.</p>
    #
    #   @return [String]
    #
    ListDevicesOutput = ::Struct.new(
      :devices,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute max_results
    #   <p>An integer that specifies the maximum number of items you want to return in the API response.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can be
    #               used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListInstanceProfilesInput = ::Struct.new(
      :max_results,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_profiles
    #   <p>An object that contains information about your instance profiles.</p>
    #
    #   @return [Array<InstanceProfile>]
    #
    # @!attribute next_token
    #   <p>An identifier that can be used in the next call to this operation to return the next
    #               set of items in the list.</p>
    #
    #   @return [String]
    #
    ListInstanceProfilesOutput = ::Struct.new(
      :instance_profiles,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the list jobs operation.</p>
    #
    # @!attribute arn
    #   <p>The run's Amazon Resource Name (ARN).</p>
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListJobsInput = ::Struct.new(
      :arn,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a list jobs request.</p>
    #
    # @!attribute jobs
    #   <p>Information about the jobs.</p>
    #
    #   @return [Array<Job>]
    #
    # @!attribute next_token
    #   <p>If the number of items that are returned is significantly large, this is an identifier that is also
    #               returned. It can be used in a subsequent call to this operation to return the next set of items in the
    #               list.</p>
    #
    #   @return [String]
    #
    ListJobsOutput = ::Struct.new(
      :jobs,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the project for which you want to list network
    #               profiles.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The type of network profile to return information about. Valid values are listed here.</p>
    #
    #   Enum, one of: ["CURATED", "PRIVATE"]
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListNetworkProfilesInput = ::Struct.new(
      :arn,
      :type,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute network_profiles
    #   <p>A list of the available network profiles.</p>
    #
    #   @return [Array<NetworkProfile>]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListNetworkProfilesOutput = ::Struct.new(
      :network_profiles,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListOfferingPromotionsInput = ::Struct.new(
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute offering_promotions
    #   <p>Information about the offering promotions.</p>
    #
    #   @return [Array<OfferingPromotion>]
    #
    # @!attribute next_token
    #   <p>An identifier to be used in the next call to this operation, to return the next set
    #               of items in the list.</p>
    #
    #   @return [String]
    #
    ListOfferingPromotionsOutput = ::Struct.new(
      :offering_promotions,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the request to list the offering transaction history.</p>
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListOfferingTransactionsInput = ::Struct.new(
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Returns the transaction log of the specified offerings.</p>
    #
    # @!attribute offering_transactions
    #   <p>The audit log of subscriptions you have purchased and modified through AWS Device
    #               Farm.</p>
    #
    #   @return [Array<OfferingTransaction>]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListOfferingTransactionsOutput = ::Struct.new(
      :offering_transactions,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the request to list all offerings.</p>
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListOfferingsInput = ::Struct.new(
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the return values of the list of offerings.</p>
    #
    # @!attribute offerings
    #   <p>A value that represents the list offering results.</p>
    #
    #   @return [Array<Offering>]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListOfferingsOutput = ::Struct.new(
      :offerings,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the list projects operation.</p>
    #
    # @!attribute arn
    #   <p>Optional. If no Amazon Resource Name (ARN) is specified, then AWS Device Farm
    #               returns a list of all projects for the AWS account. You can also specify a project
    #               ARN.</p>
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListProjectsInput = ::Struct.new(
      :arn,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a list projects request.</p>
    #
    # @!attribute projects
    #   <p>Information about the projects.</p>
    #
    #   @return [Array<Project>]
    #
    # @!attribute next_token
    #   <p>If the number of items that are returned is significantly large, this is an identifier that is also
    #               returned. It can be used in a subsequent call to this operation to return the next set of items in the
    #               list.</p>
    #
    #   @return [String]
    #
    ListProjectsOutput = ::Struct.new(
      :projects,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the request to return information about the remote access
    #             session.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the project about which you are requesting
    #               information.</p>
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListRemoteAccessSessionsInput = ::Struct.new(
      :arn,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the response from the server after AWS Device Farm makes a request to
    #             return information about the remote access session.</p>
    #
    # @!attribute remote_access_sessions
    #   <p>A container that represents the metadata from the service about each remote access session you are
    #               requesting.</p>
    #
    #   @return [Array<RemoteAccessSession>]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListRemoteAccessSessionsOutput = ::Struct.new(
      :remote_access_sessions,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the list runs operation.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the project for which you want to list
    #               runs.</p>
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListRunsInput = ::Struct.new(
      :arn,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a list runs request.</p>
    #
    # @!attribute runs
    #   <p>Information about the runs.</p>
    #
    #   @return [Array<Run>]
    #
    # @!attribute next_token
    #   <p>If the number of items that are returned is significantly large, this is an identifier that is also
    #               returned. It can be used in a subsequent call to this operation to return the next set of items in the
    #               list.</p>
    #
    #   @return [String]
    #
    ListRunsOutput = ::Struct.new(
      :runs,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the list samples operation.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the job used to list samples.</p>
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListSamplesInput = ::Struct.new(
      :arn,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a list samples request.</p>
    #
    # @!attribute samples
    #   <p>Information about the samples.</p>
    #
    #   @return [Array<Sample>]
    #
    # @!attribute next_token
    #   <p>If the number of items that are returned is significantly large, this is an identifier that is also
    #               returned. It can be used in a subsequent call to this operation to return the next set of items in the
    #               list.</p>
    #
    #   @return [String]
    #
    ListSamplesOutput = ::Struct.new(
      :samples,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the list suites operation.</p>
    #
    # @!attribute arn
    #   <p>The job's Amazon Resource Name (ARN).</p>
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListSuitesInput = ::Struct.new(
      :arn,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a list suites request.</p>
    #
    # @!attribute suites
    #   <p>Information about the suites.</p>
    #
    #   @return [Array<Suite>]
    #
    # @!attribute next_token
    #   <p>If the number of items that are returned is significantly large, this is an identifier that is also
    #               returned. It can be used in a subsequent call to this operation to return the next set of items in the
    #               list.</p>
    #
    #   @return [String]
    #
    ListSuitesOutput = ::Struct.new(
      :suites,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute resource_arn
    #   <p>The Amazon Resource Name (ARN) of the resource or resources for which to list tags. You can associate tags
    #               with the following Device Farm resources: <code>PROJECT</code>, <code>RUN</code>,
    #                   <code>NETWORK_PROFILE</code>, <code>INSTANCE_PROFILE</code>, <code>DEVICE_INSTANCE</code>,
    #                   <code>SESSION</code>, <code>DEVICE_POOL</code>, <code>DEVICE</code>, and
    #               <code>VPCE_CONFIGURATION</code>.</p>
    #
    #   @return [String]
    #
    ListTagsForResourceInput = ::Struct.new(
      :resource_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute tags
    #   <p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum
    #               character length of 128 characters. Tag values can have a maximum length of 256 characters.</p>
    #
    #   @return [Array<Tag>]
    #
    ListTagsForResourceOutput = ::Struct.new(
      :tags,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute max_result
    #   <p>Return no more than this number of results.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>From a response, used to continue a paginated listing. </p>
    #
    #   @return [String]
    #
    ListTestGridProjectsInput = ::Struct.new(
      :max_result,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute test_grid_projects
    #   <p>The list of TestGridProjects, based on a <a>ListTestGridProjectsRequest</a>.</p>
    #
    #   @return [Array<TestGridProject>]
    #
    # @!attribute next_token
    #   <p>Used for pagination. Pass into <a>ListTestGridProjects</a> to get more results in a paginated
    #            request.</p>
    #
    #   @return [String]
    #
    ListTestGridProjectsOutput = ::Struct.new(
      :test_grid_projects,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute session_arn
    #   <p>The ARN of the session to retrieve.</p>
    #
    #   @return [String]
    #
    # @!attribute max_result
    #   <p>The maximum number of sessions to return per response.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>Pagination token.</p>
    #
    #   @return [String]
    #
    ListTestGridSessionActionsInput = ::Struct.new(
      :session_arn,
      :max_result,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute actions
    #   <p>The action taken by the session.</p>
    #
    #   @return [Array<TestGridSessionAction>]
    #
    # @!attribute next_token
    #   <p>Pagination token.</p>
    #
    #   @return [String]
    #
    ListTestGridSessionActionsOutput = ::Struct.new(
      :actions,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute session_arn
    #   <p>The ARN of a <a>TestGridSession</a>. </p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>Limit results to a specified type of artifact.</p>
    #
    #   Enum, one of: ["VIDEO", "LOG"]
    #
    #   @return [String]
    #
    # @!attribute max_result
    #   <p>The maximum number of results to be returned by a request.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>Pagination token.</p>
    #
    #   @return [String]
    #
    ListTestGridSessionArtifactsInput = ::Struct.new(
      :session_arn,
      :type,
      :max_result,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute artifacts
    #   <p>A list of test grid session artifacts for a <a>TestGridSession</a>.</p>
    #
    #   @return [Array<TestGridSessionArtifact>]
    #
    # @!attribute next_token
    #   <p>Pagination token.</p>
    #
    #   @return [String]
    #
    ListTestGridSessionArtifactsOutput = ::Struct.new(
      :artifacts,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute project_arn
    #   <p>ARN of a <a>TestGridProject</a>.</p>
    #
    #   @return [String]
    #
    # @!attribute status
    #   <p>Return only sessions in this state.</p>
    #
    #   Enum, one of: ["ACTIVE", "CLOSED", "ERRORED"]
    #
    #   @return [String]
    #
    # @!attribute creation_time_after
    #   <p>Return only sessions created after this time.</p>
    #
    #   @return [Time]
    #
    # @!attribute creation_time_before
    #   <p>Return only  sessions created before this time.</p>
    #
    #   @return [Time]
    #
    # @!attribute end_time_after
    #   <p>Return only sessions that ended after this time.</p>
    #
    #   @return [Time]
    #
    # @!attribute end_time_before
    #   <p>Return only sessions that ended before this time.</p>
    #
    #   @return [Time]
    #
    # @!attribute max_result
    #   <p>Return only this many results at a time.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>Pagination token.</p>
    #
    #   @return [String]
    #
    ListTestGridSessionsInput = ::Struct.new(
      :project_arn,
      :status,
      :creation_time_after,
      :creation_time_before,
      :end_time_after,
      :end_time_before,
      :max_result,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute test_grid_sessions
    #   <p>The sessions that match the criteria in a <a>ListTestGridSessionsRequest</a>. </p>
    #
    #   @return [Array<TestGridSession>]
    #
    # @!attribute next_token
    #   <p>Pagination token.</p>
    #
    #   @return [String]
    #
    ListTestGridSessionsOutput = ::Struct.new(
      :test_grid_sessions,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the list tests operation.</p>
    #
    # @!attribute arn
    #   <p>The test suite's Amazon Resource Name (ARN).</p>
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListTestsInput = ::Struct.new(
      :arn,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a list tests request.</p>
    #
    # @!attribute tests
    #   <p>Information about the tests.</p>
    #
    #   @return [Array<Test>]
    #
    # @!attribute next_token
    #   <p>If the number of items that are returned is significantly large, this is an identifier that is also
    #               returned. It can be used in a subsequent call to this operation to return the next set of items in the
    #               list.</p>
    #
    #   @return [String]
    #
    ListTestsOutput = ::Struct.new(
      :tests,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the list unique problems operation.</p>
    #
    # @!attribute arn
    #   <p>The unique problems' ARNs.</p>
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListUniqueProblemsInput = ::Struct.new(
      :arn,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a list unique problems request.</p>
    #
    # @!attribute unique_problems
    #   <p>Information about the unique problems.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>PENDING</p>
    #               </li>
    #               <li>
    #                   <p>PASSED</p>
    #               </li>
    #               <li>
    #                   <p>WARNED</p>
    #               </li>
    #               <li>
    #                   <p>FAILED</p>
    #               </li>
    #               <li>
    #                   <p>SKIPPED</p>
    #               </li>
    #               <li>
    #                   <p>ERRORED</p>
    #               </li>
    #               <li>
    #                   <p>STOPPED</p>
    #               </li>
    #            </ul>
    #
    #   @return [Hash<String, Array<UniqueProblem>>]
    #
    # @!attribute next_token
    #   <p>If the number of items that are returned is significantly large, this is an identifier that is also
    #               returned. It can be used in a subsequent call to this operation to return the next set of items in the
    #               list.</p>
    #
    #   @return [String]
    #
    ListUniqueProblemsOutput = ::Struct.new(
      :unique_problems,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the list uploads operation.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the project for which you want to list
    #               uploads.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The type of upload.</p>
    #           <p>Must be one of the following values:</p>
    #           <ul>
    #               <li>
    #                   <p>ANDROID_APP</p>
    #               </li>
    #               <li>
    #                   <p>IOS_APP</p>
    #               </li>
    #               <li>
    #                   <p>WEB_APP</p>
    #               </li>
    #               <li>
    #                   <p>EXTERNAL_DATA</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_PYTHON_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_NODE_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_RUBY_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_PYTHON_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_NODE_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_RUBY_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>CALABASH_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>INSTRUMENTATION_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATION_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATOR_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_UI_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_JUNIT_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_TESTNG_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_PYTHON_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_NODE_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p> APPIUM_RUBY_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_PYTHON_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_NODE_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_RUBY_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>INSTRUMENTATION_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_UI_TEST_SPEC</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["ANDROID_APP", "IOS_APP", "WEB_APP", "EXTERNAL_DATA", "APPIUM_JAVA_JUNIT_TEST_PACKAGE", "APPIUM_JAVA_TESTNG_TEST_PACKAGE", "APPIUM_PYTHON_TEST_PACKAGE", "APPIUM_NODE_TEST_PACKAGE", "APPIUM_RUBY_TEST_PACKAGE", "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE", "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE", "APPIUM_WEB_PYTHON_TEST_PACKAGE", "APPIUM_WEB_NODE_TEST_PACKAGE", "APPIUM_WEB_RUBY_TEST_PACKAGE", "CALABASH_TEST_PACKAGE", "INSTRUMENTATION_TEST_PACKAGE", "UIAUTOMATION_TEST_PACKAGE", "UIAUTOMATOR_TEST_PACKAGE", "XCTEST_TEST_PACKAGE", "XCTEST_UI_TEST_PACKAGE", "APPIUM_JAVA_JUNIT_TEST_SPEC", "APPIUM_JAVA_TESTNG_TEST_SPEC", "APPIUM_PYTHON_TEST_SPEC", "APPIUM_NODE_TEST_SPEC", "APPIUM_RUBY_TEST_SPEC", "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC", "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC", "APPIUM_WEB_PYTHON_TEST_SPEC", "APPIUM_WEB_NODE_TEST_SPEC", "APPIUM_WEB_RUBY_TEST_SPEC", "INSTRUMENTATION_TEST_SPEC", "XCTEST_UI_TEST_SPEC"]
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can
    #               be used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListUploadsInput = ::Struct.new(
      :arn,
      :type,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a list uploads request.</p>
    #
    # @!attribute uploads
    #   <p>Information about the uploads.</p>
    #
    #   @return [Array<Upload>]
    #
    # @!attribute next_token
    #   <p>If the number of items that are returned is significantly large, this is an identifier that is also
    #               returned. It can be used in a subsequent call to this operation to return the next set of items in the
    #               list.</p>
    #
    #   @return [String]
    #
    ListUploadsOutput = ::Struct.new(
      :uploads,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute max_results
    #   <p>An integer that specifies the maximum number of items you want to return in the API response.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can be
    #               used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListVPCEConfigurationsInput = ::Struct.new(
      :max_results,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute vpce_configurations
    #   <p>An array of <code>VPCEConfiguration</code> objects that contain information about your VPC endpoint
    #               configuration.</p>
    #
    #   @return [Array<VPCEConfiguration>]
    #
    # @!attribute next_token
    #   <p>An identifier that was returned from the previous call to this operation, which can be
    #               used to return the next set of items in the list.</p>
    #
    #   @return [String]
    #
    ListVPCEConfigurationsOutput = ::Struct.new(
      :vpce_configurations,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a latitude and longitude pair, expressed in geographic coordinate system degrees (for
    #             example, 47.6204, -122.3491).</p>
    #         <p>Elevation is currently not supported.</p>
    #
    # @!attribute latitude
    #   <p>The latitude.</p>
    #
    #   @return [Float]
    #
    # @!attribute longitude
    #   <p>The longitude.</p>
    #
    #   @return [Float]
    #
    Location = ::Struct.new(
      :latitude,
      :longitude,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>A number that represents the monetary amount for an offering or transaction.</p>
    #
    # @!attribute amount
    #   <p>The numerical amount of an offering or transaction.</p>
    #
    #   @return [Float]
    #
    # @!attribute currency_code
    #   <p>The currency code of a monetary amount. For example, <code>USD</code> means U.S. dollars.</p>
    #
    #   Enum, one of: ["USD"]
    #
    #   @return [String]
    #
    MonetaryAmount = ::Struct.new(
      :amount,
      :currency_code,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>An array of settings that describes characteristics of a network profile.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the network profile.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The name of the network profile.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>The description of the network profile.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The type of network profile. Valid values are listed here.</p>
    #
    #   Enum, one of: ["CURATED", "PRIVATE"]
    #
    #   @return [String]
    #
    # @!attribute uplink_bandwidth_bits
    #   <p>The data throughput rate in bits per second, as an integer from 0 to
    #               104857600.</p>
    #
    #   @return [Integer]
    #
    # @!attribute downlink_bandwidth_bits
    #   <p>The data throughput rate in bits per second, as an integer from 0 to
    #               104857600.</p>
    #
    #   @return [Integer]
    #
    # @!attribute uplink_delay_ms
    #   <p>Delay time for all packets to destination in milliseconds as an integer from 0 to
    #               2000.</p>
    #
    #   @return [Integer]
    #
    # @!attribute downlink_delay_ms
    #   <p>Delay time for all packets to destination in milliseconds as an integer from 0 to
    #               2000.</p>
    #
    #   @return [Integer]
    #
    # @!attribute uplink_jitter_ms
    #   <p>Time variation in the delay of received packets in milliseconds as an integer from
    #               0 to 2000.</p>
    #
    #   @return [Integer]
    #
    # @!attribute downlink_jitter_ms
    #   <p>Time variation in the delay of received packets in milliseconds as an integer from
    #               0 to 2000.</p>
    #
    #   @return [Integer]
    #
    # @!attribute uplink_loss_percent
    #   <p>Proportion of transmitted packets that fail to arrive from 0 to 100
    #               percent.</p>
    #
    #   @return [Integer]
    #
    # @!attribute downlink_loss_percent
    #   <p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>
    #
    #   @return [Integer]
    #
    NetworkProfile = ::Struct.new(
      :arn,
      :name,
      :description,
      :type,
      :uplink_bandwidth_bits,
      :downlink_bandwidth_bits,
      :uplink_delay_ms,
      :downlink_delay_ms,
      :uplink_jitter_ms,
      :downlink_jitter_ms,
      :uplink_loss_percent,
      :downlink_loss_percent,
      keyword_init: true
    ) do
      include Hearth::Structure
      def initialize(*)
        super
        self.uplink_loss_percent ||= 0
        self.downlink_loss_percent ||= 0
      end

    end

    # Includes enum constants for NetworkProfileType
    #
    module NetworkProfileType
      # No documentation available.
      #
      CURATED = "CURATED"

      # No documentation available.
      #
      PRIVATE = "PRIVATE"
    end

    # <p>Exception gets thrown when a user is not eligible to perform the specified
    #             transaction.</p>
    #
    # @!attribute message
    #   <p>The HTTP response code of a Not Eligible exception.</p>
    #
    #   @return [String]
    #
    NotEligibleException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The specified entity was not found.</p>
    #
    # @!attribute message
    #   <p>Any additional information about the exception.</p>
    #
    #   @return [String]
    #
    NotFoundException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the metadata of a device offering.</p>
    #
    # @!attribute id
    #   <p>The ID that corresponds to a device offering.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>A string that describes the offering.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The type of offering (for example, <code>RECURRING</code>) for a device.</p>
    #
    #   Enum, one of: ["RECURRING"]
    #
    #   @return [String]
    #
    # @!attribute platform
    #   <p>The platform of the device (for example, <code>ANDROID</code> or <code>IOS</code>).</p>
    #
    #   Enum, one of: ["ANDROID", "IOS"]
    #
    #   @return [String]
    #
    # @!attribute recurring_charges
    #   <p>Specifies whether there are recurring charges for the offering.</p>
    #
    #   @return [Array<RecurringCharge>]
    #
    Offering = ::Struct.new(
      :id,
      :description,
      :type,
      :platform,
      :recurring_charges,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents information about an offering promotion.</p>
    #
    # @!attribute id
    #   <p>The ID of the offering promotion.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>A string that describes the offering promotion.</p>
    #
    #   @return [String]
    #
    OfferingPromotion = ::Struct.new(
      :id,
      :description,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The status of the offering.</p>
    #
    # @!attribute type
    #   <p>The type specified for the offering status.</p>
    #
    #   Enum, one of: ["PURCHASE", "RENEW", "SYSTEM"]
    #
    #   @return [String]
    #
    # @!attribute offering
    #   <p>Represents the metadata of an offering status.</p>
    #
    #   @return [Offering]
    #
    # @!attribute quantity
    #   <p>The number of available devices in the offering.</p>
    #
    #   @return [Integer]
    #
    # @!attribute effective_on
    #   <p>The date on which the offering is effective.</p>
    #
    #   @return [Time]
    #
    OfferingStatus = ::Struct.new(
      :type,
      :offering,
      :quantity,
      :effective_on,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the metadata of an offering transaction.</p>
    #
    # @!attribute offering_status
    #   <p>The status of an offering transaction.</p>
    #
    #   @return [OfferingStatus]
    #
    # @!attribute transaction_id
    #   <p>The transaction ID of the offering transaction.</p>
    #
    #   @return [String]
    #
    # @!attribute offering_promotion_id
    #   <p>The ID that corresponds to a device offering promotion.</p>
    #
    #   @return [String]
    #
    # @!attribute created_on
    #   <p>The date on which an offering transaction was created.</p>
    #
    #   @return [Time]
    #
    # @!attribute cost
    #   <p>The cost of an offering transaction.</p>
    #
    #   @return [MonetaryAmount]
    #
    OfferingTransaction = ::Struct.new(
      :offering_status,
      :transaction_id,
      :offering_promotion_id,
      :created_on,
      :cost,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for OfferingTransactionType
    #
    module OfferingTransactionType
      # No documentation available.
      #
      PURCHASE = "PURCHASE"

      # No documentation available.
      #
      RENEW = "RENEW"

      # No documentation available.
      #
      SYSTEM = "SYSTEM"
    end

    # Includes enum constants for OfferingType
    #
    module OfferingType
      # No documentation available.
      #
      RECURRING = "RECURRING"
    end

    # <p>Represents a specific warning or failure.</p>
    #
    # @!attribute run
    #   <p>Information about the associated run.</p>
    #
    #   @return [ProblemDetail]
    #
    # @!attribute job
    #   <p>Information about the associated job.</p>
    #
    #   @return [ProblemDetail]
    #
    # @!attribute suite
    #   <p>Information about the associated suite.</p>
    #
    #   @return [ProblemDetail]
    #
    # @!attribute test
    #   <p>Information about the associated test.</p>
    #
    #   @return [ProblemDetail]
    #
    # @!attribute device
    #   <p>Information about the associated device.</p>
    #
    #   @return [Device]
    #
    # @!attribute result
    #   <p>The problem's result.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>PENDING</p>
    #               </li>
    #               <li>
    #                   <p>PASSED</p>
    #               </li>
    #               <li>
    #                   <p>WARNED</p>
    #               </li>
    #               <li>
    #                   <p>FAILED</p>
    #               </li>
    #               <li>
    #                   <p>SKIPPED</p>
    #               </li>
    #               <li>
    #                   <p>ERRORED</p>
    #               </li>
    #               <li>
    #                   <p>STOPPED</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["PENDING", "PASSED", "WARNED", "FAILED", "SKIPPED", "ERRORED", "STOPPED"]
    #
    #   @return [String]
    #
    # @!attribute message
    #   <p>A message about the problem's result.</p>
    #
    #   @return [String]
    #
    Problem = ::Struct.new(
      :run,
      :job,
      :suite,
      :test,
      :device,
      :result,
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Information about a problem detail.</p>
    #
    # @!attribute arn
    #   <p>The problem detail's ARN.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The problem detail's name.</p>
    #
    #   @return [String]
    #
    ProblemDetail = ::Struct.new(
      :arn,
      :name,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents an operating-system neutral workspace for running and managing
    #             tests.</p>
    #
    # @!attribute arn
    #   <p>The project's ARN.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The project's name.</p>
    #
    #   @return [String]
    #
    # @!attribute default_job_timeout_minutes
    #   <p>The default number of minutes (at the project level) a test run executes before it times out. The
    #               default value is 150 minutes.</p>
    #
    #   @return [Integer]
    #
    # @!attribute created
    #   <p>When the project was created.</p>
    #
    #   @return [Time]
    #
    Project = ::Struct.new(
      :arn,
      :name,
      :default_job_timeout_minutes,
      :created,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request for a purchase offering.</p>
    #
    # @!attribute offering_id
    #   <p>The ID of the offering.</p>
    #
    #   @return [String]
    #
    # @!attribute quantity
    #   <p>The number of device slots to purchase in an offering request.</p>
    #
    #   @return [Integer]
    #
    # @!attribute offering_promotion_id
    #   <p>The ID of the offering promotion to be applied to the purchase.</p>
    #
    #   @return [String]
    #
    PurchaseOfferingInput = ::Struct.new(
      :offering_id,
      :quantity,
      :offering_promotion_id,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The result of the purchase offering (for example, success or failure).</p>
    #
    # @!attribute offering_transaction
    #   <p>Represents the offering transaction for the purchase result.</p>
    #
    #   @return [OfferingTransaction]
    #
    PurchaseOfferingOutput = ::Struct.new(
      :offering_transaction,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the set of radios and their states on a device. Examples of radios
    #             include Wi-Fi, GPS, Bluetooth, and NFC.</p>
    #
    # @!attribute wifi
    #   <p>True if Wi-Fi is enabled at the beginning of the test. Otherwise, false.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute bluetooth
    #   <p>True if Bluetooth is enabled at the beginning of the test. Otherwise, false.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute nfc
    #   <p>True if NFC is enabled at the beginning of the test. Otherwise, false.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute gps
    #   <p>True if GPS is enabled at the beginning of the test. Otherwise, false.</p>
    #
    #   @return [Boolean]
    #
    Radios = ::Struct.new(
      :wifi,
      :bluetooth,
      :nfc,
      :gps,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Specifies whether charges for devices are recurring.</p>
    #
    # @!attribute cost
    #   <p>The cost of the recurring charge.</p>
    #
    #   @return [MonetaryAmount]
    #
    # @!attribute frequency
    #   <p>The frequency in which charges recur.</p>
    #
    #   Enum, one of: ["MONTHLY"]
    #
    #   @return [String]
    #
    RecurringCharge = ::Struct.new(
      :cost,
      :frequency,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for RecurringChargeFrequency
    #
    module RecurringChargeFrequency
      # No documentation available.
      #
      MONTHLY = "MONTHLY"
    end

    # <p>Represents information about the remote access session.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the remote access session.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The name of the remote access session.</p>
    #
    #   @return [String]
    #
    # @!attribute created
    #   <p>The date and time the remote access session was created.</p>
    #
    #   @return [Time]
    #
    # @!attribute status
    #   <p>The status of the remote access session. Can be any of the following:</p>
    #           <ul>
    #               <li>
    #                   <p>PENDING.</p>
    #               </li>
    #               <li>
    #                   <p>PENDING_CONCURRENCY.</p>
    #               </li>
    #               <li>
    #                   <p>PENDING_DEVICE.</p>
    #               </li>
    #               <li>
    #                   <p>PROCESSING.</p>
    #               </li>
    #               <li>
    #                   <p>SCHEDULING.</p>
    #               </li>
    #               <li>
    #                   <p>PREPARING.</p>
    #               </li>
    #               <li>
    #                   <p>RUNNING.</p>
    #               </li>
    #               <li>
    #                   <p>COMPLETED.</p>
    #               </li>
    #               <li>
    #                   <p>STOPPING.</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["PENDING", "PENDING_CONCURRENCY", "PENDING_DEVICE", "PROCESSING", "SCHEDULING", "PREPARING", "RUNNING", "COMPLETED", "STOPPING"]
    #
    #   @return [String]
    #
    # @!attribute result
    #   <p>The result of the remote access session. Can be any of the following:</p>
    #           <ul>
    #               <li>
    #                   <p>PENDING.</p>
    #               </li>
    #               <li>
    #                   <p>PASSED.</p>
    #               </li>
    #               <li>
    #                   <p>WARNED.</p>
    #               </li>
    #               <li>
    #                   <p>FAILED.</p>
    #               </li>
    #               <li>
    #                   <p>SKIPPED.</p>
    #               </li>
    #               <li>
    #                   <p>ERRORED.</p>
    #               </li>
    #               <li>
    #                   <p>STOPPED.</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["PENDING", "PASSED", "WARNED", "FAILED", "SKIPPED", "ERRORED", "STOPPED"]
    #
    #   @return [String]
    #
    # @!attribute message
    #   <p>A message about the remote access session.</p>
    #
    #   @return [String]
    #
    # @!attribute started
    #   <p>The date and time the remote access session was started.</p>
    #
    #   @return [Time]
    #
    # @!attribute stopped
    #   <p>The date and time the remote access session was stopped.</p>
    #
    #   @return [Time]
    #
    # @!attribute device
    #   <p>The device (phone or tablet) used in the remote access session.</p>
    #
    #   @return [Device]
    #
    # @!attribute instance_arn
    #   <p>The ARN of the instance.</p>
    #
    #   @return [String]
    #
    # @!attribute remote_debug_enabled
    #   <p>This flag is set to <code>true</code> if remote debugging is enabled for the remote
    #               access session.</p>
    #           <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
    #                   longer supported</a>.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute remote_record_enabled
    #   <p>This flag is set to <code>true</code> if remote recording is enabled for the remote
    #               access session.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute remote_record_app_arn
    #   <p>The ARN for the app to be recorded in the remote access session.</p>
    #
    #   @return [String]
    #
    # @!attribute host_address
    #   <p>IP address of the EC2 host where you need to connect to remotely debug devices.
    #               Only returned if remote debugging is enabled for the remote access session.</p>
    #           <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
    #                   longer supported</a>.</p>
    #
    #   @return [String]
    #
    # @!attribute client_id
    #   <p>Unique identifier of your client for the remote access session. Only returned if
    #               remote debugging is enabled for the remote access session.</p>
    #           <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
    #                   longer supported</a>.</p>
    #
    #   @return [String]
    #
    # @!attribute billing_method
    #   <p>The billing method of the remote access session. Possible values include <code>METERED</code> or
    #                   <code>UNMETERED</code>. For more information about metered devices, see <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html welcome-terminology">AWS Device Farm
    #                   terminology</a>.</p>
    #
    #   Enum, one of: ["METERED", "UNMETERED"]
    #
    #   @return [String]
    #
    # @!attribute device_minutes
    #   <p>The number of minutes a device is used in a remote access session (including setup
    #               and teardown minutes).</p>
    #
    #   @return [DeviceMinutes]
    #
    # @!attribute endpoint
    #   <p>The endpoint for the remote access sesssion.</p>
    #
    #   @return [String]
    #
    # @!attribute device_udid
    #   <p>Unique device identifier for the remote device. Only returned if remote debugging
    #               is enabled for the remote access session.</p>
    #           <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
    #                   longer supported</a>.</p>
    #
    #   @return [String]
    #
    # @!attribute interaction_mode
    #   <p>The interaction mode of the remote access session. Valid values are:</p>
    #           <ul>
    #               <li>
    #                   <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and
    #                       rotating the screen. You cannot run XCUITest framework-based tests in this
    #                       mode.</p>
    #               </li>
    #               <li>
    #                   <p>NO_VIDEO: You are connected to the device, but cannot interact with it or view the screen. This
    #                       mode has the fastest test execution speed. You can run XCUITest framework-based tests in this
    #                       mode.</p>
    #               </li>
    #               <li>
    #                   <p>VIDEO_ONLY: You can view the screen, but cannot touch or rotate it. You can run XCUITest
    #                       framework-based tests and watch the screen in this mode.</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["INTERACTIVE", "NO_VIDEO", "VIDEO_ONLY"]
    #
    #   @return [String]
    #
    # @!attribute skip_app_resign
    #   <p>When set to <code>true</code>, for private devices, Device Farm does not sign your app again. For public
    #               devices, Device Farm always signs your apps again.</p>
    #           <p>For more information about how Device Farm re-signs your apps, see <a href="https://aws.amazon.com/device-farm/faq/">Do you modify my app?</a> in the <i>AWS Device
    #                   Farm FAQs</i>.</p>
    #
    #   @return [Boolean]
    #
    RemoteAccessSession = ::Struct.new(
      :arn,
      :name,
      :created,
      :status,
      :result,
      :message,
      :started,
      :stopped,
      :device,
      :instance_arn,
      :remote_debug_enabled,
      :remote_record_enabled,
      :remote_record_app_arn,
      :host_address,
      :client_id,
      :billing_method,
      :device_minutes,
      :endpoint,
      :device_udid,
      :interaction_mode,
      :skip_app_resign,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>A request that represents an offering renewal.</p>
    #
    # @!attribute offering_id
    #   <p>The ID of a request to renew an offering.</p>
    #
    #   @return [String]
    #
    # @!attribute quantity
    #   <p>The quantity requested in an offering renewal.</p>
    #
    #   @return [Integer]
    #
    RenewOfferingInput = ::Struct.new(
      :offering_id,
      :quantity,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The result of a renewal offering.</p>
    #
    # @!attribute offering_transaction
    #   <p>Represents the status of the offering transaction for the renewal.</p>
    #
    #   @return [OfferingTransaction]
    #
    RenewOfferingOutput = ::Struct.new(
      :offering_transaction,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the screen resolution of a device in height and width, expressed in
    #             pixels.</p>
    #
    # @!attribute width
    #   <p>The screen resolution's width, expressed in pixels.</p>
    #
    #   @return [Integer]
    #
    # @!attribute height
    #   <p>The screen resolution's height, expressed in pixels.</p>
    #
    #   @return [Integer]
    #
    Resolution = ::Struct.new(
      :width,
      :height,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a condition for a device pool.</p>
    #
    # @!attribute attribute
    #   <p>The rule's stringified attribute. For example, specify the value as
    #                   <code>"\"abc\""</code>.</p>
    #           <p>The supported operators for each attribute are provided in the following
    #               list.</p>
    #           <dl>
    #               <dt>APPIUM_VERSION</dt>
    #               <dd>
    #                       <p>The Appium version for the test.</p>
    #                       <p>Supported operators: <code>CONTAINS</code>
    #                  </p>
    #                   </dd>
    #               <dt>ARN</dt>
    #               <dd>
    #                       <p>The Amazon Resource Name (ARN) of the device (for example,
    #                           <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>.</p>
    #                       <p>Supported operators: <code>EQUALS</code>,
    #                               <code>IN</code>, <code>NOT_IN</code>
    #                  </p>
    #                   </dd>
    #               <dt>AVAILABILITY</dt>
    #               <dd>
    #                       <p>The current availability of the device. Valid values are AVAILABLE,
    #                           HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p>
    #                       <p>Supported operators: <code>EQUALS</code>
    #                  </p>
    #                   </dd>
    #               <dt>FLEET_TYPE</dt>
    #               <dd>
    #                       <p>The fleet type. Valid values are PUBLIC or PRIVATE.</p>
    #                       <p>Supported operators: <code>EQUALS</code>
    #                  </p>
    #                   </dd>
    #               <dt>FORM_FACTOR</dt>
    #               <dd>
    #                       <p>The device form factor. Valid values are PHONE or TABLET.</p>
    #                       <p>Supported operators: <code>EQUALS</code>,
    #                               <code>IN</code>, <code>NOT_IN</code>
    #                  </p>
    #                   </dd>
    #               <dt>INSTANCE_ARN</dt>
    #               <dd>
    #                       <p>The Amazon Resource Name (ARN) of the device instance.</p>
    #                       <p>Supported operators: <code>IN</code>,
    #                               <code>NOT_IN</code>
    #                  </p>
    #                   </dd>
    #               <dt>INSTANCE_LABELS</dt>
    #               <dd>
    #                       <p>The label of the device instance.</p>
    #                       <p>Supported operators: <code>CONTAINS</code>
    #                  </p>
    #                   </dd>
    #               <dt>MANUFACTURER</dt>
    #               <dd>
    #                       <p>The device manufacturer (for example, Apple).</p>
    #                       <p>Supported operators: <code>EQUALS</code>,
    #                               <code>IN</code>, <code>NOT_IN</code>
    #                  </p>
    #                   </dd>
    #               <dt>MODEL</dt>
    #               <dd>
    #                       <p>The device model, such as Apple iPad Air 2 or Google Pixel.</p>
    #                       <p>Supported operators: <code>CONTAINS</code>,
    #                               <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code>
    #                  </p>
    #                   </dd>
    #               <dt>OS_VERSION</dt>
    #               <dd>
    #                       <p>The operating system version (for example, 10.3.2).</p>
    #                       <p>Supported operators: <code>EQUALS</code>,
    #                               <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>,
    #                               <code>IN</code>, <code>LESS_THAN</code>,
    #                               <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code>
    #                  </p>
    #                   </dd>
    #               <dt>PLATFORM</dt>
    #               <dd>
    #                       <p>The device platform. Valid values are ANDROID or IOS.</p>
    #                       <p>Supported operators: <code>EQUALS</code>,
    #                               <code>IN</code>, <code>NOT_IN</code>
    #                  </p>
    #                   </dd>
    #               <dt>REMOTE_ACCESS_ENABLED</dt>
    #               <dd>
    #                       <p>Whether the device is enabled for remote access. Valid values are TRUE
    #                           or FALSE.</p>
    #                       <p>Supported operators: <code>EQUALS</code>
    #                  </p>
    #                   </dd>
    #               <dt>REMOTE_DEBUG_ENABLED</dt>
    #               <dd>
    #                       <p>Whether the device is enabled for remote debugging. Valid values are
    #                           TRUE or FALSE.</p>
    #                       <p>Supported operators: <code>EQUALS</code>
    #                  </p>
    #                       <p>Because remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no longer
    #                               supported</a>, this filter is ignored.</p>
    #                   </dd>
    #            </dl>
    #
    #   Enum, one of: ["ARN", "PLATFORM", "FORM_FACTOR", "MANUFACTURER", "REMOTE_ACCESS_ENABLED", "REMOTE_DEBUG_ENABLED", "APPIUM_VERSION", "INSTANCE_ARN", "INSTANCE_LABELS", "FLEET_TYPE", "OS_VERSION", "MODEL", "AVAILABILITY"]
    #
    #   @return [String]
    #
    # @!attribute operator
    #   <p>Specifies how Device Farm compares the rule's attribute to the value. For the
    #               operators that are supported by each attribute, see the attribute
    #               descriptions.</p>
    #
    #   Enum, one of: ["EQUALS", "LESS_THAN", "LESS_THAN_OR_EQUALS", "GREATER_THAN", "GREATER_THAN_OR_EQUALS", "IN", "NOT_IN", "CONTAINS"]
    #
    #   @return [String]
    #
    # @!attribute value
    #   <p>The rule's value.</p>
    #
    #   @return [String]
    #
    Rule = ::Struct.new(
      :attribute,
      :operator,
      :value,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for RuleOperator
    #
    module RuleOperator
      # No documentation available.
      #
      EQUALS = "EQUALS"

      # No documentation available.
      #
      LESS_THAN = "LESS_THAN"

      # No documentation available.
      #
      LESS_THAN_OR_EQUALS = "LESS_THAN_OR_EQUALS"

      # No documentation available.
      #
      GREATER_THAN = "GREATER_THAN"

      # No documentation available.
      #
      GREATER_THAN_OR_EQUALS = "GREATER_THAN_OR_EQUALS"

      # No documentation available.
      #
      IN = "IN"

      # No documentation available.
      #
      NOT_IN = "NOT_IN"

      # No documentation available.
      #
      CONTAINS = "CONTAINS"
    end

    # <p>Represents a test run on a set of devices with a given app package, test parameters, and so
    #             on.</p>
    #
    # @!attribute arn
    #   <p>The run's ARN.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The run's name.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The run's type.</p>
    #           <p>Must be one of the following values:</p>
    #           <ul>
    #               <li>
    #                   <p>BUILTIN_FUZZ</p>
    #               </li>
    #               <li>
    #                   <p>BUILTIN_EXPLORER</p>
    #                   <note>
    #                       <p>For Android, an app explorer that traverses an Android app, interacting with it and capturing
    #                           screenshots at the same time.</p>
    #                   </note>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_JUNIT</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_TESTNG</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_PYTHON</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_NODE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_RUBY</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_JUNIT</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_TESTNG</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_PYTHON</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_NODE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_RUBY</p>
    #               </li>
    #               <li>
    #                   <p>CALABASH</p>
    #               </li>
    #               <li>
    #                   <p>INSTRUMENTATION</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATION</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATOR</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_UI</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["BUILTIN_FUZZ", "BUILTIN_EXPLORER", "WEB_PERFORMANCE_PROFILE", "APPIUM_JAVA_JUNIT", "APPIUM_JAVA_TESTNG", "APPIUM_PYTHON", "APPIUM_NODE", "APPIUM_RUBY", "APPIUM_WEB_JAVA_JUNIT", "APPIUM_WEB_JAVA_TESTNG", "APPIUM_WEB_PYTHON", "APPIUM_WEB_NODE", "APPIUM_WEB_RUBY", "CALABASH", "INSTRUMENTATION", "UIAUTOMATION", "UIAUTOMATOR", "XCTEST", "XCTEST_UI", "REMOTE_ACCESS_RECORD", "REMOTE_ACCESS_REPLAY"]
    #
    #   @return [String]
    #
    # @!attribute platform
    #   <p>The run's platform.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>ANDROID</p>
    #               </li>
    #               <li>
    #                   <p>IOS</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["ANDROID", "IOS"]
    #
    #   @return [String]
    #
    # @!attribute created
    #   <p>When the run was created.</p>
    #
    #   @return [Time]
    #
    # @!attribute status
    #   <p>The run's status.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>PENDING</p>
    #               </li>
    #               <li>
    #                   <p>PENDING_CONCURRENCY</p>
    #               </li>
    #               <li>
    #                   <p>PENDING_DEVICE</p>
    #               </li>
    #               <li>
    #                   <p>PROCESSING</p>
    #               </li>
    #               <li>
    #                   <p>SCHEDULING</p>
    #               </li>
    #               <li>
    #                   <p>PREPARING</p>
    #               </li>
    #               <li>
    #                   <p>RUNNING</p>
    #               </li>
    #               <li>
    #                   <p>COMPLETED</p>
    #               </li>
    #               <li>
    #                   <p>STOPPING</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["PENDING", "PENDING_CONCURRENCY", "PENDING_DEVICE", "PROCESSING", "SCHEDULING", "PREPARING", "RUNNING", "COMPLETED", "STOPPING"]
    #
    #   @return [String]
    #
    # @!attribute result
    #   <p>The run's result.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>PENDING</p>
    #               </li>
    #               <li>
    #                   <p>PASSED</p>
    #               </li>
    #               <li>
    #                   <p>WARNED</p>
    #               </li>
    #               <li>
    #                   <p>FAILED</p>
    #               </li>
    #               <li>
    #                   <p>SKIPPED</p>
    #               </li>
    #               <li>
    #                   <p>ERRORED</p>
    #               </li>
    #               <li>
    #                   <p>STOPPED</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["PENDING", "PASSED", "WARNED", "FAILED", "SKIPPED", "ERRORED", "STOPPED"]
    #
    #   @return [String]
    #
    # @!attribute started
    #   <p>The run's start time.</p>
    #
    #   @return [Time]
    #
    # @!attribute stopped
    #   <p>The run's stop time.</p>
    #
    #   @return [Time]
    #
    # @!attribute counters
    #   <p>The run's result counters.</p>
    #
    #   @return [Counters]
    #
    # @!attribute message
    #   <p>A message about the run's result.</p>
    #
    #   @return [String]
    #
    # @!attribute total_jobs
    #   <p>The total number of jobs for the run.</p>
    #
    #   @return [Integer]
    #
    # @!attribute completed_jobs
    #   <p>The total number of completed jobs.</p>
    #
    #   @return [Integer]
    #
    # @!attribute billing_method
    #   <p>Specifies the billing method for a test run: <code>metered</code> or
    #                   <code>unmetered</code>. If the parameter is not specified, the default value is
    #                   <code>metered</code>.</p>
    #           <note>
    #               <p>If you have unmetered device slots, you must set this to <code>unmetered</code> to use them.
    #                   Otherwise, the run is counted toward metered device minutes.</p>
    #           </note>
    #
    #   Enum, one of: ["METERED", "UNMETERED"]
    #
    #   @return [String]
    #
    # @!attribute device_minutes
    #   <p>Represents the total (metered or unmetered) minutes used by the test run.</p>
    #
    #   @return [DeviceMinutes]
    #
    # @!attribute network_profile
    #   <p>The network profile being used for a test run.</p>
    #
    #   @return [NetworkProfile]
    #
    # @!attribute parsing_result_url
    #   <p>Read-only URL for an object in an S3 bucket where you can get the parsing results of the test package.
    #               If the test package doesn't parse, the reason why it doesn't parse appears in the file that this URL points
    #               to.</p>
    #
    #   @return [String]
    #
    # @!attribute result_code
    #   <p>Supporting field for the result field. Set only if <code>result</code> is <code>SKIPPED</code>.
    #                   <code>PARSING_FAILED</code> if the result is skipped because of test package parsing failure.</p>
    #
    #   Enum, one of: ["PARSING_FAILED", "VPC_ENDPOINT_SETUP_FAILED"]
    #
    #   @return [String]
    #
    # @!attribute seed
    #   <p>For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same
    #               seed value between tests ensures identical event sequences.</p>
    #
    #   @return [Integer]
    #
    # @!attribute app_upload
    #   <p>An app to upload or that has been uploaded.</p>
    #
    #   @return [String]
    #
    # @!attribute event_count
    #   <p>For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz
    #               test should perform.</p>
    #
    #   @return [Integer]
    #
    # @!attribute job_timeout_minutes
    #   <p>The number of minutes the job executes before it times out.</p>
    #
    #   @return [Integer]
    #
    # @!attribute device_pool_arn
    #   <p>The ARN of the device pool for the run.</p>
    #
    #   @return [String]
    #
    # @!attribute locale
    #   <p>Information about the locale that is used for the run.</p>
    #
    #   @return [String]
    #
    # @!attribute radios
    #   <p>Information about the radio states for the run.</p>
    #
    #   @return [Radios]
    #
    # @!attribute location
    #   <p>Information about the location that is used for the run.</p>
    #
    #   @return [Location]
    #
    # @!attribute customer_artifact_paths
    #   <p>Output <code>CustomerArtifactPaths</code> object for the test run.</p>
    #
    #   @return [CustomerArtifactPaths]
    #
    # @!attribute web_url
    #   <p>The Device Farm console URL for the recording of the run.</p>
    #
    #   @return [String]
    #
    # @!attribute skip_app_resign
    #   <p>When set to <code>true</code>, for private devices, Device Farm does not sign your app again. For public
    #               devices, Device Farm always signs your apps again.</p>
    #           <p>For more information about how Device Farm re-signs your apps, see <a href="https://aws.amazon.com/device-farm/faq/">Do you modify my app?</a> in the <i>AWS Device
    #                   Farm FAQs</i>.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute test_spec_arn
    #   <p>The ARN of the YAML-formatted test specification for the run.</p>
    #
    #   @return [String]
    #
    # @!attribute device_selection_result
    #   <p>The results of a device filter used to select the devices for a test run.</p>
    #
    #   @return [DeviceSelectionResult]
    #
    Run = ::Struct.new(
      :arn,
      :name,
      :type,
      :platform,
      :created,
      :status,
      :result,
      :started,
      :stopped,
      :counters,
      :message,
      :total_jobs,
      :completed_jobs,
      :billing_method,
      :device_minutes,
      :network_profile,
      :parsing_result_url,
      :result_code,
      :seed,
      :app_upload,
      :event_count,
      :job_timeout_minutes,
      :device_pool_arn,
      :locale,
      :radios,
      :location,
      :customer_artifact_paths,
      :web_url,
      :skip_app_resign,
      :test_spec_arn,
      :device_selection_result,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a sample of performance data.</p>
    #
    # @!attribute arn
    #   <p>The sample's ARN.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The sample's type.</p>
    #           <p>Must be one of the following values:</p>
    #           <ul>
    #               <li>
    #                   <p>CPU: A CPU sample type. This is expressed as the app processing CPU time
    #                       (including child processes) as reported by process, as a percentage.</p>
    #               </li>
    #               <li>
    #                   <p>MEMORY: A memory usage sample type. This is expressed as the total
    #                       proportional set size of an app process, in kilobytes.</p>
    #               </li>
    #               <li>
    #                   <p>NATIVE_AVG_DRAWTIME</p>
    #               </li>
    #               <li>
    #                   <p>NATIVE_FPS</p>
    #               </li>
    #               <li>
    #                   <p>NATIVE_FRAMES</p>
    #               </li>
    #               <li>
    #                   <p>NATIVE_MAX_DRAWTIME</p>
    #               </li>
    #               <li>
    #                   <p>NATIVE_MIN_DRAWTIME</p>
    #               </li>
    #               <li>
    #                   <p>OPENGL_AVG_DRAWTIME</p>
    #               </li>
    #               <li>
    #                   <p>OPENGL_FPS</p>
    #               </li>
    #               <li>
    #                   <p>OPENGL_FRAMES</p>
    #               </li>
    #               <li>
    #                   <p>OPENGL_MAX_DRAWTIME</p>
    #               </li>
    #               <li>
    #                   <p>OPENGL_MIN_DRAWTIME</p>
    #               </li>
    #               <li>
    #                   <p>RX</p>
    #               </li>
    #               <li>
    #                   <p>RX_RATE: The total number of bytes per second (TCP and UDP) that are sent,
    #                       by app process.</p>
    #               </li>
    #               <li>
    #                   <p>THREADS: A threads sample type. This is expressed as the total number of
    #                       threads per app process.</p>
    #               </li>
    #               <li>
    #                   <p>TX</p>
    #               </li>
    #               <li>
    #                   <p>TX_RATE: The total number of bytes per second (TCP and UDP) that are
    #                       received, by app process.</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["CPU", "MEMORY", "THREADS", "RX_RATE", "TX_RATE", "RX", "TX", "NATIVE_FRAMES", "NATIVE_FPS", "NATIVE_MIN_DRAWTIME", "NATIVE_AVG_DRAWTIME", "NATIVE_MAX_DRAWTIME", "OPENGL_FRAMES", "OPENGL_FPS", "OPENGL_MIN_DRAWTIME", "OPENGL_AVG_DRAWTIME", "OPENGL_MAX_DRAWTIME"]
    #
    #   @return [String]
    #
    # @!attribute url
    #   <p>The presigned Amazon S3 URL that can be used with a GET request to download the sample's
    #               file.</p>
    #
    #   @return [String]
    #
    Sample = ::Struct.new(
      :arn,
      :type,
      :url,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for SampleType
    #
    module SampleType
      # No documentation available.
      #
      CPU = "CPU"

      # No documentation available.
      #
      MEMORY = "MEMORY"

      # No documentation available.
      #
      THREADS = "THREADS"

      # No documentation available.
      #
      RX_RATE = "RX_RATE"

      # No documentation available.
      #
      TX_RATE = "TX_RATE"

      # No documentation available.
      #
      RX = "RX"

      # No documentation available.
      #
      TX = "TX"

      # No documentation available.
      #
      NATIVE_FRAMES = "NATIVE_FRAMES"

      # No documentation available.
      #
      NATIVE_FPS = "NATIVE_FPS"

      # No documentation available.
      #
      NATIVE_MIN_DRAWTIME = "NATIVE_MIN_DRAWTIME"

      # No documentation available.
      #
      NATIVE_AVG_DRAWTIME = "NATIVE_AVG_DRAWTIME"

      # No documentation available.
      #
      NATIVE_MAX_DRAWTIME = "NATIVE_MAX_DRAWTIME"

      # No documentation available.
      #
      OPENGL_FRAMES = "OPENGL_FRAMES"

      # No documentation available.
      #
      OPENGL_FPS = "OPENGL_FPS"

      # No documentation available.
      #
      OPENGL_MIN_DRAWTIME = "OPENGL_MIN_DRAWTIME"

      # No documentation available.
      #
      OPENGL_AVG_DRAWTIME = "OPENGL_AVG_DRAWTIME"

      # No documentation available.
      #
      OPENGL_MAX_DRAWTIME = "OPENGL_MAX_DRAWTIME"
    end

    # <p>Represents the settings for a run. Includes things like location, radio states,
    #             auxiliary apps, and network profiles.</p>
    #
    # @!attribute extra_data_package_arn
    #   <p>The ARN of the extra data for the run. The extra data is a .zip file that AWS Device Farm extracts to
    #               external data for Android or the app's sandbox for iOS.</p>
    #
    #   @return [String]
    #
    # @!attribute network_profile_arn
    #   <p>Reserved for internal use.</p>
    #
    #   @return [String]
    #
    # @!attribute locale
    #   <p>Information about the locale that is used for the run.</p>
    #
    #   @return [String]
    #
    # @!attribute location
    #   <p>Information about the location that is used for the run.</p>
    #
    #   @return [Location]
    #
    # @!attribute vpce_configuration_arns
    #   <p>An array of ARNs for your VPC endpoint configurations.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute customer_artifact_paths
    #   <p>Input <code>CustomerArtifactPaths</code> object for the scheduled run
    #               configuration.</p>
    #
    #   @return [CustomerArtifactPaths]
    #
    # @!attribute radios
    #   <p>Information about the radio states for the run.</p>
    #
    #   @return [Radios]
    #
    # @!attribute auxiliary_apps
    #   <p>A list of upload ARNs for app packages to be installed with your app.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute billing_method
    #   <p>Specifies the billing method for a test run: <code>metered</code> or
    #                   <code>unmetered</code>. If the parameter is not specified, the default value is
    #                   <code>metered</code>.</p>
    #           <note>
    #               <p>If you have purchased unmetered device slots, you must set this parameter to <code>unmetered</code> to
    #                   make use of them. Otherwise, your run counts against your metered time.</p>
    #           </note>
    #
    #   Enum, one of: ["METERED", "UNMETERED"]
    #
    #   @return [String]
    #
    ScheduleRunConfiguration = ::Struct.new(
      :extra_data_package_arn,
      :network_profile_arn,
      :locale,
      :location,
      :vpce_configuration_arns,
      :customer_artifact_paths,
      :radios,
      :auxiliary_apps,
      :billing_method,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the schedule run operation.</p>
    #
    # @!attribute project_arn
    #   <p>The ARN of the project for the run to be scheduled.</p>
    #
    #   @return [String]
    #
    # @!attribute app_arn
    #   <p>The ARN of an application package to run tests against, created with <a>CreateUpload</a>.
    #               See <a>ListUploads</a>.</p>
    #
    #   @return [String]
    #
    # @!attribute device_pool_arn
    #   <p>The ARN of the device pool for the run to be scheduled.</p>
    #
    #   @return [String]
    #
    # @!attribute device_selection_configuration
    #   <p>The filter criteria used to dynamically select a set of devices for a test run and the maximum number of
    #               devices to be included in the run.</p>
    #           <p>Either <b>
    #                  <code>devicePoolArn</code>
    #               </b> or <b>
    #                  <code>deviceSelectionConfiguration</code>
    #               </b> is required in a
    #               request.</p>
    #
    #   @return [DeviceSelectionConfiguration]
    #
    # @!attribute name
    #   <p>The name for the run to be scheduled.</p>
    #
    #   @return [String]
    #
    # @!attribute test
    #   <p>Information about the test for the run to be scheduled.</p>
    #
    #   @return [ScheduleRunTest]
    #
    # @!attribute configuration
    #   <p>Information about the settings for the run to be scheduled.</p>
    #
    #   @return [ScheduleRunConfiguration]
    #
    # @!attribute execution_configuration
    #   <p>Specifies configuration information about a test run, such as the execution timeout
    #               (in minutes).</p>
    #
    #   @return [ExecutionConfiguration]
    #
    ScheduleRunInput = ::Struct.new(
      :project_arn,
      :app_arn,
      :device_pool_arn,
      :device_selection_configuration,
      :name,
      :test,
      :configuration,
      :execution_configuration,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of a schedule run request.</p>
    #
    # @!attribute run
    #   <p>Information about the scheduled run.</p>
    #
    #   @return [Run]
    #
    ScheduleRunOutput = ::Struct.new(
      :run,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents test settings. This data structure is passed in as the test parameter to ScheduleRun. For an
    #             example of the JSON request syntax, see <a>ScheduleRun</a>.</p>
    #
    # @!attribute type
    #   <p>The test's type.</p>
    #           <p>Must be one of the following values:</p>
    #           <ul>
    #               <li>
    #                   <p>BUILTIN_FUZZ</p>
    #               </li>
    #               <li>
    #                   <p>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
    #                       Android app, interacting with it and capturing screenshots at the same
    #                       time.</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_JUNIT</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_TESTNG</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_PYTHON</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_NODE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_RUBY</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_JUNIT</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_TESTNG</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_PYTHON</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_NODE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_RUBY</p>
    #               </li>
    #               <li>
    #                   <p>CALABASH</p>
    #               </li>
    #               <li>
    #                   <p>INSTRUMENTATION</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATION</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATOR</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_UI</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["BUILTIN_FUZZ", "BUILTIN_EXPLORER", "WEB_PERFORMANCE_PROFILE", "APPIUM_JAVA_JUNIT", "APPIUM_JAVA_TESTNG", "APPIUM_PYTHON", "APPIUM_NODE", "APPIUM_RUBY", "APPIUM_WEB_JAVA_JUNIT", "APPIUM_WEB_JAVA_TESTNG", "APPIUM_WEB_PYTHON", "APPIUM_WEB_NODE", "APPIUM_WEB_RUBY", "CALABASH", "INSTRUMENTATION", "UIAUTOMATION", "UIAUTOMATOR", "XCTEST", "XCTEST_UI", "REMOTE_ACCESS_RECORD", "REMOTE_ACCESS_REPLAY"]
    #
    #   @return [String]
    #
    # @!attribute test_package_arn
    #   <p>The ARN of the uploaded test to be run.</p>
    #
    #   @return [String]
    #
    # @!attribute test_spec_arn
    #   <p>The ARN of the YAML-formatted test specification.</p>
    #
    #   @return [String]
    #
    # @!attribute filter
    #   <p>The test's filter.</p>
    #
    #   @return [String]
    #
    # @!attribute parameters
    #   <p>The test's parameters, such as test framework parameters and fixture settings.
    #               Parameters are represented by name-value pairs of strings.</p>
    #           <p>For all tests:</p>
    #           <ul>
    #               <li>
    #                   <p>
    #                     <code>app_performance_monitoring</code>: Performance monitoring is enabled by default.
    #                       Set this parameter to false to disable it.</p>
    #               </li>
    #            </ul>
    #           <p>For Calabash tests:</p>
    #           <ul>
    #               <li>
    #                   <p>profile: A cucumber profile (for example, <code>my_profile_name</code>).</p>
    #               </li>
    #               <li>
    #                   <p>tags: You can limit execution to features or scenarios that have (or don't
    #                       have) certain tags (for example, @smoke or @smoke,~@wip).</p>
    #               </li>
    #            </ul>
    #           <p>For Appium tests (all types):</p>
    #           <ul>
    #               <li>
    #                   <p>appium_version: The Appium version. Currently supported values are 1.6.5
    #                       (and later), latest, and default.</p>
    #                   <ul>
    #                     <li>
    #
    #                           <p>latest runs the latest Appium version supported by Device
    #                               Farm (1.9.1).</p>
    #                       </li>
    #                     <li>
    #                           <p>For default, Device Farm selects a compatible version of
    #                               Appium for the device. The current behavior is to run 1.7.2 on Android
    #                               devices and iOS 9 and earlier and 1.7.2 for iOS 10 and later.</p>
    #                       </li>
    #                     <li>
    #                           <p>This behavior is subject to change.</p>
    #                       </li>
    #                  </ul>
    #               </li>
    #            </ul>
    #           <p>For fuzz tests (Android only):</p>
    #           <ul>
    #               <li>
    #                   <p>event_count: The number of events, between 1 and 10000, that the UI fuzz
    #                       test should perform.</p>
    #               </li>
    #               <li>
    #                   <p>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should
    #                       wait between events.</p>
    #               </li>
    #               <li>
    #                   <p>seed: A seed to use for randomizing the UI fuzz test. Using the same seed
    #                       value between tests ensures identical event sequences.</p>
    #               </li>
    #            </ul>
    #           <p>For Explorer tests:</p>
    #           <ul>
    #               <li>
    #                   <p>username: A user name to use if the Explorer encounters a login form. If not supplied, no user
    #                       name is inserted.</p>
    #               </li>
    #               <li>
    #                   <p>password: A password to use if the Explorer encounters a login form. If not supplied, no
    #                       password is inserted.</p>
    #               </li>
    #            </ul>
    #           <p>For Instrumentation:</p>
    #           <ul>
    #               <li>
    #                   <p>filter: A test filter string. Examples:</p>
    #                   <ul>
    #                     <li>
    #                           <p>Running a single test case: <code>com.android.abc.Test1</code>
    #                        </p>
    #                       </li>
    #                     <li>
    #                           <p>Running a single test: <code>com.android.abc.Test1 smoke</code>
    #                        </p>
    #                       </li>
    #                     <li>
    #                           <p>Running multiple tests:
    #                               <code>com.android.abc.Test1,com.android.abc.Test2</code>
    #                        </p>
    #                       </li>
    #                  </ul>
    #               </li>
    #            </ul>
    #           <p>For XCTest and XCTestUI:</p>
    #           <ul>
    #               <li>
    #                   <p>filter: A test filter string. Examples:</p>
    #                   <ul>
    #                     <li>
    #                           <p>Running a single test class: <code>LoginTests</code>
    #                        </p>
    #                       </li>
    #                     <li>
    #                           <p>Running a multiple test classes: <code>LoginTests,SmokeTests</code>
    #                        </p>
    #                       </li>
    #                     <li>
    #                           <p>Running a single test: <code>LoginTests/testValid</code>
    #                        </p>
    #                       </li>
    #                     <li>
    #                           <p>Running multiple tests:
    #                               <code>LoginTests/testValid,LoginTests/testInvalid</code>
    #                        </p>
    #                       </li>
    #                  </ul>
    #               </li>
    #            </ul>
    #           <p>For UIAutomator:</p>
    #           <ul>
    #               <li>
    #                   <p>filter: A test filter string. Examples:</p>
    #                   <ul>
    #                     <li>
    #                           <p>Running a single test case: <code>com.android.abc.Test1</code>
    #                        </p>
    #                       </li>
    #                     <li>
    #                           <p>Running a single test: <code>com.android.abc.Test1 smoke</code>
    #                        </p>
    #                       </li>
    #                     <li>
    #                           <p>Running multiple tests:
    #                               <code>com.android.abc.Test1,com.android.abc.Test2</code>
    #                        </p>
    #                       </li>
    #                  </ul>
    #               </li>
    #            </ul>
    #
    #   @return [Hash<String, String>]
    #
    ScheduleRunTest = ::Struct.new(
      :type,
      :test_package_arn,
      :test_spec_arn,
      :filter,
      :parameters,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>There was a problem with the service account.</p>
    #
    # @!attribute message
    #   <p>Any additional information about the exception.</p>
    #
    #   @return [String]
    #
    ServiceAccountException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute arn
    #   <p>Represents the Amazon Resource Name (ARN) of the Device Farm job to stop.</p>
    #
    #   @return [String]
    #
    StopJobInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute job
    #   <p>The job that was stopped.</p>
    #
    #   @return [Job]
    #
    StopJobOutput = ::Struct.new(
      :job,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the request to stop the remote access session.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the remote access session to stop.</p>
    #
    #   @return [String]
    #
    StopRemoteAccessSessionInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the response from the server that describes the remote access session
    #             when AWS Device Farm stops the session.</p>
    #
    # @!attribute remote_access_session
    #   <p>A container that represents the metadata from the service about the remote access session you are
    #               stopping.</p>
    #
    #   @return [RemoteAccessSession]
    #
    StopRemoteAccessSessionOutput = ::Struct.new(
      :remote_access_session,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the request to stop a specific run.</p>
    #
    # @!attribute arn
    #   <p>Represents the Amazon Resource Name (ARN) of the Device Farm run to stop.</p>
    #
    #   @return [String]
    #
    StopRunInput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the results of your stop run attempt.</p>
    #
    # @!attribute run
    #   <p>The run that was stopped.</p>
    #
    #   @return [Run]
    #
    StopRunOutput = ::Struct.new(
      :run,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a collection of one or more tests.</p>
    #
    # @!attribute arn
    #   <p>The suite's ARN.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The suite's name.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The suite's type.</p>
    #           <p>Must be one of the following values:</p>
    #           <ul>
    #               <li>
    #                   <p>BUILTIN_FUZZ</p>
    #               </li>
    #               <li>
    #                   <p>BUILTIN_EXPLORER </p>
    #                   <note>
    #                       <p>Only available for Android; an app explorer that traverses an Android app, interacting with it
    #                           and capturing screenshots at the same time.</p>
    #                   </note>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_JUNIT</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_TESTNG</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_PYTHON</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_NODE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_RUBY</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_JUNIT</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_TESTNG</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_PYTHON</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_NODE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_RUBY</p>
    #               </li>
    #               <li>
    #                   <p>CALABASH</p>
    #               </li>
    #               <li>
    #                   <p>INSTRUMENTATION</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATION</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATOR</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_UI</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["BUILTIN_FUZZ", "BUILTIN_EXPLORER", "WEB_PERFORMANCE_PROFILE", "APPIUM_JAVA_JUNIT", "APPIUM_JAVA_TESTNG", "APPIUM_PYTHON", "APPIUM_NODE", "APPIUM_RUBY", "APPIUM_WEB_JAVA_JUNIT", "APPIUM_WEB_JAVA_TESTNG", "APPIUM_WEB_PYTHON", "APPIUM_WEB_NODE", "APPIUM_WEB_RUBY", "CALABASH", "INSTRUMENTATION", "UIAUTOMATION", "UIAUTOMATOR", "XCTEST", "XCTEST_UI", "REMOTE_ACCESS_RECORD", "REMOTE_ACCESS_REPLAY"]
    #
    #   @return [String]
    #
    # @!attribute created
    #   <p>When the suite was created.</p>
    #
    #   @return [Time]
    #
    # @!attribute status
    #   <p>The suite's status.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>PENDING</p>
    #               </li>
    #               <li>
    #                   <p>PENDING_CONCURRENCY</p>
    #               </li>
    #               <li>
    #                   <p>PENDING_DEVICE</p>
    #               </li>
    #               <li>
    #                   <p>PROCESSING</p>
    #               </li>
    #               <li>
    #                   <p>SCHEDULING</p>
    #               </li>
    #               <li>
    #                   <p>PREPARING</p>
    #               </li>
    #               <li>
    #                   <p>RUNNING</p>
    #               </li>
    #               <li>
    #                   <p>COMPLETED</p>
    #               </li>
    #               <li>
    #                   <p>STOPPING</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["PENDING", "PENDING_CONCURRENCY", "PENDING_DEVICE", "PROCESSING", "SCHEDULING", "PREPARING", "RUNNING", "COMPLETED", "STOPPING"]
    #
    #   @return [String]
    #
    # @!attribute result
    #   <p>The suite's result.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>PENDING</p>
    #               </li>
    #               <li>
    #                   <p>PASSED</p>
    #               </li>
    #               <li>
    #                   <p>WARNED</p>
    #               </li>
    #               <li>
    #                   <p>FAILED</p>
    #               </li>
    #               <li>
    #                   <p>SKIPPED</p>
    #               </li>
    #               <li>
    #                   <p>ERRORED</p>
    #               </li>
    #               <li>
    #                   <p>STOPPED</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["PENDING", "PASSED", "WARNED", "FAILED", "SKIPPED", "ERRORED", "STOPPED"]
    #
    #   @return [String]
    #
    # @!attribute started
    #   <p>The suite's start time.</p>
    #
    #   @return [Time]
    #
    # @!attribute stopped
    #   <p>The suite's stop time.</p>
    #
    #   @return [Time]
    #
    # @!attribute counters
    #   <p>The suite's result counters.</p>
    #
    #   @return [Counters]
    #
    # @!attribute message
    #   <p>A message about the suite's result.</p>
    #
    #   @return [String]
    #
    # @!attribute device_minutes
    #   <p>Represents the total (metered or unmetered) minutes used by the test
    #               suite.</p>
    #
    #   @return [DeviceMinutes]
    #
    Suite = ::Struct.new(
      :arn,
      :name,
      :type,
      :created,
      :status,
      :result,
      :started,
      :stopped,
      :counters,
      :message,
      :device_minutes,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The metadata that you apply to a resource to help you categorize and organize it. Each tag consists of a
    #             key and an optional value, both of which you define. Tag keys can have a maximum character length of 128
    #             characters. Tag values can have a maximum length of 256 characters. </p>
    #
    # @!attribute key
    #   <p>One part of a key-value pair that makes up a tag. A <code>key</code> is a general label that acts like a
    #               category for more specific tag values.</p>
    #
    #   @return [String]
    #
    # @!attribute value
    #   <p>The optional part of a key-value pair that makes up a tag. A <code>value</code> acts as a descriptor in a
    #               tag category (key).</p>
    #
    #   @return [String]
    #
    Tag = ::Struct.new(
      :key,
      :value,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The operation was not successful. Try again.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    # @!attribute resource_name
    #
    #   @return [String]
    #
    TagOperationException = ::Struct.new(
      :message,
      :resource_name,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The request doesn't comply with the AWS Identity and Access Management (IAM) tag
    #             policy. Correct your request and then retry it.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    # @!attribute resource_name
    #
    #   @return [String]
    #
    TagPolicyException = ::Struct.new(
      :message,
      :resource_name,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute resource_arn
    #   <p>The Amazon Resource Name (ARN) of the resource or resources to which to add tags. You can associate tags
    #               with the following Device Farm resources: <code>PROJECT</code>, <code>RUN</code>,
    #                   <code>NETWORK_PROFILE</code>, <code>INSTANCE_PROFILE</code>, <code>DEVICE_INSTANCE</code>,
    #                   <code>SESSION</code>, <code>DEVICE_POOL</code>, <code>DEVICE</code>, and
    #               <code>VPCE_CONFIGURATION</code>.</p>
    #
    #   @return [String]
    #
    # @!attribute tags
    #   <p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum
    #               character length of 128 characters. Tag values can have a maximum length of 256 characters.</p>
    #
    #   @return [Array<Tag>]
    #
    TagResourceInput = ::Struct.new(
      :resource_arn,
      :tags,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    TagResourceOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a condition that is evaluated.</p>
    #
    # @!attribute arn
    #   <p>The test's ARN.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The test's name.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The test's type.</p>
    #           <p>Must be one of the following values:</p>
    #           <ul>
    #               <li>
    #                   <p>BUILTIN_FUZZ</p>
    #               </li>
    #               <li>
    #                   <p>BUILTIN_EXPLORER</p>
    #                   <note>
    #                       <p>For Android, an app explorer that traverses an Android app, interacting with it and capturing
    #                           screenshots at the same time.</p>
    #                   </note>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_JUNIT</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_TESTNG</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_PYTHON</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_NODE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_RUBY</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_JUNIT</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_TESTNG</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_PYTHON</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_NODE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_RUBY</p>
    #               </li>
    #               <li>
    #                   <p>CALABASH</p>
    #               </li>
    #               <li>
    #                   <p>INSTRUMENTATION</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATION</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATOR</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_UI</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["BUILTIN_FUZZ", "BUILTIN_EXPLORER", "WEB_PERFORMANCE_PROFILE", "APPIUM_JAVA_JUNIT", "APPIUM_JAVA_TESTNG", "APPIUM_PYTHON", "APPIUM_NODE", "APPIUM_RUBY", "APPIUM_WEB_JAVA_JUNIT", "APPIUM_WEB_JAVA_TESTNG", "APPIUM_WEB_PYTHON", "APPIUM_WEB_NODE", "APPIUM_WEB_RUBY", "CALABASH", "INSTRUMENTATION", "UIAUTOMATION", "UIAUTOMATOR", "XCTEST", "XCTEST_UI", "REMOTE_ACCESS_RECORD", "REMOTE_ACCESS_REPLAY"]
    #
    #   @return [String]
    #
    # @!attribute created
    #   <p>When the test was created.</p>
    #
    #   @return [Time]
    #
    # @!attribute status
    #   <p>The test's status.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>PENDING</p>
    #               </li>
    #               <li>
    #                   <p>PENDING_CONCURRENCY</p>
    #               </li>
    #               <li>
    #                   <p>PENDING_DEVICE</p>
    #               </li>
    #               <li>
    #                   <p>PROCESSING</p>
    #               </li>
    #               <li>
    #                   <p>SCHEDULING</p>
    #               </li>
    #               <li>
    #                   <p>PREPARING</p>
    #               </li>
    #               <li>
    #                   <p>RUNNING</p>
    #               </li>
    #               <li>
    #                   <p>COMPLETED</p>
    #               </li>
    #               <li>
    #                   <p>STOPPING</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["PENDING", "PENDING_CONCURRENCY", "PENDING_DEVICE", "PROCESSING", "SCHEDULING", "PREPARING", "RUNNING", "COMPLETED", "STOPPING"]
    #
    #   @return [String]
    #
    # @!attribute result
    #   <p>The test's result.</p>
    #           <p>Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>PENDING</p>
    #               </li>
    #               <li>
    #                   <p>PASSED</p>
    #               </li>
    #               <li>
    #                   <p>WARNED</p>
    #               </li>
    #               <li>
    #                   <p>FAILED</p>
    #               </li>
    #               <li>
    #                   <p>SKIPPED</p>
    #               </li>
    #               <li>
    #                   <p>ERRORED</p>
    #               </li>
    #               <li>
    #                   <p>STOPPED</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["PENDING", "PASSED", "WARNED", "FAILED", "SKIPPED", "ERRORED", "STOPPED"]
    #
    #   @return [String]
    #
    # @!attribute started
    #   <p>The test's start time.</p>
    #
    #   @return [Time]
    #
    # @!attribute stopped
    #   <p>The test's stop time.</p>
    #
    #   @return [Time]
    #
    # @!attribute counters
    #   <p>The test's result counters.</p>
    #
    #   @return [Counters]
    #
    # @!attribute message
    #   <p>A message about the test's result.</p>
    #
    #   @return [String]
    #
    # @!attribute device_minutes
    #   <p>Represents the total (metered or unmetered) minutes used by the test.</p>
    #
    #   @return [DeviceMinutes]
    #
    Test = ::Struct.new(
      :arn,
      :name,
      :type,
      :created,
      :status,
      :result,
      :started,
      :stopped,
      :counters,
      :message,
      :device_minutes,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>A Selenium testing project. Projects are used to collect and collate sessions.</p>
    #
    # @!attribute arn
    #   <p>The ARN for the project.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>A human-readable name for the project.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>A human-readable description for the project.</p>
    #
    #   @return [String]
    #
    # @!attribute vpc_config
    #   <p>The VPC security groups and subnets that are attached to a project.</p>
    #
    #   @return [TestGridVpcConfig]
    #
    # @!attribute created
    #   <p>When the project was created.</p>
    #
    #   @return [Time]
    #
    TestGridProject = ::Struct.new(
      :arn,
      :name,
      :description,
      :vpc_config,
      :created,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>A <a>TestGridSession</a> is a single instance of a browser launched from the URL provided by a
    #          call to <a>CreateTestGridUrl</a>.</p>
    #
    # @!attribute arn
    #   <p>The ARN of the session.</p>
    #
    #   @return [String]
    #
    # @!attribute status
    #   <p>The state of the session.</p>
    #
    #   Enum, one of: ["ACTIVE", "CLOSED", "ERRORED"]
    #
    #   @return [String]
    #
    # @!attribute created
    #   <p>The time that the session was started.</p>
    #
    #   @return [Time]
    #
    # @!attribute ended
    #   <p>The time the session ended.</p>
    #
    #   @return [Time]
    #
    # @!attribute billing_minutes
    #   <p>The number of billed minutes that were used for this session. </p>
    #
    #   @return [Float]
    #
    # @!attribute selenium_properties
    #   <p>A JSON object of options and parameters passed to the Selenium WebDriver.</p>
    #
    #   @return [String]
    #
    TestGridSession = ::Struct.new(
      :arn,
      :status,
      :created,
      :ended,
      :billing_minutes,
      :selenium_properties,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>An action taken by a <a>TestGridSession</a> browser instance.</p>
    #
    # @!attribute action
    #   <p>The action taken by the session.</p>
    #
    #   @return [String]
    #
    # @!attribute started
    #   <p>The time that the session invoked the action.</p>
    #
    #   @return [Time]
    #
    # @!attribute duration
    #   <p>The time, in milliseconds, that the action took to complete in the browser.</p>
    #
    #   @return [Integer]
    #
    # @!attribute status_code
    #   <p>HTTP status code returned to the browser when the action was taken.</p>
    #
    #   @return [String]
    #
    # @!attribute request_method
    #   <p>HTTP method that the browser used to make the request.</p>
    #
    #   @return [String]
    #
    TestGridSessionAction = ::Struct.new(
      :action,
      :started,
      :duration,
      :status_code,
      :request_method,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Artifacts are video and other files that are produced in the process of running a browser in an automated
    #          context. </p>
    #          <note>
    #             <p>Video elements might be broken up into multiple artifacts as they grow in size during creation. </p>
    #          </note>
    #
    # @!attribute filename
    #   <p>The file name of the artifact.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The kind of artifact.</p>
    #
    #   Enum, one of: ["UNKNOWN", "VIDEO", "SELENIUM_LOG"]
    #
    #   @return [String]
    #
    # @!attribute url
    #   <p>A semi-stable URL to the content of the object.</p>
    #
    #   @return [String]
    #
    TestGridSessionArtifact = ::Struct.new(
      :filename,
      :type,
      :url,
      keyword_init: true
    ) do
      include Hearth::Structure

      def to_s
        "#<struct AWS::SDK::DeviceFarm::Types::TestGridSessionArtifact "\
          "filename=#{filename || 'nil'}, "\
          "type=#{type || 'nil'}, "\
          "url=\"[SENSITIVE]\">"
      end
    end

    # Includes enum constants for TestGridSessionArtifactCategory
    #
    module TestGridSessionArtifactCategory
      # No documentation available.
      #
      VIDEO = "VIDEO"

      # No documentation available.
      #
      LOG = "LOG"
    end

    # Includes enum constants for TestGridSessionArtifactType
    #
    module TestGridSessionArtifactType
      # No documentation available.
      #
      UNKNOWN = "UNKNOWN"

      # No documentation available.
      #
      VIDEO = "VIDEO"

      # No documentation available.
      #
      SELENIUM_LOG = "SELENIUM_LOG"
    end

    # Includes enum constants for TestGridSessionStatus
    #
    module TestGridSessionStatus
      # No documentation available.
      #
      ACTIVE = "ACTIVE"

      # No documentation available.
      #
      CLOSED = "CLOSED"

      # No documentation available.
      #
      ERRORED = "ERRORED"
    end

    # <p>The VPC security groups and subnets that are attached to a project.</p>
    #
    # @!attribute security_group_ids
    #   <p>A list of VPC security group IDs in your Amazon VPC.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute subnet_ids
    #   <p>A list of VPC subnet IDs in your Amazon VPC.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute vpc_id
    #   <p>The ID of the Amazon VPC.</p>
    #
    #   @return [String]
    #
    TestGridVpcConfig = ::Struct.new(
      :security_group_ids,
      :subnet_ids,
      :vpc_id,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for TestType
    #
    module TestType
      # No documentation available.
      #
      BUILTIN_FUZZ = "BUILTIN_FUZZ"

      # No documentation available.
      #
      BUILTIN_EXPLORER = "BUILTIN_EXPLORER"

      # No documentation available.
      #
      WEB_PERFORMANCE_PROFILE = "WEB_PERFORMANCE_PROFILE"

      # No documentation available.
      #
      APPIUM_JAVA_JUNIT = "APPIUM_JAVA_JUNIT"

      # No documentation available.
      #
      APPIUM_JAVA_TESTNG = "APPIUM_JAVA_TESTNG"

      # No documentation available.
      #
      APPIUM_PYTHON = "APPIUM_PYTHON"

      # No documentation available.
      #
      APPIUM_NODE = "APPIUM_NODE"

      # No documentation available.
      #
      APPIUM_RUBY = "APPIUM_RUBY"

      # No documentation available.
      #
      APPIUM_WEB_JAVA_JUNIT = "APPIUM_WEB_JAVA_JUNIT"

      # No documentation available.
      #
      APPIUM_WEB_JAVA_TESTNG = "APPIUM_WEB_JAVA_TESTNG"

      # No documentation available.
      #
      APPIUM_WEB_PYTHON = "APPIUM_WEB_PYTHON"

      # No documentation available.
      #
      APPIUM_WEB_NODE = "APPIUM_WEB_NODE"

      # No documentation available.
      #
      APPIUM_WEB_RUBY = "APPIUM_WEB_RUBY"

      # No documentation available.
      #
      CALABASH = "CALABASH"

      # No documentation available.
      #
      INSTRUMENTATION = "INSTRUMENTATION"

      # No documentation available.
      #
      UIAUTOMATION = "UIAUTOMATION"

      # No documentation available.
      #
      UIAUTOMATOR = "UIAUTOMATOR"

      # No documentation available.
      #
      XCTEST = "XCTEST"

      # No documentation available.
      #
      XCTEST_UI = "XCTEST_UI"

      # No documentation available.
      #
      REMOTE_ACCESS_RECORD = "REMOTE_ACCESS_RECORD"

      # No documentation available.
      #
      REMOTE_ACCESS_REPLAY = "REMOTE_ACCESS_REPLAY"
    end

    # <p>The list of tags on the repository is over the limit. The maximum number of tags that
    #             can be applied to a repository is 50. </p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    # @!attribute resource_name
    #
    #   @return [String]
    #
    TooManyTagsException = ::Struct.new(
      :message,
      :resource_name,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents information about free trial device minutes for an AWS
    #             account.</p>
    #
    # @!attribute total
    #   <p>The total number of free trial minutes that the account started with.</p>
    #
    #   @return [Float]
    #
    # @!attribute remaining
    #   <p>The number of free trial minutes remaining in the account.</p>
    #
    #   @return [Float]
    #
    TrialMinutes = ::Struct.new(
      :total,
      :remaining,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>A collection of one or more problems, grouped by their result.</p>
    #
    # @!attribute message
    #   <p>A message about the unique problems' result.</p>
    #
    #   @return [String]
    #
    # @!attribute problems
    #   <p>Information about the problems.</p>
    #
    #   @return [Array<Problem>]
    #
    UniqueProblem = ::Struct.new(
      :message,
      :problems,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute resource_arn
    #   <p>The Amazon Resource Name (ARN) of the resource or resources from which to delete tags. You can associate
    #               tags with the following Device Farm resources: <code>PROJECT</code>, <code>RUN</code>,
    #                   <code>NETWORK_PROFILE</code>, <code>INSTANCE_PROFILE</code>, <code>DEVICE_INSTANCE</code>,
    #                   <code>SESSION</code>, <code>DEVICE_POOL</code>, <code>DEVICE</code>, and
    #               <code>VPCE_CONFIGURATION</code>.</p>
    #
    #   @return [String]
    #
    # @!attribute tag_keys
    #   <p>The keys of the tags to be removed.</p>
    #
    #   @return [Array<String>]
    #
    UntagResourceInput = ::Struct.new(
      :resource_arn,
      :tag_keys,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    UntagResourceOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the device instance.</p>
    #
    #   @return [String]
    #
    # @!attribute profile_arn
    #   <p>The ARN of the profile that you want to associate with the device instance.</p>
    #
    #   @return [String]
    #
    # @!attribute labels
    #   <p>An array of strings that you want to associate with the device instance.</p>
    #
    #   @return [Array<String>]
    #
    UpdateDeviceInstanceInput = ::Struct.new(
      :arn,
      :profile_arn,
      :labels,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute device_instance
    #   <p>An object that contains information about your device instance.</p>
    #
    #   @return [DeviceInstance]
    #
    UpdateDeviceInstanceOutput = ::Struct.new(
      :device_instance,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the update device pool operation.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the Device Farm device pool to update.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>A string that represents the name of the device pool to update.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>A description of the device pool to update.</p>
    #
    #   @return [String]
    #
    # @!attribute rules
    #   <p>Represents the rules to modify for the device pool. Updating rules is optional. If you update rules for
    #               your request, the update replaces the existing rules.</p>
    #
    #   @return [Array<Rule>]
    #
    # @!attribute max_devices
    #   <p>The number of devices that Device Farm can add to your device pool. Device Farm adds
    #               devices that are available and that meet the criteria that you assign for the
    #                   <code>rules</code> parameter. Depending on how many devices meet these constraints,
    #               your device pool might contain fewer devices than the value for this parameter.</p>
    #           <p>By specifying the maximum number of devices, you can control the costs that you incur
    #               by running tests.</p>
    #           <p>If you use this parameter in your request, you cannot use the
    #                   <code>clearMaxDevices</code> parameter in the same request.</p>
    #
    #   @return [Integer]
    #
    # @!attribute clear_max_devices
    #   <p>Sets whether the <code>maxDevices</code> parameter applies to your device pool. If you set this parameter
    #               to <code>true</code>, the <code>maxDevices</code> parameter does not apply, and Device Farm does not limit
    #               the number of devices that it adds to your device pool. In this case, Device Farm adds all available devices
    #               that meet the criteria specified in the <code>rules</code> parameter.</p>
    #           <p>If you use this parameter in your request, you cannot use the <code>maxDevices</code>
    #               parameter in the same request.</p>
    #
    #   @return [Boolean]
    #
    UpdateDevicePoolInput = ::Struct.new(
      :arn,
      :name,
      :description,
      :rules,
      :max_devices,
      :clear_max_devices,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of an update device pool request.</p>
    #
    # @!attribute device_pool
    #   <p>The device pool you just updated.</p>
    #
    #   @return [DevicePool]
    #
    UpdateDevicePoolOutput = ::Struct.new(
      :device_pool,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the instance profile.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The updated name for your instance profile.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>The updated description for your instance profile.</p>
    #
    #   @return [String]
    #
    # @!attribute package_cleanup
    #   <p>The updated choice for whether you want to specify package cleanup. The default value
    #               is <code>false</code> for private devices.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute exclude_app_packages_from_cleanup
    #   <p>An array of strings that specifies the list of app packages that should not be cleaned up from the device
    #               after a test run is over.</p>
    #           <p>The list of packages is only considered if you set <code>packageCleanup</code> to
    #                   <code>true</code>.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute reboot_after_use
    #   <p>The updated choice for whether you want to reboot the device after use. The default
    #               value is <code>true</code>.</p>
    #
    #   @return [Boolean]
    #
    UpdateInstanceProfileInput = ::Struct.new(
      :arn,
      :name,
      :description,
      :package_cleanup,
      :exclude_app_packages_from_cleanup,
      :reboot_after_use,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_profile
    #   <p>An object that contains information about your instance profile.</p>
    #
    #   @return [InstanceProfile]
    #
    UpdateInstanceProfileOutput = ::Struct.new(
      :instance_profile,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the project for which you want to update network
    #               profile settings.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The name of the network profile about which you are returning
    #               information.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>The description of the network profile about which you are returning
    #               information.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The type of network profile to return information about. Valid values are listed here.</p>
    #
    #   Enum, one of: ["CURATED", "PRIVATE"]
    #
    #   @return [String]
    #
    # @!attribute uplink_bandwidth_bits
    #   <p>The data throughput rate in bits per second, as an integer from 0 to
    #               104857600.</p>
    #
    #   @return [Integer]
    #
    # @!attribute downlink_bandwidth_bits
    #   <p>The data throughput rate in bits per second, as an integer from 0 to
    #               104857600.</p>
    #
    #   @return [Integer]
    #
    # @!attribute uplink_delay_ms
    #   <p>Delay time for all packets to destination in milliseconds as an integer from 0 to
    #               2000.</p>
    #
    #   @return [Integer]
    #
    # @!attribute downlink_delay_ms
    #   <p>Delay time for all packets to destination in milliseconds as an integer from 0 to
    #               2000.</p>
    #
    #   @return [Integer]
    #
    # @!attribute uplink_jitter_ms
    #   <p>Time variation in the delay of received packets in milliseconds as an integer from
    #               0 to 2000.</p>
    #
    #   @return [Integer]
    #
    # @!attribute downlink_jitter_ms
    #   <p>Time variation in the delay of received packets in milliseconds as an integer from
    #               0 to 2000.</p>
    #
    #   @return [Integer]
    #
    # @!attribute uplink_loss_percent
    #   <p>Proportion of transmitted packets that fail to arrive from 0 to 100
    #               percent.</p>
    #
    #   @return [Integer]
    #
    # @!attribute downlink_loss_percent
    #   <p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>
    #
    #   @return [Integer]
    #
    UpdateNetworkProfileInput = ::Struct.new(
      :arn,
      :name,
      :description,
      :type,
      :uplink_bandwidth_bits,
      :downlink_bandwidth_bits,
      :uplink_delay_ms,
      :downlink_delay_ms,
      :uplink_jitter_ms,
      :downlink_jitter_ms,
      :uplink_loss_percent,
      :downlink_loss_percent,
      keyword_init: true
    ) do
      include Hearth::Structure
      def initialize(*)
        super
        self.uplink_loss_percent ||= 0
        self.downlink_loss_percent ||= 0
      end

    end

    # @!attribute network_profile
    #   <p>A list of the available network profiles.</p>
    #
    #   @return [NetworkProfile]
    #
    UpdateNetworkProfileOutput = ::Struct.new(
      :network_profile,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents a request to the update project operation.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the project whose name to update.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>A string that represents the new name of the project that you are updating.</p>
    #
    #   @return [String]
    #
    # @!attribute default_job_timeout_minutes
    #   <p>The number of minutes a test run in the project executes before it times out.</p>
    #
    #   @return [Integer]
    #
    UpdateProjectInput = ::Struct.new(
      :arn,
      :name,
      :default_job_timeout_minutes,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Represents the result of an update project request.</p>
    #
    # @!attribute project
    #   <p>The project to update.</p>
    #
    #   @return [Project]
    #
    UpdateProjectOutput = ::Struct.new(
      :project,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute project_arn
    #   <p>ARN of the project to update.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>Human-readable name for the project.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>Human-readable description for the project.</p>
    #
    #   @return [String]
    #
    # @!attribute vpc_config
    #   <p>The VPC security groups and subnets that are attached to a project.</p>
    #
    #   @return [TestGridVpcConfig]
    #
    UpdateTestGridProjectInput = ::Struct.new(
      :project_arn,
      :name,
      :description,
      :vpc_config,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute test_grid_project
    #   <p>The project, including updated information.</p>
    #
    #   @return [TestGridProject]
    #
    UpdateTestGridProjectOutput = ::Struct.new(
      :test_grid_project,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the uploaded test spec.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The upload's test spec file name. The name must not contain any forward slashes (/). The test spec file
    #               name must end with the <code>.yaml</code> or <code>.yml</code> file extension.</p>
    #
    #   @return [String]
    #
    # @!attribute content_type
    #   <p>The upload's content type (for example, <code>application/x-yaml</code>).</p>
    #
    #   @return [String]
    #
    # @!attribute edit_content
    #   <p>Set to true if the YAML file has changed and must be updated. Otherwise, set to false.</p>
    #
    #   @return [Boolean]
    #
    UpdateUploadInput = ::Struct.new(
      :arn,
      :name,
      :content_type,
      :edit_content,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute upload
    #   <p>A test spec uploaded to Device Farm.</p>
    #
    #   @return [Upload]
    #
    UpdateUploadOutput = ::Struct.new(
      :upload,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to
    #               update.</p>
    #
    #   @return [String]
    #
    # @!attribute vpce_configuration_name
    #   <p>The friendly name you give to your VPC endpoint configuration to manage your configurations more
    #               easily.</p>
    #
    #   @return [String]
    #
    # @!attribute vpce_service_name
    #   <p>The name of the VPC endpoint service running in your AWS account that you want Device Farm to test.</p>
    #
    #   @return [String]
    #
    # @!attribute service_dns_name
    #   <p>The DNS (domain) name used to connect to your private service in your VPC. The DNS name must not already
    #               be in use on the internet.</p>
    #
    #   @return [String]
    #
    # @!attribute vpce_configuration_description
    #   <p>An optional description that provides details about your VPC endpoint configuration.</p>
    #
    #   @return [String]
    #
    UpdateVPCEConfigurationInput = ::Struct.new(
      :arn,
      :vpce_configuration_name,
      :vpce_service_name,
      :service_dns_name,
      :vpce_configuration_description,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute vpce_configuration
    #   <p>An object that contains information about your VPC endpoint configuration.</p>
    #
    #   @return [VPCEConfiguration]
    #
    UpdateVPCEConfigurationOutput = ::Struct.new(
      :vpce_configuration,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>An app or a set of one or more tests to upload or that have been
    #             uploaded.</p>
    #
    # @!attribute arn
    #   <p>The upload's ARN.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The upload's file name.</p>
    #
    #   @return [String]
    #
    # @!attribute created
    #   <p>When the upload was created.</p>
    #
    #   @return [Time]
    #
    # @!attribute type
    #   <p>The upload's type.</p>
    #           <p>Must be one of the following values:</p>
    #           <ul>
    #               <li>
    #                   <p>ANDROID_APP</p>
    #               </li>
    #               <li>
    #                   <p>IOS_APP</p>
    #               </li>
    #               <li>
    #                   <p>WEB_APP</p>
    #               </li>
    #               <li>
    #                   <p>EXTERNAL_DATA</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_PYTHON_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_NODE_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_RUBY_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_PYTHON_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_NODE_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_RUBY_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>CALABASH_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>INSTRUMENTATION_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATION_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>UIAUTOMATOR_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_UI_TEST_PACKAGE</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_JUNIT_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_JAVA_TESTNG_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_PYTHON_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_NODE_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_RUBY_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_PYTHON_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_NODE_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>APPIUM_WEB_RUBY_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>INSTRUMENTATION_TEST_SPEC</p>
    #               </li>
    #               <li>
    #                   <p>XCTEST_UI_TEST_SPEC</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["ANDROID_APP", "IOS_APP", "WEB_APP", "EXTERNAL_DATA", "APPIUM_JAVA_JUNIT_TEST_PACKAGE", "APPIUM_JAVA_TESTNG_TEST_PACKAGE", "APPIUM_PYTHON_TEST_PACKAGE", "APPIUM_NODE_TEST_PACKAGE", "APPIUM_RUBY_TEST_PACKAGE", "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE", "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE", "APPIUM_WEB_PYTHON_TEST_PACKAGE", "APPIUM_WEB_NODE_TEST_PACKAGE", "APPIUM_WEB_RUBY_TEST_PACKAGE", "CALABASH_TEST_PACKAGE", "INSTRUMENTATION_TEST_PACKAGE", "UIAUTOMATION_TEST_PACKAGE", "UIAUTOMATOR_TEST_PACKAGE", "XCTEST_TEST_PACKAGE", "XCTEST_UI_TEST_PACKAGE", "APPIUM_JAVA_JUNIT_TEST_SPEC", "APPIUM_JAVA_TESTNG_TEST_SPEC", "APPIUM_PYTHON_TEST_SPEC", "APPIUM_NODE_TEST_SPEC", "APPIUM_RUBY_TEST_SPEC", "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC", "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC", "APPIUM_WEB_PYTHON_TEST_SPEC", "APPIUM_WEB_NODE_TEST_SPEC", "APPIUM_WEB_RUBY_TEST_SPEC", "INSTRUMENTATION_TEST_SPEC", "XCTEST_UI_TEST_SPEC"]
    #
    #   @return [String]
    #
    # @!attribute status
    #   <p>The upload's status.</p>
    #           <p>Must be one of the following values:</p>
    #           <ul>
    #               <li>
    #                   <p>FAILED</p>
    #               </li>
    #               <li>
    #                   <p>INITIALIZED</p>
    #               </li>
    #               <li>
    #                   <p>PROCESSING</p>
    #               </li>
    #               <li>
    #                   <p>SUCCEEDED</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["INITIALIZED", "PROCESSING", "SUCCEEDED", "FAILED"]
    #
    #   @return [String]
    #
    # @!attribute url
    #   <p>The presigned Amazon S3 URL that was used to store a file using a PUT request.</p>
    #
    #   @return [String]
    #
    # @!attribute metadata
    #   <p>The upload's metadata. For example, for Android, this contains information that is
    #               parsed from the manifest and is displayed in the AWS Device Farm console after the
    #               associated app is uploaded.</p>
    #
    #   @return [String]
    #
    # @!attribute content_type
    #   <p>The upload's content type (for example, <code>application/octet-stream</code>).</p>
    #
    #   @return [String]
    #
    # @!attribute message
    #   <p>A message about the upload's result.</p>
    #
    #   @return [String]
    #
    # @!attribute category
    #   <p>The upload's category. Allowed values include:</p>
    #           <ul>
    #               <li>
    #                   <p>CURATED: An upload managed by AWS Device Farm.</p>
    #               </li>
    #               <li>
    #                   <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["CURATED", "PRIVATE"]
    #
    #   @return [String]
    #
    Upload = ::Struct.new(
      :arn,
      :name,
      :created,
      :type,
      :status,
      :url,
      :metadata,
      :content_type,
      :message,
      :category,
      keyword_init: true
    ) do
      include Hearth::Structure

      def to_s
        "#<struct AWS::SDK::DeviceFarm::Types::Upload "\
          "arn=#{arn || 'nil'}, "\
          "name=#{name || 'nil'}, "\
          "created=#{created || 'nil'}, "\
          "type=#{type || 'nil'}, "\
          "status=#{status || 'nil'}, "\
          "url=\"[SENSITIVE]\", "\
          "metadata=#{metadata || 'nil'}, "\
          "content_type=#{content_type || 'nil'}, "\
          "message=#{message || 'nil'}, "\
          "category=#{category || 'nil'}>"
      end
    end

    # Includes enum constants for UploadCategory
    #
    module UploadCategory
      # No documentation available.
      #
      CURATED = "CURATED"

      # No documentation available.
      #
      PRIVATE = "PRIVATE"
    end

    # Includes enum constants for UploadStatus
    #
    module UploadStatus
      # No documentation available.
      #
      INITIALIZED = "INITIALIZED"

      # No documentation available.
      #
      PROCESSING = "PROCESSING"

      # No documentation available.
      #
      SUCCEEDED = "SUCCEEDED"

      # No documentation available.
      #
      FAILED = "FAILED"
    end

    # Includes enum constants for UploadType
    #
    module UploadType
      # No documentation available.
      #
      ANDROID_APP = "ANDROID_APP"

      # No documentation available.
      #
      IOS_APP = "IOS_APP"

      # No documentation available.
      #
      WEB_APP = "WEB_APP"

      # No documentation available.
      #
      EXTERNAL_DATA = "EXTERNAL_DATA"

      # No documentation available.
      #
      APPIUM_JAVA_JUNIT_TEST_PACKAGE = "APPIUM_JAVA_JUNIT_TEST_PACKAGE"

      # No documentation available.
      #
      APPIUM_JAVA_TESTNG_TEST_PACKAGE = "APPIUM_JAVA_TESTNG_TEST_PACKAGE"

      # No documentation available.
      #
      APPIUM_PYTHON_TEST_PACKAGE = "APPIUM_PYTHON_TEST_PACKAGE"

      # No documentation available.
      #
      APPIUM_NODE_TEST_PACKAGE = "APPIUM_NODE_TEST_PACKAGE"

      # No documentation available.
      #
      APPIUM_RUBY_TEST_PACKAGE = "APPIUM_RUBY_TEST_PACKAGE"

      # No documentation available.
      #
      APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE = "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE"

      # No documentation available.
      #
      APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE = "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE"

      # No documentation available.
      #
      APPIUM_WEB_PYTHON_TEST_PACKAGE = "APPIUM_WEB_PYTHON_TEST_PACKAGE"

      # No documentation available.
      #
      APPIUM_WEB_NODE_TEST_PACKAGE = "APPIUM_WEB_NODE_TEST_PACKAGE"

      # No documentation available.
      #
      APPIUM_WEB_RUBY_TEST_PACKAGE = "APPIUM_WEB_RUBY_TEST_PACKAGE"

      # No documentation available.
      #
      CALABASH_TEST_PACKAGE = "CALABASH_TEST_PACKAGE"

      # No documentation available.
      #
      INSTRUMENTATION_TEST_PACKAGE = "INSTRUMENTATION_TEST_PACKAGE"

      # No documentation available.
      #
      UIAUTOMATION_TEST_PACKAGE = "UIAUTOMATION_TEST_PACKAGE"

      # No documentation available.
      #
      UIAUTOMATOR_TEST_PACKAGE = "UIAUTOMATOR_TEST_PACKAGE"

      # No documentation available.
      #
      XCTEST_TEST_PACKAGE = "XCTEST_TEST_PACKAGE"

      # No documentation available.
      #
      XCTEST_UI_TEST_PACKAGE = "XCTEST_UI_TEST_PACKAGE"

      # No documentation available.
      #
      APPIUM_JAVA_JUNIT_TEST_SPEC = "APPIUM_JAVA_JUNIT_TEST_SPEC"

      # No documentation available.
      #
      APPIUM_JAVA_TESTNG_TEST_SPEC = "APPIUM_JAVA_TESTNG_TEST_SPEC"

      # No documentation available.
      #
      APPIUM_PYTHON_TEST_SPEC = "APPIUM_PYTHON_TEST_SPEC"

      # No documentation available.
      #
      APPIUM_NODE_TEST_SPEC = "APPIUM_NODE_TEST_SPEC"

      # No documentation available.
      #
      APPIUM_RUBY_TEST_SPEC = "APPIUM_RUBY_TEST_SPEC"

      # No documentation available.
      #
      APPIUM_WEB_JAVA_JUNIT_TEST_SPEC = "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC"

      # No documentation available.
      #
      APPIUM_WEB_JAVA_TESTNG_TEST_SPEC = "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC"

      # No documentation available.
      #
      APPIUM_WEB_PYTHON_TEST_SPEC = "APPIUM_WEB_PYTHON_TEST_SPEC"

      # No documentation available.
      #
      APPIUM_WEB_NODE_TEST_SPEC = "APPIUM_WEB_NODE_TEST_SPEC"

      # No documentation available.
      #
      APPIUM_WEB_RUBY_TEST_SPEC = "APPIUM_WEB_RUBY_TEST_SPEC"

      # No documentation available.
      #
      INSTRUMENTATION_TEST_SPEC = "INSTRUMENTATION_TEST_SPEC"

      # No documentation available.
      #
      XCTEST_UI_TEST_SPEC = "XCTEST_UI_TEST_SPEC"
    end

    # <p>Represents an Amazon Virtual Private Cloud (VPC) endpoint configuration.</p>
    #
    # @!attribute arn
    #   <p>The Amazon Resource Name (ARN) of the VPC endpoint configuration.</p>
    #
    #   @return [String]
    #
    # @!attribute vpce_configuration_name
    #   <p>The friendly name you give to your VPC endpoint configuration to manage your configurations more
    #               easily.</p>
    #
    #   @return [String]
    #
    # @!attribute vpce_service_name
    #   <p>The name of the VPC endpoint service running in your AWS account that you want Device Farm to test.</p>
    #
    #   @return [String]
    #
    # @!attribute service_dns_name
    #   <p>The DNS name that maps to the private IP address of the service you want to
    #               access.</p>
    #
    #   @return [String]
    #
    # @!attribute vpce_configuration_description
    #   <p>An optional description that provides details about your VPC endpoint configuration.</p>
    #
    #   @return [String]
    #
    VPCEConfiguration = ::Struct.new(
      :arn,
      :vpce_configuration_name,
      :vpce_service_name,
      :service_dns_name,
      :vpce_configuration_description,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

  end
end
