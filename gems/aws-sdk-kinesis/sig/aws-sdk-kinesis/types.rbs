# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file was code generated using smithy-ruby.
# https://github.com/smithy-lang/smithy-ruby
#
# WARNING ABOUT GENERATED CODE

module AWS::SDK::Kinesis
  module Types

    class AccessDeniedException
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class AddTagsToStreamInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor tags (): ::Hash[::String, ::String]
      attr_accessor stream_arn (): ::String?
    end

    class AddTagsToStreamOutput
      include Hearth::Structure
    end

    class ChildShard
      include Hearth::Structure
      attr_accessor shard_id (): ::String
      attr_accessor parent_shards (): ::Array[::String]
      attr_accessor hash_key_range (): Types::HashKeyRange
    end

    class Consumer
      include Hearth::Structure
      attr_accessor consumer_name (): ::String
      attr_accessor consumer_arn (): ::String
      attr_accessor consumer_status (): ::String
      attr_accessor consumer_creation_timestamp (): ::Time
    end

    class ConsumerDescription
      include Hearth::Structure
      attr_accessor consumer_name (): ::String
      attr_accessor consumer_arn (): ::String
      attr_accessor consumer_status (): ::String
      attr_accessor consumer_creation_timestamp (): ::Time
      attr_accessor stream_arn (): ::String
    end

    module ConsumerStatus
      CREATING: ::String

      DELETING: ::String

      ACTIVE: ::String
    end

    class CreateStreamInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String
      attr_accessor shard_count (): ::Integer?
      attr_accessor stream_mode_details (): Types::StreamModeDetails?
    end

    class CreateStreamOutput
      include Hearth::Structure
    end

    class DecreaseStreamRetentionPeriodInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor retention_period_hours (): ::Integer
      attr_accessor stream_arn (): ::String?
    end

    class DecreaseStreamRetentionPeriodOutput
      include Hearth::Structure
    end

    class DeleteResourcePolicyInput
      include Hearth::Structure
      attr_accessor resource_arn (): ::String
    end

    class DeleteResourcePolicyOutput
      include Hearth::Structure
    end

    class DeleteStreamInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor enforce_consumer_deletion (): bool?
      attr_accessor stream_arn (): ::String?
    end

    class DeleteStreamOutput
      include Hearth::Structure
    end

    class DeregisterStreamConsumerInput
      include Hearth::Structure
      attr_accessor stream_arn (): ::String?
      attr_accessor consumer_name (): ::String?
      attr_accessor consumer_arn (): ::String?
    end

    class DeregisterStreamConsumerOutput
      include Hearth::Structure
    end

    class DescribeLimitsInput
      include Hearth::Structure
    end

    class DescribeLimitsOutput
      include Hearth::Structure
      attr_accessor shard_limit (): ::Integer
      attr_accessor open_shard_count (): ::Integer
      attr_accessor on_demand_stream_count (): ::Integer
      attr_accessor on_demand_stream_count_limit (): ::Integer
    end

    class DescribeStreamConsumerInput
      include Hearth::Structure
      attr_accessor stream_arn (): ::String?
      attr_accessor consumer_name (): ::String?
      attr_accessor consumer_arn (): ::String?
    end

    class DescribeStreamConsumerOutput
      include Hearth::Structure
      attr_accessor consumer_description (): Types::ConsumerDescription
    end

    class DescribeStreamInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor limit (): ::Integer?
      attr_accessor exclusive_start_shard_id (): ::String?
      attr_accessor stream_arn (): ::String?
    end

    class DescribeStreamOutput
      include Hearth::Structure
      attr_accessor stream_description (): Types::StreamDescription
    end

    class DescribeStreamSummaryInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor stream_arn (): ::String?
    end

    class DescribeStreamSummaryOutput
      include Hearth::Structure
      attr_accessor stream_description_summary (): Types::StreamDescriptionSummary
    end

    class DisableEnhancedMonitoringInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor shard_level_metrics (): ::Array[::String]
      attr_accessor stream_arn (): ::String?
    end

    class DisableEnhancedMonitoringOutput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor current_shard_level_metrics (): ::Array[::String]?
      attr_accessor desired_shard_level_metrics (): ::Array[::String]?
      attr_accessor stream_arn (): ::String?
    end

    class EnableEnhancedMonitoringInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor shard_level_metrics (): ::Array[::String]
      attr_accessor stream_arn (): ::String?
    end

    class EnableEnhancedMonitoringOutput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor current_shard_level_metrics (): ::Array[::String]?
      attr_accessor desired_shard_level_metrics (): ::Array[::String]?
      attr_accessor stream_arn (): ::String?
    end

    module EncryptionType
      NONE: ::String

      KMS: ::String
    end

    class EnhancedMetrics
      include Hearth::Structure
      attr_accessor shard_level_metrics (): ::Array[::String]?
    end

    class ExpiredIteratorException
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class ExpiredNextTokenException
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class GetRecordsInput
      include Hearth::Structure
      attr_accessor shard_iterator (): ::String
      attr_accessor limit (): ::Integer?
      attr_accessor stream_arn (): ::String?
    end

    class GetRecordsOutput
      include Hearth::Structure
      attr_accessor records (): ::Array[Types::Record]
      attr_accessor next_shard_iterator (): ::String?
      attr_accessor millis_behind_latest (): ::Integer?
      attr_accessor child_shards (): ::Array[Types::ChildShard]?
    end

    class GetResourcePolicyInput
      include Hearth::Structure
      attr_accessor resource_arn (): ::String
    end

    class GetResourcePolicyOutput
      include Hearth::Structure
      attr_accessor policy (): ::String
    end

    class GetShardIteratorInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor shard_id (): ::String
      attr_accessor shard_iterator_type (): ::String
      attr_accessor starting_sequence_number (): ::String?
      attr_accessor timestamp (): ::Time?
      attr_accessor stream_arn (): ::String?
    end

    class GetShardIteratorOutput
      include Hearth::Structure
      attr_accessor shard_iterator (): ::String?
    end

    class HashKeyRange
      include Hearth::Structure
      attr_accessor starting_hash_key (): ::String
      attr_accessor ending_hash_key (): ::String
    end

    class IncreaseStreamRetentionPeriodInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor retention_period_hours (): ::Integer
      attr_accessor stream_arn (): ::String?
    end

    class IncreaseStreamRetentionPeriodOutput
      include Hearth::Structure
    end

    class InternalFailureException
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class InvalidArgumentException
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class KMSAccessDeniedException
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class KMSDisabledException
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class KMSInvalidStateException
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class KMSNotFoundException
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class KMSOptInRequired
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class KMSThrottlingException
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class LimitExceededException
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class ListShardsInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor next_token (): ::String?
      attr_accessor exclusive_start_shard_id (): ::String?
      attr_accessor max_results (): ::Integer?
      attr_accessor stream_creation_timestamp (): ::Time?
      attr_accessor shard_filter (): Types::ShardFilter?
      attr_accessor stream_arn (): ::String?
    end

    class ListShardsOutput
      include Hearth::Structure
      attr_accessor shards (): ::Array[Types::Shard]?
      attr_accessor next_token (): ::String?
    end

    class ListStreamConsumersInput
      include Hearth::Structure
      attr_accessor stream_arn (): ::String
      attr_accessor next_token (): ::String?
      attr_accessor max_results (): ::Integer?
      attr_accessor stream_creation_timestamp (): ::Time?
    end

    class ListStreamConsumersOutput
      include Hearth::Structure
      attr_accessor consumers (): ::Array[Types::Consumer]?
      attr_accessor next_token (): ::String?
    end

    class ListStreamsInput
      include Hearth::Structure
      attr_accessor limit (): ::Integer?
      attr_accessor exclusive_start_stream_name (): ::String?
      attr_accessor next_token (): ::String?
    end

    class ListStreamsOutput
      include Hearth::Structure
      attr_accessor stream_names (): ::Array[::String]
      attr_accessor has_more_streams (): bool
      attr_accessor next_token (): ::String?
      attr_accessor stream_summaries (): ::Array[Types::StreamSummary]?
    end

    class ListTagsForStreamInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor exclusive_start_tag_key (): ::String?
      attr_accessor limit (): ::Integer?
      attr_accessor stream_arn (): ::String?
    end

    class ListTagsForStreamOutput
      include Hearth::Structure
      attr_accessor tags (): ::Array[Types::Tag]
      attr_accessor has_more_tags (): bool
    end

    class MergeShardsInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor shard_to_merge (): ::String
      attr_accessor adjacent_shard_to_merge (): ::String
      attr_accessor stream_arn (): ::String?
    end

    class MergeShardsOutput
      include Hearth::Structure
    end

    module MetricsName
      INCOMING_BYTES: ::String

      INCOMING_RECORDS: ::String

      OUTGOING_BYTES: ::String

      OUTGOING_RECORDS: ::String

      WRITE_PROVISIONED_THROUGHPUT_EXCEEDED: ::String

      READ_PROVISIONED_THROUGHPUT_EXCEEDED: ::String

      ITERATOR_AGE_MILLISECONDS: ::String

      ALL: ::String
    end

    class ProvisionedThroughputExceededException
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class PutRecordInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor data (): ::String
      attr_accessor partition_key (): ::String
      attr_accessor explicit_hash_key (): ::String?
      attr_accessor sequence_number_for_ordering (): ::String?
      attr_accessor stream_arn (): ::String?
    end

    class PutRecordOutput
      include Hearth::Structure
      attr_accessor shard_id (): ::String
      attr_accessor sequence_number (): ::String
      attr_accessor encryption_type (): ::String?
    end

    class PutRecordsInput
      include Hearth::Structure
      attr_accessor records (): ::Array[Types::PutRecordsRequestEntry]
      attr_accessor stream_name (): ::String?
      attr_accessor stream_arn (): ::String?
    end

    class PutRecordsOutput
      include Hearth::Structure
      attr_accessor failed_record_count (): ::Integer?
      attr_accessor records (): ::Array[Types::PutRecordsResultEntry]
      attr_accessor encryption_type (): ::String?
    end

    class PutRecordsRequestEntry
      include Hearth::Structure
      attr_accessor data (): ::String
      attr_accessor explicit_hash_key (): ::String?
      attr_accessor partition_key (): ::String
    end

    class PutRecordsResultEntry
      include Hearth::Structure
      attr_accessor sequence_number (): ::String?
      attr_accessor shard_id (): ::String?
      attr_accessor error_code (): ::String?
      attr_accessor error_message (): ::String?
    end

    class PutResourcePolicyInput
      include Hearth::Structure
      attr_accessor resource_arn (): ::String
      attr_accessor policy (): ::String
    end

    class PutResourcePolicyOutput
      include Hearth::Structure
    end

    class Record
      include Hearth::Structure
      attr_accessor sequence_number (): ::String
      attr_accessor approximate_arrival_timestamp (): ::Time?
      attr_accessor data (): ::String
      attr_accessor partition_key (): ::String
      attr_accessor encryption_type (): ::String?
    end

    class RegisterStreamConsumerInput
      include Hearth::Structure
      attr_accessor stream_arn (): ::String
      attr_accessor consumer_name (): ::String
    end

    class RegisterStreamConsumerOutput
      include Hearth::Structure
      attr_accessor consumer (): Types::Consumer
    end

    class RemoveTagsFromStreamInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor tag_keys (): ::Array[::String]
      attr_accessor stream_arn (): ::String?
    end

    class RemoveTagsFromStreamOutput
      include Hearth::Structure
    end

    class ResourceInUseException
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    class ResourceNotFoundException
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

    module ScalingType
      UNIFORM_SCALING: ::String
    end

    class SequenceNumberRange
      include Hearth::Structure
      attr_accessor starting_sequence_number (): ::String
      attr_accessor ending_sequence_number (): ::String?
    end

    class Shard
      include Hearth::Structure
      attr_accessor shard_id (): ::String
      attr_accessor parent_shard_id (): ::String?
      attr_accessor adjacent_parent_shard_id (): ::String?
      attr_accessor hash_key_range (): Types::HashKeyRange
      attr_accessor sequence_number_range (): Types::SequenceNumberRange
    end

    class ShardFilter
      include Hearth::Structure
      attr_accessor type (): ::String
      attr_accessor shard_id (): ::String?
      attr_accessor timestamp (): ::Time?
    end

    module ShardFilterType
      AFTER_SHARD_ID: ::String

      AT_TRIM_HORIZON: ::String

      FROM_TRIM_HORIZON: ::String

      AT_LATEST: ::String

      AT_TIMESTAMP: ::String

      FROM_TIMESTAMP: ::String
    end

    module ShardIteratorType
      AT_SEQUENCE_NUMBER: ::String

      AFTER_SEQUENCE_NUMBER: ::String

      TRIM_HORIZON: ::String

      LATEST: ::String

      AT_TIMESTAMP: ::String
    end

    class SplitShardInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor shard_to_split (): ::String
      attr_accessor new_starting_hash_key (): ::String
      attr_accessor stream_arn (): ::String?
    end

    class SplitShardOutput
      include Hearth::Structure
    end

    class StartStreamEncryptionInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor encryption_type (): ::String
      attr_accessor key_id (): ::String
      attr_accessor stream_arn (): ::String?
    end

    class StartStreamEncryptionOutput
      include Hearth::Structure
    end

    class StartingPosition
      include Hearth::Structure
      attr_accessor type (): ::String
      attr_accessor sequence_number (): ::String?
      attr_accessor timestamp (): ::Time?
    end

    class StopStreamEncryptionInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor encryption_type (): ::String
      attr_accessor key_id (): ::String
      attr_accessor stream_arn (): ::String?
    end

    class StopStreamEncryptionOutput
      include Hearth::Structure
    end

    class StreamDescription
      include Hearth::Structure
      attr_accessor stream_name (): ::String
      attr_accessor stream_arn (): ::String
      attr_accessor stream_status (): ::String
      attr_accessor stream_mode_details (): Types::StreamModeDetails?
      attr_accessor shards (): ::Array[Types::Shard]
      attr_accessor has_more_shards (): bool
      attr_accessor retention_period_hours (): ::Integer
      attr_accessor stream_creation_timestamp (): ::Time
      attr_accessor enhanced_monitoring (): ::Array[Types::EnhancedMetrics]
      attr_accessor encryption_type (): ::String?
      attr_accessor key_id (): ::String?
    end

    class StreamDescriptionSummary
      include Hearth::Structure
      attr_accessor stream_name (): ::String
      attr_accessor stream_arn (): ::String
      attr_accessor stream_status (): ::String
      attr_accessor stream_mode_details (): Types::StreamModeDetails?
      attr_accessor retention_period_hours (): ::Integer
      attr_accessor stream_creation_timestamp (): ::Time
      attr_accessor enhanced_monitoring (): ::Array[Types::EnhancedMetrics]
      attr_accessor encryption_type (): ::String?
      attr_accessor key_id (): ::String?
      attr_accessor open_shard_count (): ::Integer
      attr_accessor consumer_count (): ::Integer?
    end

    module StreamMode
      PROVISIONED: ::String

      ON_DEMAND: ::String
    end

    class StreamModeDetails
      include Hearth::Structure
      attr_accessor stream_mode (): ::String
    end

    module StreamStatus
      CREATING: ::String

      DELETING: ::String

      ACTIVE: ::String

      UPDATING: ::String
    end

    class StreamSummary
      include Hearth::Structure
      attr_accessor stream_name (): ::String
      attr_accessor stream_arn (): ::String
      attr_accessor stream_status (): ::String
      attr_accessor stream_mode_details (): Types::StreamModeDetails?
      attr_accessor stream_creation_timestamp (): ::Time?
    end

    class SubscribeToShardEvent
      include Hearth::Structure
      attr_accessor records (): ::Array[Types::Record]
      attr_accessor continuation_sequence_number (): ::String
      attr_accessor millis_behind_latest (): ::Integer
      attr_accessor child_shards (): ::Array[Types::ChildShard]?
    end

    class SubscribeToShardEventStream < Hearth::Union
      class SubscribeToShardEvent < SubscribeToShardEventStream
        def to_h: () -> { subscribe_to_shard_event: ::Hash[::Symbol, untyped] }
        def to_s: () -> String
      end

      class ResourceNotFoundException < SubscribeToShardEventStream
        def to_h: () -> { resource_not_found_exception: ::Hash[::Symbol, untyped] }
        def to_s: () -> String
      end

      class ResourceInUseException < SubscribeToShardEventStream
        def to_h: () -> { resource_in_use_exception: ::Hash[::Symbol, untyped] }
        def to_s: () -> String
      end

      class KmsDisabledException < SubscribeToShardEventStream
        def to_h: () -> { kms_disabled_exception: ::Hash[::Symbol, untyped] }
        def to_s: () -> String
      end

      class KmsInvalidStateException < SubscribeToShardEventStream
        def to_h: () -> { kms_invalid_state_exception: ::Hash[::Symbol, untyped] }
        def to_s: () -> String
      end

      class KmsAccessDeniedException < SubscribeToShardEventStream
        def to_h: () -> { kms_access_denied_exception: ::Hash[::Symbol, untyped] }
        def to_s: () -> String
      end

      class KmsNotFoundException < SubscribeToShardEventStream
        def to_h: () -> { kms_not_found_exception: ::Hash[::Symbol, untyped] }
        def to_s: () -> String
      end

      class KmsOptInRequired < SubscribeToShardEventStream
        def to_h: () -> { kms_opt_in_required: ::Hash[::Symbol, untyped] }
        def to_s: () -> String
      end

      class KmsThrottlingException < SubscribeToShardEventStream
        def to_h: () -> { kms_throttling_exception: ::Hash[::Symbol, untyped] }
        def to_s: () -> String
      end

      class InternalFailureException < SubscribeToShardEventStream
        def to_h: () -> { internal_failure_exception: ::Hash[::Symbol, untyped] }
        def to_s: () -> String
      end

      class Unknown < SubscribeToShardEventStream
        def to_h: () -> { unknown: { name: ::String, value: untyped } }
        def to_s: () -> String
      end
    end

    class SubscribeToShardInput
      include Hearth::Structure
      attr_accessor consumer_arn (): ::String
      attr_accessor shard_id (): ::String
      attr_accessor starting_position (): Types::StartingPosition
    end

    class SubscribeToShardOutput
      include Hearth::Structure
      attr_accessor event_stream (): Types::SubscribeToShardEventStream
    end

    class Tag
      include Hearth::Structure
      attr_accessor key (): ::String
      attr_accessor value (): ::String?
    end

    class UpdateShardCountInput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor target_shard_count (): ::Integer
      attr_accessor scaling_type (): ::String
      attr_accessor stream_arn (): ::String?
    end

    class UpdateShardCountOutput
      include Hearth::Structure
      attr_accessor stream_name (): ::String?
      attr_accessor current_shard_count (): ::Integer?
      attr_accessor target_shard_count (): ::Integer?
      attr_accessor stream_arn (): ::String?
    end

    class UpdateStreamModeInput
      include Hearth::Structure
      attr_accessor stream_arn (): ::String
      attr_accessor stream_mode_details (): Types::StreamModeDetails
    end

    class UpdateStreamModeOutput
      include Hearth::Structure
    end

    class ValidationException
      include Hearth::Structure
      attr_accessor message (): ::String?
    end

  end
end
