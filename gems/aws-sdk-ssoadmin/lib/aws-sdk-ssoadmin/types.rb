# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file was code generated using smithy-ruby.
# https://github.com/awslabs/smithy-ruby
#
# WARNING ABOUT GENERATED CODE

module AWS::SDK::SSOAdmin
  module Types

    # <p>These are Amazon Web Services SSO identity store attributes that you can configure for use in
    #       attributes-based access control (ABAC). You can create permissions policies that determine who
    #       can access your Amazon Web Services resources based upon the configured attribute values. When you enable
    #       ABAC and specify <code>AccessControlAttributes</code>, Amazon Web Services SSO passes the attribute values
    #       of the authenticated user into IAM for use in policy evaluation.</p>
    #
    # @!attribute key
    #   <p>The name of the attribute associated with your identities in your identity source. This is
    #         used to map a specified attribute in your identity source with an attribute in Amazon Web Services
    #         SSO.</p>
    #
    #   @return [String]
    #
    # @!attribute value
    #   <p>The value used for mapping a specified attribute to an identity source.</p>
    #
    #   @return [AccessControlAttributeValue]
    #
    AccessControlAttribute = ::Struct.new(
      :key,
      :value,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The value used for mapping a specified attribute to an identity source.</p>
    #
    # @!attribute source
    #   <p>The identity source to use when mapping a specified attribute to Amazon Web Services SSO.</p>
    #
    #   @return [Array<String>]
    #
    AccessControlAttributeValue = ::Struct.new(
      :source,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>You do not have sufficient access to perform this action.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    AccessDeniedException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The assignment that indicates a principal's limited access to a specified Amazon Web Services account
    #       with a specified permission set.</p>
    #          <note>
    #             <p>The term <i>principal</i> here refers to a user or group that is defined
    #         in Amazon Web Services SSO.</p>
    #          </note>
    #
    # @!attribute account_id
    #   <p>The identifier of the Amazon Web Services account.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the permission set. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute principal_type
    #   <p>The entity type for which the assignment will be created.</p>
    #
    #   Enum, one of: ["USER", "GROUP"]
    #
    #   @return [String]
    #
    # @!attribute principal_id
    #   <p>An identifier for an object in Amazon Web Services SSO, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in Amazon Web Services SSO, see the <a href="/singlesignon/latest/IdentityStoreAPIReference/welcome.html">Amazon Web Services SSO Identity Store API Reference</a>.</p>
    #
    #   @return [String]
    #
    AccountAssignment = ::Struct.new(
      :account_id,
      :permission_set_arn,
      :principal_type,
      :principal_id,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The status of the creation or deletion operation of an assignment that a principal needs
    #       to access an account.</p>
    #
    # @!attribute status
    #   <p>The status of the permission set provisioning process.</p>
    #
    #   Enum, one of: ["IN_PROGRESS", "FAILED", "SUCCEEDED"]
    #
    #   @return [String]
    #
    # @!attribute request_id
    #   <p>The identifier for tracking the request operation that is generated by the universally
    #         unique identifier (UUID) workflow.</p>
    #
    #   @return [String]
    #
    # @!attribute failure_reason
    #   <p>The message that contains an error or exception in case of an operation failure.</p>
    #
    #   @return [String]
    #
    # @!attribute target_id
    #   <p>TargetID is an Amazon Web Services account identifier, typically a 10-12 digit string (For example, 123456789012).</p>
    #
    #   @return [String]
    #
    # @!attribute target_type
    #   <p>The entity type for which the assignment will be created.</p>
    #
    #   Enum, one of: ["AWS_ACCOUNT"]
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the permission set. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute principal_type
    #   <p>The entity type for which the assignment will be created.</p>
    #
    #   Enum, one of: ["USER", "GROUP"]
    #
    #   @return [String]
    #
    # @!attribute principal_id
    #   <p>An identifier for an object in Amazon Web Services SSO, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in Amazon Web Services SSO, see the <a href="/singlesignon/latest/IdentityStoreAPIReference/welcome.html">Amazon Web Services SSO Identity Store API Reference</a>.</p>
    #
    #   @return [String]
    #
    # @!attribute created_date
    #   <p>The date that the permission set was created.</p>
    #
    #   @return [Time]
    #
    AccountAssignmentOperationStatus = ::Struct.new(
      :status,
      :request_id,
      :failure_reason,
      :target_id,
      :target_type,
      :permission_set_arn,
      :principal_type,
      :principal_id,
      :created_date,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Provides information about the <a>AccountAssignment</a> creation
    #       request.</p>
    #
    # @!attribute status
    #   <p>The status of the permission set provisioning process.</p>
    #
    #   Enum, one of: ["IN_PROGRESS", "FAILED", "SUCCEEDED"]
    #
    #   @return [String]
    #
    # @!attribute request_id
    #   <p>The identifier for tracking the request operation that is generated by the universally
    #         unique identifier (UUID) workflow.</p>
    #
    #   @return [String]
    #
    # @!attribute created_date
    #   <p>The date that the permission set was created.</p>
    #
    #   @return [Time]
    #
    AccountAssignmentOperationStatusMetadata = ::Struct.new(
      :status,
      :request_id,
      :created_date,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the <a>PermissionSet</a> that the managed policy should be attached
    #         to.</p>
    #
    #   @return [String]
    #
    # @!attribute managed_policy_arn
    #   <p>The IAM managed policy ARN to be attached to a permission set.</p>
    #
    #   @return [String]
    #
    AttachManagedPolicyToPermissionSetInput = ::Struct.new(
      :instance_arn,
      :permission_set_arn,
      :managed_policy_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    AttachManagedPolicyToPermissionSetOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>A structure that stores the details of the IAM managed policy.</p>
    #
    # @!attribute name
    #   <p>The name of the IAM managed policy.</p>
    #
    #   @return [String]
    #
    # @!attribute arn
    #   <p>The ARN of the IAM managed policy. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    AttachedManagedPolicy = ::Struct.new(
      :name,
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Occurs when a conflict with a previous successful write is detected. This generally occurs
    #       when the previous write did not have time to propagate to the host serving the current
    #       request. A retry (with appropriate backoff logic) is the recommended response to this
    #       exception.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    ConflictException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute target_id
    #   <p>TargetID is an Amazon Web Services account identifier, typically a 10-12 digit string (For example, 123456789012).</p>
    #
    #   @return [String]
    #
    # @!attribute target_type
    #   <p>The entity type for which the assignment will be created.</p>
    #
    #   Enum, one of: ["AWS_ACCOUNT"]
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the permission set that the admin wants to grant the principal access
    #         to.</p>
    #
    #   @return [String]
    #
    # @!attribute principal_type
    #   <p>The entity type for which the assignment will be created.</p>
    #
    #   Enum, one of: ["USER", "GROUP"]
    #
    #   @return [String]
    #
    # @!attribute principal_id
    #   <p>An identifier for an object in Amazon Web Services SSO, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in Amazon Web Services SSO, see the <a href="/singlesignon/latest/IdentityStoreAPIReference/welcome.html">Amazon Web Services SSO Identity Store API Reference</a>.</p>
    #
    #   @return [String]
    #
    CreateAccountAssignmentInput = ::Struct.new(
      :instance_arn,
      :target_id,
      :target_type,
      :permission_set_arn,
      :principal_type,
      :principal_id,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute account_assignment_creation_status
    #   <p>The status object for the account assignment creation operation.</p>
    #
    #   @return [AccountAssignmentOperationStatus]
    #
    CreateAccountAssignmentOutput = ::Struct.new(
      :account_assignment_creation_status,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed.</p>
    #
    #   @return [String]
    #
    # @!attribute instance_access_control_attribute_configuration
    #   <p>Specifies the Amazon Web Services SSO identity store attributes to add to your ABAC configuration.
    #         When using an external identity provider as an identity source, you can pass attributes
    #         through the SAML assertion. Doing so provides an alternative to configuring attributes from
    #         the Amazon Web Services SSO identity store. If a SAML assertion passes any of these attributes, Amazon Web Services
    #         SSO will replace the attribute value with the value from the Amazon Web Services SSO identity
    #         store.</p>
    #
    #   @return [InstanceAccessControlAttributeConfiguration]
    #
    CreateInstanceAccessControlAttributeConfigurationInput = ::Struct.new(
      :instance_arn,
      :instance_access_control_attribute_configuration,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    CreateInstanceAccessControlAttributeConfigurationOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute name
    #   <p>The name of the <a>PermissionSet</a>.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>The description of the <a>PermissionSet</a>.</p>
    #
    #   @return [String]
    #
    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute session_duration
    #   <p>The length of time that the application user sessions are valid in the ISO-8601
    #         standard.</p>
    #
    #   @return [String]
    #
    # @!attribute relay_state
    #   <p>Used to redirect users within the application during the federation authentication
    #         process.</p>
    #
    #   @return [String]
    #
    # @!attribute tags
    #   <p>The tags to attach to the new <a>PermissionSet</a>.</p>
    #
    #   @return [Array<Tag>]
    #
    CreatePermissionSetInput = ::Struct.new(
      :name,
      :description,
      :instance_arn,
      :session_duration,
      :relay_state,
      :tags,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute permission_set
    #   <p>Defines the level of access on an Amazon Web Services account.</p>
    #
    #   @return [PermissionSet]
    #
    CreatePermissionSetOutput = ::Struct.new(
      :permission_set,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute target_id
    #   <p>TargetID is an Amazon Web Services account identifier, typically a 10-12 digit string (For example, 123456789012).</p>
    #
    #   @return [String]
    #
    # @!attribute target_type
    #   <p>The entity type for which the assignment will be deleted.</p>
    #
    #   Enum, one of: ["AWS_ACCOUNT"]
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the permission set that will be used to remove access.</p>
    #
    #   @return [String]
    #
    # @!attribute principal_type
    #   <p>The entity type for which the assignment will be deleted.</p>
    #
    #   Enum, one of: ["USER", "GROUP"]
    #
    #   @return [String]
    #
    # @!attribute principal_id
    #   <p>An identifier for an object in Amazon Web Services SSO, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in Amazon Web Services SSO, see the <a href="/singlesignon/latest/IdentityStoreAPIReference/welcome.html">Amazon Web Services SSO Identity Store API Reference</a>.</p>
    #
    #   @return [String]
    #
    DeleteAccountAssignmentInput = ::Struct.new(
      :instance_arn,
      :target_id,
      :target_type,
      :permission_set_arn,
      :principal_type,
      :principal_id,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute account_assignment_deletion_status
    #   <p>The status object for the account assignment deletion operation.</p>
    #
    #   @return [AccountAssignmentOperationStatus]
    #
    DeleteAccountAssignmentOutput = ::Struct.new(
      :account_assignment_deletion_status,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the permission set that will be used to remove access.</p>
    #
    #   @return [String]
    #
    DeleteInlinePolicyFromPermissionSetInput = ::Struct.new(
      :instance_arn,
      :permission_set_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    DeleteInlinePolicyFromPermissionSetOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed.</p>
    #
    #   @return [String]
    #
    DeleteInstanceAccessControlAttributeConfigurationInput = ::Struct.new(
      :instance_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    DeleteInstanceAccessControlAttributeConfigurationOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the permission set that should be deleted.</p>
    #
    #   @return [String]
    #
    DeletePermissionSetInput = ::Struct.new(
      :instance_arn,
      :permission_set_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    DeletePermissionSetOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute account_assignment_creation_request_id
    #   <p>The identifier that is used to track the request operation progress.</p>
    #
    #   @return [String]
    #
    DescribeAccountAssignmentCreationStatusInput = ::Struct.new(
      :instance_arn,
      :account_assignment_creation_request_id,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute account_assignment_creation_status
    #   <p>The status object for the account assignment creation operation.</p>
    #
    #   @return [AccountAssignmentOperationStatus]
    #
    DescribeAccountAssignmentCreationStatusOutput = ::Struct.new(
      :account_assignment_creation_status,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute account_assignment_deletion_request_id
    #   <p>The identifier that is used to track the request operation progress.</p>
    #
    #   @return [String]
    #
    DescribeAccountAssignmentDeletionStatusInput = ::Struct.new(
      :instance_arn,
      :account_assignment_deletion_request_id,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute account_assignment_deletion_status
    #   <p>The status object for the account assignment deletion operation.</p>
    #
    #   @return [AccountAssignmentOperationStatus]
    #
    DescribeAccountAssignmentDeletionStatusOutput = ::Struct.new(
      :account_assignment_deletion_status,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed.</p>
    #
    #   @return [String]
    #
    DescribeInstanceAccessControlAttributeConfigurationInput = ::Struct.new(
      :instance_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute status
    #   <p>The status of the attribute configuration process.</p>
    #
    #   Enum, one of: ["ENABLED", "CREATION_IN_PROGRESS", "CREATION_FAILED"]
    #
    #   @return [String]
    #
    # @!attribute status_reason
    #   <p>Provides more details about the current status of the specified attribute.</p>
    #
    #   @return [String]
    #
    # @!attribute instance_access_control_attribute_configuration
    #   <p>Gets the list of Amazon Web Services SSO identity store attributes that have been added to your ABAC
    #         configuration.</p>
    #
    #   @return [InstanceAccessControlAttributeConfiguration]
    #
    DescribeInstanceAccessControlAttributeConfigurationOutput = ::Struct.new(
      :status,
      :status_reason,
      :instance_access_control_attribute_configuration,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the permission set.</p>
    #
    #   @return [String]
    #
    DescribePermissionSetInput = ::Struct.new(
      :instance_arn,
      :permission_set_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute permission_set
    #   <p>Describes the level of access on an Amazon Web Services account.</p>
    #
    #   @return [PermissionSet]
    #
    DescribePermissionSetOutput = ::Struct.new(
      :permission_set,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute provision_permission_set_request_id
    #   <p>The identifier that is provided by the <a>ProvisionPermissionSet</a> call to
    #         retrieve the current status of the provisioning workflow.</p>
    #
    #   @return [String]
    #
    DescribePermissionSetProvisioningStatusInput = ::Struct.new(
      :instance_arn,
      :provision_permission_set_request_id,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute permission_set_provisioning_status
    #   <p>The status object for the permission set provisioning operation.</p>
    #
    #   @return [PermissionSetProvisioningStatus]
    #
    DescribePermissionSetProvisioningStatusOutput = ::Struct.new(
      :permission_set_provisioning_status,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the <a>PermissionSet</a> from which the policy should be
    #         detached.</p>
    #
    #   @return [String]
    #
    # @!attribute managed_policy_arn
    #   <p>The IAM managed policy ARN to be attached to a permission set.</p>
    #
    #   @return [String]
    #
    DetachManagedPolicyFromPermissionSetInput = ::Struct.new(
      :instance_arn,
      :permission_set_arn,
      :managed_policy_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    DetachManagedPolicyFromPermissionSetOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the permission set.</p>
    #
    #   @return [String]
    #
    GetInlinePolicyForPermissionSetInput = ::Struct.new(
      :instance_arn,
      :permission_set_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute inline_policy
    #   <p>The IAM inline policy that is attached to the permission set.</p>
    #
    #   @return [String]
    #
    GetInlinePolicyForPermissionSetOutput = ::Struct.new(
      :inline_policy,
      keyword_init: true
    ) do
      include Hearth::Structure

      def to_s
        "#<struct AWS::SDK::SSOAdmin::Types::GetInlinePolicyForPermissionSetOutput "\
          "inline_policy=\"[SENSITIVE]\">"
      end
    end

    # <p>Specifies the attributes to add to your attribute-based access control (ABAC)
    #       configuration.</p>
    #
    # @!attribute access_control_attributes
    #   <p>Lists the attributes that are configured for ABAC in the specified Amazon Web Services SSO
    #         instance.</p>
    #
    #   @return [Array<AccessControlAttribute>]
    #
    InstanceAccessControlAttributeConfiguration = ::Struct.new(
      :access_control_attributes,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for InstanceAccessControlAttributeConfigurationStatus
    #
    module InstanceAccessControlAttributeConfigurationStatus
      # No documentation available.
      #
      ENABLED = "ENABLED"

      # No documentation available.
      #
      CREATION_IN_PROGRESS = "CREATION_IN_PROGRESS"

      # No documentation available.
      #
      CREATION_FAILED = "CREATION_FAILED"
    end

    # <p>Provides information about the SSO instance.</p>
    #
    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute identity_store_id
    #   <p>The identifier of the identity store that is connected to the SSO instance.</p>
    #
    #   @return [String]
    #
    InstanceMetadata = ::Struct.new(
      :instance_arn,
      :identity_store_id,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The request processing has failed because of an unknown error, exception, or failure with
    #       an internal server.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    InternalServerException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to display for the assignment.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    # @!attribute filter
    #   <p>Filters results based on the passed attribute value.</p>
    #
    #   @return [OperationStatusFilter]
    #
    ListAccountAssignmentCreationStatusInput = ::Struct.new(
      :instance_arn,
      :max_results,
      :next_token,
      :filter,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute account_assignments_creation_status
    #   <p>The status object for the account assignment creation operation.</p>
    #
    #   @return [Array<AccountAssignmentOperationStatusMetadata>]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    ListAccountAssignmentCreationStatusOutput = ::Struct.new(
      :account_assignments_creation_status,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to display for the assignment.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    # @!attribute filter
    #   <p>Filters results based on the passed attribute value.</p>
    #
    #   @return [OperationStatusFilter]
    #
    ListAccountAssignmentDeletionStatusInput = ::Struct.new(
      :instance_arn,
      :max_results,
      :next_token,
      :filter,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute account_assignments_deletion_status
    #   <p>The status object for the account assignment deletion operation.</p>
    #
    #   @return [Array<AccountAssignmentOperationStatusMetadata>]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    ListAccountAssignmentDeletionStatusOutput = ::Struct.new(
      :account_assignments_deletion_status,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute account_id
    #   <p>The identifier of the Amazon Web Services account from which to list the assignments.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the permission set from which to list assignments.</p>
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to display for the assignment.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    ListAccountAssignmentsInput = ::Struct.new(
      :instance_arn,
      :account_id,
      :permission_set_arn,
      :max_results,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute account_assignments
    #   <p>The list of assignments that match the input Amazon Web Services account and permission set.</p>
    #
    #   @return [Array<AccountAssignment>]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    ListAccountAssignmentsOutput = ::Struct.new(
      :account_assignments,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the <a>PermissionSet</a> from which the associated Amazon Web Services accounts
    #         will be listed.</p>
    #
    #   @return [String]
    #
    # @!attribute provisioning_status
    #   <p>The permission set provisioning status for an Amazon Web Services account.</p>
    #
    #   Enum, one of: ["LATEST_PERMISSION_SET_PROVISIONED", "LATEST_PERMISSION_SET_NOT_PROVISIONED"]
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to display for the <a>PermissionSet</a>.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    ListAccountsForProvisionedPermissionSetInput = ::Struct.new(
      :instance_arn,
      :permission_set_arn,
      :provisioning_status,
      :max_results,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute account_ids
    #   <p>The list of Amazon Web Services <code>AccountIds</code>.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    ListAccountsForProvisionedPermissionSetOutput = ::Struct.new(
      :account_ids,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute max_results
    #   <p>The maximum number of results to display for the instance.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    ListInstancesInput = ::Struct.new(
      :max_results,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instances
    #   <p>Lists the SSO instances that the caller has access to.</p>
    #
    #   @return [Array<InstanceMetadata>]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    ListInstancesOutput = ::Struct.new(
      :instances,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the <a>PermissionSet</a> whose managed policies will be
    #         listed.</p>
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to display for the <a>PermissionSet</a>.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    ListManagedPoliciesInPermissionSetInput = ::Struct.new(
      :instance_arn,
      :permission_set_arn,
      :max_results,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute attached_managed_policies
    #   <p>The array of the <a>AttachedManagedPolicy</a> data type object.</p>
    #
    #   @return [Array<AttachedManagedPolicy>]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    ListManagedPoliciesInPermissionSetOutput = ::Struct.new(
      :attached_managed_policies,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to display for the assignment.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    # @!attribute filter
    #   <p>Filters results based on the passed attribute value.</p>
    #
    #   @return [OperationStatusFilter]
    #
    ListPermissionSetProvisioningStatusInput = ::Struct.new(
      :instance_arn,
      :max_results,
      :next_token,
      :filter,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute permission_sets_provisioning_status
    #   <p>The status object for the permission set provisioning operation.</p>
    #
    #   @return [Array<PermissionSetProvisioningStatusMetadata>]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    ListPermissionSetProvisioningStatusOutput = ::Struct.new(
      :permission_sets_provisioning_status,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to display for the assignment.</p>
    #
    #   @return [Integer]
    #
    ListPermissionSetsInput = ::Struct.new(
      :instance_arn,
      :next_token,
      :max_results,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute permission_sets
    #   <p>Defines the level of access on an Amazon Web Services account.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    ListPermissionSetsOutput = ::Struct.new(
      :permission_sets,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute account_id
    #   <p>The identifier of the Amazon Web Services account from which to list the assignments.</p>
    #
    #   @return [String]
    #
    # @!attribute provisioning_status
    #   <p>The status object for the permission set provisioning operation.</p>
    #
    #   Enum, one of: ["LATEST_PERMISSION_SET_PROVISIONED", "LATEST_PERMISSION_SET_NOT_PROVISIONED"]
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to display for the assignment.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    ListPermissionSetsProvisionedToAccountInput = ::Struct.new(
      :instance_arn,
      :account_id,
      :provisioning_status,
      :max_results,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_sets
    #   <p>Defines the level of access that an Amazon Web Services account has.</p>
    #
    #   @return [Array<String>]
    #
    ListPermissionSetsProvisionedToAccountOutput = ::Struct.new(
      :next_token,
      :permission_sets,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute resource_arn
    #   <p>The ARN of the resource with the tags to be listed.</p>
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    ListTagsForResourceInput = ::Struct.new(
      :instance_arn,
      :resource_arn,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute tags
    #   <p>A set of key-value pairs that are used to manage the resource.</p>
    #
    #   @return [Array<Tag>]
    #
    # @!attribute next_token
    #   <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    #
    #   @return [String]
    #
    ListTagsForResourceOutput = ::Struct.new(
      :tags,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Filters he operation status list based on the passed attribute value.</p>
    #
    # @!attribute status
    #   <p>Filters the list operations result based on the status attribute.</p>
    #
    #   Enum, one of: ["IN_PROGRESS", "FAILED", "SUCCEEDED"]
    #
    #   @return [String]
    #
    OperationStatusFilter = ::Struct.new(
      :status,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>An entity that contains IAM policies.</p>
    #
    # @!attribute name
    #   <p>The name of the permission set.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the permission set. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>The description of the <a>PermissionSet</a>.</p>
    #
    #   @return [String]
    #
    # @!attribute created_date
    #   <p>The date that the permission set was created.</p>
    #
    #   @return [Time]
    #
    # @!attribute session_duration
    #   <p>The length of time that the application user sessions are valid for in the ISO-8601
    #         standard.</p>
    #
    #   @return [String]
    #
    # @!attribute relay_state
    #   <p>Used to redirect users within the application during the federation authentication
    #         process.</p>
    #
    #   @return [String]
    #
    PermissionSet = ::Struct.new(
      :name,
      :permission_set_arn,
      :description,
      :created_date,
      :session_duration,
      :relay_state,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>A structure that is used to provide the status of the provisioning operation for a
    #       specified permission set.</p>
    #
    # @!attribute status
    #   <p>The status of the permission set provisioning process.</p>
    #
    #   Enum, one of: ["IN_PROGRESS", "FAILED", "SUCCEEDED"]
    #
    #   @return [String]
    #
    # @!attribute request_id
    #   <p>The identifier for tracking the request operation that is generated by the universally
    #         unique identifier (UUID) workflow.</p>
    #
    #   @return [String]
    #
    # @!attribute account_id
    #   <p>The identifier of the Amazon Web Services account from which to list the assignments.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the permission set that is being provisioned. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute failure_reason
    #   <p>The message that contains an error or exception in case of an operation failure.</p>
    #
    #   @return [String]
    #
    # @!attribute created_date
    #   <p>The date that the permission set was created.</p>
    #
    #   @return [Time]
    #
    PermissionSetProvisioningStatus = ::Struct.new(
      :status,
      :request_id,
      :account_id,
      :permission_set_arn,
      :failure_reason,
      :created_date,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Provides information about the permission set provisioning status.</p>
    #
    # @!attribute status
    #   <p>The status of the permission set provisioning process.</p>
    #
    #   Enum, one of: ["IN_PROGRESS", "FAILED", "SUCCEEDED"]
    #
    #   @return [String]
    #
    # @!attribute request_id
    #   <p>The identifier for tracking the request operation that is generated by the universally
    #         unique identifier (UUID) workflow.</p>
    #
    #   @return [String]
    #
    # @!attribute created_date
    #   <p>The date that the permission set was created.</p>
    #
    #   @return [Time]
    #
    PermissionSetProvisioningStatusMetadata = ::Struct.new(
      :status,
      :request_id,
      :created_date,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for PrincipalType
    #
    module PrincipalType
      # No documentation available.
      #
      USER = "USER"

      # No documentation available.
      #
      GROUP = "GROUP"
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the permission set.</p>
    #
    #   @return [String]
    #
    # @!attribute target_id
    #   <p>TargetID is an Amazon Web Services account identifier, typically a 10-12 digit string (For example, 123456789012).</p>
    #
    #   @return [String]
    #
    # @!attribute target_type
    #   <p>The entity type for which the assignment will be created.</p>
    #
    #   Enum, one of: ["AWS_ACCOUNT", "ALL_PROVISIONED_ACCOUNTS"]
    #
    #   @return [String]
    #
    ProvisionPermissionSetInput = ::Struct.new(
      :instance_arn,
      :permission_set_arn,
      :target_id,
      :target_type,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute permission_set_provisioning_status
    #   <p>The status object for the permission set provisioning operation.</p>
    #
    #   @return [PermissionSetProvisioningStatus]
    #
    ProvisionPermissionSetOutput = ::Struct.new(
      :permission_set_provisioning_status,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for ProvisionTargetType
    #
    module ProvisionTargetType
      # No documentation available.
      #
      AWS_ACCOUNT = "AWS_ACCOUNT"

      # No documentation available.
      #
      ALL_PROVISIONED_ACCOUNTS = "ALL_PROVISIONED_ACCOUNTS"
    end

    # Includes enum constants for ProvisioningStatus
    #
    module ProvisioningStatus
      # No documentation available.
      #
      LATEST_PERMISSION_SET_PROVISIONED = "LATEST_PERMISSION_SET_PROVISIONED"

      # No documentation available.
      #
      LATEST_PERMISSION_SET_NOT_PROVISIONED = "LATEST_PERMISSION_SET_NOT_PROVISIONED"
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the permission set.</p>
    #
    #   @return [String]
    #
    # @!attribute inline_policy
    #   <p>The IAM inline policy to attach to a <a>PermissionSet</a>.</p>
    #
    #   @return [String]
    #
    PutInlinePolicyToPermissionSetInput = ::Struct.new(
      :instance_arn,
      :permission_set_arn,
      :inline_policy,
      keyword_init: true
    ) do
      include Hearth::Structure

      def to_s
        "#<struct AWS::SDK::SSOAdmin::Types::PutInlinePolicyToPermissionSetInput "\
          "instance_arn=#{instance_arn || 'nil'}, "\
          "permission_set_arn=#{permission_set_arn || 'nil'}, "\
          "inline_policy=\"[SENSITIVE]\">"
      end
    end

    PutInlinePolicyToPermissionSetOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Indicates that a requested resource is not found.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    ResourceNotFoundException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Indicates that the principal has crossed the permitted number of resources that can be
    #       created.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    ServiceQuotaExceededException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for StatusValues
    #
    module StatusValues
      # No documentation available.
      #
      IN_PROGRESS = "IN_PROGRESS"

      # No documentation available.
      #
      FAILED = "FAILED"

      # No documentation available.
      #
      SUCCEEDED = "SUCCEEDED"
    end

    # <p>A set of key-value pairs that are used to manage the resource. Tags can only be applied to
    #       permission sets and cannot be applied to corresponding roles that Amazon Web Services SSO creates in Amazon Web Services
    #       accounts.</p>
    #
    # @!attribute key
    #   <p>The key for the tag.</p>
    #
    #   @return [String]
    #
    # @!attribute value
    #   <p>The value of the tag.</p>
    #
    #   @return [String]
    #
    Tag = ::Struct.new(
      :key,
      :value,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute resource_arn
    #   <p>The ARN of the resource with the tags to be listed.</p>
    #
    #   @return [String]
    #
    # @!attribute tags
    #   <p>A set of key-value pairs that are used to manage the resource.</p>
    #
    #   @return [Array<Tag>]
    #
    TagResourceInput = ::Struct.new(
      :instance_arn,
      :resource_arn,
      :tags,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    TagResourceOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for TargetType
    #
    module TargetType
      # No documentation available.
      #
      AWS_ACCOUNT = "AWS_ACCOUNT"
    end

    # <p>Indicates that the principal has crossed the throttling limits of the API
    #       operations.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    ThrottlingException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute resource_arn
    #   <p>The ARN of the resource with the tags to be listed.</p>
    #
    #   @return [String]
    #
    # @!attribute tag_keys
    #   <p>The keys of tags that are attached to the resource.</p>
    #
    #   @return [Array<String>]
    #
    UntagResourceInput = ::Struct.new(
      :instance_arn,
      :resource_arn,
      :tag_keys,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    UntagResourceOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed.</p>
    #
    #   @return [String]
    #
    # @!attribute instance_access_control_attribute_configuration
    #   <p>Updates the attributes for your ABAC configuration.</p>
    #
    #   @return [InstanceAccessControlAttributeConfiguration]
    #
    UpdateInstanceAccessControlAttributeConfigurationInput = ::Struct.new(
      :instance_arn,
      :instance_access_control_attribute_configuration,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    UpdateInstanceAccessControlAttributeConfigurationOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute instance_arn
    #   <p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource
    #   Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #
    #   @return [String]
    #
    # @!attribute permission_set_arn
    #   <p>The ARN of the permission set.</p>
    #
    #   @return [String]
    #
    # @!attribute description
    #   <p>The description of the <a>PermissionSet</a>.</p>
    #
    #   @return [String]
    #
    # @!attribute session_duration
    #   <p>The length of time that the application user sessions are valid for in the ISO-8601
    #         standard.</p>
    #
    #   @return [String]
    #
    # @!attribute relay_state
    #   <p>Used to redirect users within the application during the federation authentication
    #         process.</p>
    #
    #   @return [String]
    #
    UpdatePermissionSetInput = ::Struct.new(
      :instance_arn,
      :permission_set_arn,
      :description,
      :session_duration,
      :relay_state,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    UpdatePermissionSetOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The request failed because it contains a syntax error.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    ValidationException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

  end
end
