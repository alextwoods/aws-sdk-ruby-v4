# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file was code generated using smithy-ruby.
# https://github.com/awslabs/smithy-ruby
#
# WARNING ABOUT GENERATED CODE

module AWS::SDK::AccessAnalyzer
  module Types

    # <p>You do not have sufficient access to perform this action.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    AccessDeniedException = ::Struct.new(
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains information about an access preview.</p>
    #
    # @!attribute id
    #   <p>The unique ID for the access preview.</p>
    #
    #   @return [String]
    #
    # @!attribute analyzer_arn
    #   <p>The ARN of the analyzer used to generate the access preview.</p>
    #
    #   @return [String]
    #
    # @!attribute configurations
    #   <p>A map of resource ARNs for the proposed resource configuration.</p>
    #
    #   @return [Hash<String, Configuration>]
    #
    # @!attribute created_at
    #   <p>The time at which the access preview was created.</p>
    #
    #   @return [Time]
    #
    # @!attribute status
    #   <p>The status of the access preview.</p>
    #            <ul>
    #               <li>
    #                  <p>
    #                     <code>Creating</code> - The access preview creation is in progress.</p>
    #               </li>
    #               <li>
    #                  <p>
    #                     <code>Completed</code> - The access preview is complete. You can preview findings
    #                  for external access to the resource.</p>
    #               </li>
    #               <li>
    #                  <p>
    #                     <code>Failed</code> - The access preview creation has failed.</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["COMPLETED", "CREATING", "FAILED"]
    #
    #   @return [String]
    #
    # @!attribute status_reason
    #   <p>Provides more details about the current status of the access preview.</p>
    #            <p>For example, if the creation of the access preview fails, a <code>Failed</code> status
    #            is returned. This failure can be due to an internal issue with the analysis or due to an
    #            invalid resource configuration.</p>
    #
    #   @return [AccessPreviewStatusReason]
    #
    AccessPreview = ::Struct.new(
      :id,
      :analyzer_arn,
      :configurations,
      :created_at,
      :status,
      :status_reason,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>An access preview finding generated by the access preview.</p>
    #
    # @!attribute id
    #   <p>The ID of the access preview finding. This ID uniquely identifies the element in the
    #            list of access preview findings and is not related to the finding ID in Access
    #            Analyzer.</p>
    #
    #   @return [String]
    #
    # @!attribute existing_finding_id
    #   <p>The existing ID of the finding in IAM Access Analyzer, provided only for existing
    #            findings.</p>
    #
    #   @return [String]
    #
    # @!attribute existing_finding_status
    #   <p>The existing status of the finding, provided only for existing findings.</p>
    #
    #   Enum, one of: ["ACTIVE", "ARCHIVED", "RESOLVED"]
    #
    #   @return [String]
    #
    # @!attribute principal
    #   <p>The external principal that has access to a resource within the zone of trust.</p>
    #
    #   @return [Hash<String, String>]
    #
    # @!attribute action
    #   <p>The action in the analyzed policy statement that an external principal has permission to
    #            perform.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute condition
    #   <p>The condition in the analyzed policy statement that resulted in a finding.</p>
    #
    #   @return [Hash<String, String>]
    #
    # @!attribute resource
    #   <p>The resource that an external principal has access to. This is the resource associated
    #            with the access preview.</p>
    #
    #   @return [String]
    #
    # @!attribute is_public
    #   <p>Indicates whether the policy that generated the finding allows public access to the
    #            resource.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute resource_type
    #   <p>The type of the resource that can be accessed in the finding.</p>
    #
    #   Enum, one of: ["AWS::S3::Bucket", "AWS::IAM::Role", "AWS::SQS::Queue", "AWS::Lambda::Function", "AWS::Lambda::LayerVersion", "AWS::KMS::Key", "AWS::SecretsManager::Secret"]
    #
    #   @return [String]
    #
    # @!attribute created_at
    #   <p>The time at which the access preview finding was created.</p>
    #
    #   @return [Time]
    #
    # @!attribute change_type
    #   <p>Provides context on how the access preview finding compares to existing access
    #            identified in IAM Access Analyzer.</p>
    #            <ul>
    #               <li>
    #                  <p>
    #                     <code>New</code> - The finding is for newly-introduced access.</p>
    #               </li>
    #               <li>
    #                  <p>
    #                     <code>Unchanged</code> - The preview finding is an existing finding that would
    #                  remain unchanged.</p>
    #               </li>
    #               <li>
    #                  <p>
    #                     <code>Changed</code> - The preview finding is an existing finding with a change in
    #                  status.</p>
    #               </li>
    #            </ul>
    #            <p>For example, a <code>Changed</code> finding with preview status <code>Resolved</code>
    #            and existing status <code>Active</code> indicates the existing <code>Active</code> finding
    #            would become <code>Resolved</code> as a result of the proposed permissions change.</p>
    #
    #   Enum, one of: ["CHANGED", "NEW", "UNCHANGED"]
    #
    #   @return [String]
    #
    # @!attribute status
    #   <p>The preview status of the finding. This is what the status of the finding would be after
    #            permissions deployment. For example, a <code>Changed</code> finding with preview status
    #               <code>Resolved</code> and existing status <code>Active</code> indicates the existing
    #               <code>Active</code> finding would become <code>Resolved</code> as a result of the
    #            proposed permissions change.</p>
    #
    #   Enum, one of: ["ACTIVE", "ARCHIVED", "RESOLVED"]
    #
    #   @return [String]
    #
    # @!attribute resource_owner_account
    #   <p>The Amazon Web Services account ID that owns the resource. For most Amazon Web Services resources, the owning
    #            account is the account in which the resource was created.</p>
    #
    #   @return [String]
    #
    # @!attribute error
    #   <p>An error.</p>
    #
    #   @return [String]
    #
    # @!attribute sources
    #   <p>The sources of the finding. This indicates how the access that generated the finding is
    #            granted. It is populated for Amazon S3 bucket findings.</p>
    #
    #   @return [Array<FindingSource>]
    #
    AccessPreviewFinding = ::Struct.new(
      :id,
      :existing_finding_id,
      :existing_finding_status,
      :principal,
      :action,
      :condition,
      :resource,
      :is_public,
      :resource_type,
      :created_at,
      :change_type,
      :status,
      :resource_owner_account,
      :error,
      :sources,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for AccessPreviewStatus
    #
    module AccessPreviewStatus
      # No documentation available.
      #
      COMPLETED = "COMPLETED"

      # No documentation available.
      #
      CREATING = "CREATING"

      # No documentation available.
      #
      FAILED = "FAILED"
    end

    # <p>Provides more details about the current status of the access preview. For example, if
    #          the creation of the access preview fails, a <code>Failed</code> status is returned. This
    #          failure can be due to an internal issue with the analysis or due to an invalid proposed
    #          resource configuration.</p>
    #
    # @!attribute code
    #   <p>The reason code for the current status of the access preview.</p>
    #
    #   Enum, one of: ["INTERNAL_ERROR", "INVALID_CONFIGURATION"]
    #
    #   @return [String]
    #
    AccessPreviewStatusReason = ::Struct.new(
      :code,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for AccessPreviewStatusReasonCode
    #
    module AccessPreviewStatusReasonCode
      # No documentation available.
      #
      INTERNAL_ERROR = "INTERNAL_ERROR"

      # No documentation available.
      #
      INVALID_CONFIGURATION = "INVALID_CONFIGURATION"
    end

    # <p>Contains a summary of information about an access preview.</p>
    #
    # @!attribute id
    #   <p>The unique ID for the access preview.</p>
    #
    #   @return [String]
    #
    # @!attribute analyzer_arn
    #   <p>The ARN of the analyzer used to generate the access preview.</p>
    #
    #   @return [String]
    #
    # @!attribute created_at
    #   <p>The time at which the access preview was created.</p>
    #
    #   @return [Time]
    #
    # @!attribute status
    #   <p>The status of the access preview.</p>
    #            <ul>
    #               <li>
    #                  <p>
    #                     <code>Creating</code> - The access preview creation is in progress.</p>
    #               </li>
    #               <li>
    #                  <p>
    #                     <code>Completed</code> - The access preview is complete and previews the findings
    #                  for external access to the resource.</p>
    #               </li>
    #               <li>
    #                  <p>
    #                     <code>Failed</code> - The access preview creation has failed.</p>
    #               </li>
    #            </ul>
    #
    #   Enum, one of: ["COMPLETED", "CREATING", "FAILED"]
    #
    #   @return [String]
    #
    # @!attribute status_reason
    #   <p>Provides more details about the current status of the access preview. For example, if
    #            the creation of the access preview fails, a <code>Failed</code> status is returned. This
    #            failure can be due to an internal issue with the analysis or due to an invalid proposed
    #            resource configuration.</p>
    #
    #   @return [AccessPreviewStatusReason]
    #
    AccessPreviewSummary = ::Struct.new(
      :id,
      :analyzer_arn,
      :created_at,
      :status,
      :status_reason,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>You specify each grantee as a type-value pair using one of these types. You can specify
    #          only one type of grantee. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAcl.html">PutBucketAcl</a>.</p>
    #
    class AclGrantee < Hearth::Union
      # <p>The value specified is the canonical user ID of an Amazon Web Services account.</p>
      #
      class Id < AclGrantee
        def to_h
          { id: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::Id #{__getobj__ || 'nil'}>"
        end
      end

      # <p>Used for granting permissions to a predefined group.</p>
      #
      class Uri < AclGrantee
        def to_h
          { uri: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::Uri #{__getobj__ || 'nil'}>"
        end
      end

      # Handles unknown future members
      #
      class Unknown < AclGrantee
        def to_h
          { unknown: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::Unknown #{__getobj__ || 'nil'}>"
        end
      end
    end

    # Includes enum constants for AclPermission
    #
    module AclPermission
      # No documentation available.
      #
      READ = "READ"

      # No documentation available.
      #
      WRITE = "WRITE"

      # No documentation available.
      #
      READ_ACP = "READ_ACP"

      # No documentation available.
      #
      WRITE_ACP = "WRITE_ACP"

      # No documentation available.
      #
      FULL_CONTROL = "FULL_CONTROL"
    end

    # <p>Contains details about the analyzed resource.</p>
    #
    # @!attribute resource_arn
    #   <p>The ARN of the resource that was analyzed.</p>
    #
    #   @return [String]
    #
    # @!attribute resource_type
    #   <p>The type of the resource that was analyzed.</p>
    #
    #   Enum, one of: ["AWS::S3::Bucket", "AWS::IAM::Role", "AWS::SQS::Queue", "AWS::Lambda::Function", "AWS::Lambda::LayerVersion", "AWS::KMS::Key", "AWS::SecretsManager::Secret"]
    #
    #   @return [String]
    #
    # @!attribute created_at
    #   <p>The time at which the finding was created.</p>
    #
    #   @return [Time]
    #
    # @!attribute analyzed_at
    #   <p>The time at which the resource was analyzed.</p>
    #
    #   @return [Time]
    #
    # @!attribute updated_at
    #   <p>The time at which the finding was updated.</p>
    #
    #   @return [Time]
    #
    # @!attribute is_public
    #   <p>Indicates whether the policy that generated the finding grants public access to the
    #            resource.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute actions
    #   <p>The actions that an external principal is granted permission to use by the policy that
    #            generated the finding.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute shared_via
    #   <p>Indicates how the access that generated the finding is granted. This is populated for
    #            Amazon S3 bucket findings.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute status
    #   <p>The current status of the finding generated from the analyzed resource.</p>
    #
    #   Enum, one of: ["ACTIVE", "ARCHIVED", "RESOLVED"]
    #
    #   @return [String]
    #
    # @!attribute resource_owner_account
    #   <p>The Amazon Web Services account ID that owns the resource.</p>
    #
    #   @return [String]
    #
    # @!attribute error
    #   <p>An error message.</p>
    #
    #   @return [String]
    #
    AnalyzedResource = ::Struct.new(
      :resource_arn,
      :resource_type,
      :created_at,
      :analyzed_at,
      :updated_at,
      :is_public,
      :actions,
      :shared_via,
      :status,
      :resource_owner_account,
      :error,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains the ARN of the analyzed resource.</p>
    #
    # @!attribute resource_arn
    #   <p>The ARN of the analyzed resource.</p>
    #
    #   @return [String]
    #
    # @!attribute resource_owner_account
    #   <p>The Amazon Web Services account ID that owns the resource.</p>
    #
    #   @return [String]
    #
    # @!attribute resource_type
    #   <p>The type of resource that was analyzed.</p>
    #
    #   Enum, one of: ["AWS::S3::Bucket", "AWS::IAM::Role", "AWS::SQS::Queue", "AWS::Lambda::Function", "AWS::Lambda::LayerVersion", "AWS::KMS::Key", "AWS::SecretsManager::Secret"]
    #
    #   @return [String]
    #
    AnalyzedResourceSummary = ::Struct.new(
      :resource_arn,
      :resource_owner_account,
      :resource_type,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for AnalyzerStatus
    #
    module AnalyzerStatus
      # No documentation available.
      #
      ACTIVE = "ACTIVE"

      # No documentation available.
      #
      CREATING = "CREATING"

      # No documentation available.
      #
      DISABLED = "DISABLED"

      # No documentation available.
      #
      FAILED = "FAILED"
    end

    # <p>Contains information about the analyzer.</p>
    #
    # @!attribute arn
    #   <p>The ARN of the analyzer.</p>
    #
    #   @return [String]
    #
    # @!attribute name
    #   <p>The name of the analyzer.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The type of analyzer, which corresponds to the zone of trust chosen for the
    #            analyzer.</p>
    #
    #   Enum, one of: ["ACCOUNT", "ORGANIZATION"]
    #
    #   @return [String]
    #
    # @!attribute created_at
    #   <p>A timestamp for the time at which the analyzer was created.</p>
    #
    #   @return [Time]
    #
    # @!attribute last_resource_analyzed
    #   <p>The resource that was most recently analyzed by the analyzer.</p>
    #
    #   @return [String]
    #
    # @!attribute last_resource_analyzed_at
    #   <p>The time at which the most recently analyzed resource was analyzed.</p>
    #
    #   @return [Time]
    #
    # @!attribute tags
    #   <p>The tags added to the analyzer.</p>
    #
    #   @return [Hash<String, String>]
    #
    # @!attribute status
    #   <p>The status of the analyzer. An <code>Active</code> analyzer successfully monitors
    #            supported resources and generates new findings. The analyzer is <code>Disabled</code> when
    #            a user action, such as removing trusted access for Identity and Access Management Access Analyzer from Organizations, causes
    #            the analyzer to stop generating new findings. The status is <code>Creating</code> when the
    #            analyzer creation is in progress and <code>Failed</code> when the analyzer creation has
    #            failed. </p>
    #
    #   Enum, one of: ["ACTIVE", "CREATING", "DISABLED", "FAILED"]
    #
    #   @return [String]
    #
    # @!attribute status_reason
    #   <p>The <code>statusReason</code> provides more details about the current status of the
    #            analyzer. For example, if the creation for the analyzer fails, a <code>Failed</code> status
    #            is returned. For an analyzer with organization as the type, this failure can be due to an
    #            issue with creating the service-linked roles required in the member accounts of the Amazon Web Services
    #            organization.</p>
    #
    #   @return [StatusReason]
    #
    AnalyzerSummary = ::Struct.new(
      :arn,
      :name,
      :type,
      :created_at,
      :last_resource_analyzed,
      :last_resource_analyzed_at,
      :tags,
      :status,
      :status_reason,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Retroactively applies an archive rule.</p>
    #
    # @!attribute analyzer_arn
    #   <p>The Amazon resource name (ARN) of the analyzer.</p>
    #
    #   @return [String]
    #
    # @!attribute rule_name
    #   <p>The name of the rule to apply.</p>
    #
    #   @return [String]
    #
    # @!attribute client_token
    #   <p>A client token.</p>
    #
    #   @return [String]
    #
    ApplyArchiveRuleInput = ::Struct.new(
      :analyzer_arn,
      :rule_name,
      :client_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    ApplyArchiveRuleOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains information about an archive rule.</p>
    #
    # @!attribute rule_name
    #   <p>The name of the archive rule.</p>
    #
    #   @return [String]
    #
    # @!attribute filter
    #   <p>A filter used to define the archive rule.</p>
    #
    #   @return [Hash<String, Criterion>]
    #
    # @!attribute created_at
    #   <p>The time at which the archive rule was created.</p>
    #
    #   @return [Time]
    #
    # @!attribute updated_at
    #   <p>The time at which the archive rule was last updated.</p>
    #
    #   @return [Time]
    #
    ArchiveRuleSummary = ::Struct.new(
      :rule_name,
      :filter,
      :created_at,
      :updated_at,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute job_id
    #   <p>The <code>JobId</code> that is returned by the <code>StartPolicyGeneration</code>
    #            operation. The <code>JobId</code> can be used with <code>GetGeneratedPolicy</code> to
    #            retrieve the generated policies or used with <code>CancelPolicyGeneration</code> to cancel
    #            the policy generation request.</p>
    #
    #   @return [String]
    #
    CancelPolicyGenerationInput = ::Struct.new(
      :job_id,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    CancelPolicyGenerationOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains information about CloudTrail access.</p>
    #
    # @!attribute trails
    #   <p>A <code>Trail</code> object that contains settings for a trail.</p>
    #
    #   @return [Array<Trail>]
    #
    # @!attribute access_role
    #   <p>The ARN of the service role that IAM Access Analyzer uses to access your CloudTrail trail and
    #            service last accessed information.</p>
    #
    #   @return [String]
    #
    # @!attribute start_time
    #   <p>The start of the time range for which IAM Access Analyzer reviews your CloudTrail events. Events
    #            with a timestamp before this time are not considered to generate a policy.</p>
    #
    #   @return [Time]
    #
    # @!attribute end_time
    #   <p>The end of the time range for which IAM Access Analyzer reviews your CloudTrail events. Events with
    #            a timestamp after this time are not considered to generate a policy. If this is not
    #            included in the request, the default value is the current time.</p>
    #
    #   @return [Time]
    #
    CloudTrailDetails = ::Struct.new(
      :trails,
      :access_role,
      :start_time,
      :end_time,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains information about CloudTrail access.</p>
    #
    # @!attribute trail_properties
    #   <p>A <code>TrailProperties</code> object that contains settings for trail
    #            properties.</p>
    #
    #   @return [Array<TrailProperties>]
    #
    # @!attribute start_time
    #   <p>The start of the time range for which IAM Access Analyzer reviews your CloudTrail events. Events
    #            with a timestamp before this time are not considered to generate a policy.</p>
    #
    #   @return [Time]
    #
    # @!attribute end_time
    #   <p>The end of the time range for which IAM Access Analyzer reviews your CloudTrail events. Events with
    #            a timestamp after this time are not considered to generate a policy. If this is not
    #            included in the request, the default value is the current time.</p>
    #
    #   @return [Time]
    #
    CloudTrailProperties = ::Struct.new(
      :trail_properties,
      :start_time,
      :end_time,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Access control configuration structures for your resource. You specify the configuration
    #          as a type-value pair. You can specify only one type of access control configuration.</p>
    #
    class Configuration < Hearth::Union
      # <p>The access control configuration is for an IAM role. </p>
      #
      class IamRole < Configuration
        def to_h
          { iam_role: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::IamRole #{__getobj__ || 'nil'}>"
        end
      end

      # <p>The access control configuration is for a KMS key. </p>
      #
      class KmsKey < Configuration
        def to_h
          { kms_key: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::KmsKey #{__getobj__ || 'nil'}>"
        end
      end

      # <p>The access control configuration is for a Secrets Manager secret.</p>
      #
      class SecretsManagerSecret < Configuration
        def to_h
          { secrets_manager_secret: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::SecretsManagerSecret #{__getobj__ || 'nil'}>"
        end
      end

      # <p>The access control configuration is for an Amazon S3 Bucket. </p>
      #
      class S3Bucket < Configuration
        def to_h
          { s3_bucket: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::S3Bucket #{__getobj__ || 'nil'}>"
        end
      end

      # <p>The access control configuration is for an Amazon SQS queue. </p>
      #
      class SqsQueue < Configuration
        def to_h
          { sqs_queue: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::SqsQueue #{__getobj__ || 'nil'}>"
        end
      end

      # Handles unknown future members
      #
      class Unknown < Configuration
        def to_h
          { unknown: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::Unknown #{__getobj__ || 'nil'}>"
        end
      end
    end

    # <p>A conflict exception error.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    # @!attribute resource_id
    #   <p>The ID of the resource.</p>
    #
    #   @return [String]
    #
    # @!attribute resource_type
    #   <p>The resource type.</p>
    #
    #   @return [String]
    #
    ConflictException = ::Struct.new(
      :message,
      :resource_id,
      :resource_type,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute analyzer_arn
    #   <p>The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html permission-resources">ARN of
    #               the account analyzer</a> used to generate the access preview. You can only create an
    #            access preview for analyzers with an <code>Account</code> type and <code>Active</code>
    #            status.</p>
    #
    #   @return [String]
    #
    # @!attribute configurations
    #   <p>Access control configuration for your resource that is used to generate the access
    #            preview. The access preview includes findings for external access allowed to the resource
    #            with the proposed access control configuration. The configuration must contain exactly one
    #            element.</p>
    #
    #   @return [Hash<String, Configuration>]
    #
    # @!attribute client_token
    #   <p>A client token.</p>
    #
    #   @return [String]
    #
    CreateAccessPreviewInput = ::Struct.new(
      :analyzer_arn,
      :configurations,
      :client_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute id
    #   <p>The unique ID for the access preview.</p>
    #
    #   @return [String]
    #
    CreateAccessPreviewOutput = ::Struct.new(
      :id,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Creates an analyzer.</p>
    #
    # @!attribute analyzer_name
    #   <p>The name of the analyzer to create.</p>
    #
    #   @return [String]
    #
    # @!attribute type
    #   <p>The type of analyzer to create. Only ACCOUNT and ORGANIZATION analyzers are supported.
    #            You can create only one analyzer per account per Region. You can create up to 5 analyzers
    #            per organization per Region.</p>
    #
    #   Enum, one of: ["ACCOUNT", "ORGANIZATION"]
    #
    #   @return [String]
    #
    # @!attribute archive_rules
    #   <p>Specifies the archive rules to add for the analyzer. Archive rules automatically archive
    #            findings that meet the criteria you define for the rule.</p>
    #
    #   @return [Array<InlineArchiveRule>]
    #
    # @!attribute tags
    #   <p>The tags to apply to the analyzer.</p>
    #
    #   @return [Hash<String, String>]
    #
    # @!attribute client_token
    #   <p>A client token.</p>
    #
    #   @return [String]
    #
    CreateAnalyzerInput = ::Struct.new(
      :analyzer_name,
      :type,
      :archive_rules,
      :tags,
      :client_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The response to the request to create an analyzer.</p>
    #
    # @!attribute arn
    #   <p>The ARN of the analyzer that was created by the request.</p>
    #
    #   @return [String]
    #
    CreateAnalyzerOutput = ::Struct.new(
      :arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Creates an archive rule.</p>
    #
    # @!attribute analyzer_name
    #   <p>The name of the created analyzer.</p>
    #
    #   @return [String]
    #
    # @!attribute rule_name
    #   <p>The name of the rule to create.</p>
    #
    #   @return [String]
    #
    # @!attribute filter
    #   <p>The criteria for the rule.</p>
    #
    #   @return [Hash<String, Criterion>]
    #
    # @!attribute client_token
    #   <p>A client token.</p>
    #
    #   @return [String]
    #
    CreateArchiveRuleInput = ::Struct.new(
      :analyzer_name,
      :rule_name,
      :filter,
      :client_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    CreateArchiveRuleOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The criteria to use in the filter that defines the archive rule.</p>
    #
    # @!attribute eq
    #   <p>An "equals" operator to match for the filter used to create the rule.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute neq
    #   <p>A "not equals" operator to match for the filter used to create the rule.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute contains
    #   <p>A "contains" operator to match for the filter used to create the rule.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute exists
    #   <p>An "exists" operator to match for the filter used to create the rule. </p>
    #
    #   @return [Boolean]
    #
    Criterion = ::Struct.new(
      :eq,
      :neq,
      :contains,
      :exists,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Deletes an analyzer.</p>
    #
    # @!attribute analyzer_name
    #   <p>The name of the analyzer to delete.</p>
    #
    #   @return [String]
    #
    # @!attribute client_token
    #   <p>A client token.</p>
    #
    #   @return [String]
    #
    DeleteAnalyzerInput = ::Struct.new(
      :analyzer_name,
      :client_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    DeleteAnalyzerOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Deletes an archive rule.</p>
    #
    # @!attribute analyzer_name
    #   <p>The name of the analyzer that associated with the archive rule to delete.</p>
    #
    #   @return [String]
    #
    # @!attribute rule_name
    #   <p>The name of the rule to delete.</p>
    #
    #   @return [String]
    #
    # @!attribute client_token
    #   <p>A client token.</p>
    #
    #   @return [String]
    #
    DeleteArchiveRuleInput = ::Struct.new(
      :analyzer_name,
      :rule_name,
      :client_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    DeleteArchiveRuleOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains information about a finding.</p>
    #
    # @!attribute id
    #   <p>The ID of the finding.</p>
    #
    #   @return [String]
    #
    # @!attribute principal
    #   <p>The external principal that access to a resource within the zone of trust.</p>
    #
    #   @return [Hash<String, String>]
    #
    # @!attribute action
    #   <p>The action in the analyzed policy statement that an external principal has permission to
    #            use.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute resource
    #   <p>The resource that an external principal has access to.</p>
    #
    #   @return [String]
    #
    # @!attribute is_public
    #   <p>Indicates whether the policy that generated the finding allows public access to the
    #            resource.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute resource_type
    #   <p>The type of the resource identified in the finding.</p>
    #
    #   Enum, one of: ["AWS::S3::Bucket", "AWS::IAM::Role", "AWS::SQS::Queue", "AWS::Lambda::Function", "AWS::Lambda::LayerVersion", "AWS::KMS::Key", "AWS::SecretsManager::Secret"]
    #
    #   @return [String]
    #
    # @!attribute condition
    #   <p>The condition in the analyzed policy statement that resulted in a finding.</p>
    #
    #   @return [Hash<String, String>]
    #
    # @!attribute created_at
    #   <p>The time at which the finding was generated.</p>
    #
    #   @return [Time]
    #
    # @!attribute analyzed_at
    #   <p>The time at which the resource was analyzed.</p>
    #
    #   @return [Time]
    #
    # @!attribute updated_at
    #   <p>The time at which the finding was updated.</p>
    #
    #   @return [Time]
    #
    # @!attribute status
    #   <p>The current status of the finding.</p>
    #
    #   Enum, one of: ["ACTIVE", "ARCHIVED", "RESOLVED"]
    #
    #   @return [String]
    #
    # @!attribute resource_owner_account
    #   <p>The Amazon Web Services account ID that owns the resource.</p>
    #
    #   @return [String]
    #
    # @!attribute error
    #   <p>An error.</p>
    #
    #   @return [String]
    #
    # @!attribute sources
    #   <p>The sources of the finding. This indicates how the access that generated the finding is
    #            granted. It is populated for Amazon S3 bucket findings.</p>
    #
    #   @return [Array<FindingSource>]
    #
    Finding = ::Struct.new(
      :id,
      :principal,
      :action,
      :resource,
      :is_public,
      :resource_type,
      :condition,
      :created_at,
      :analyzed_at,
      :updated_at,
      :status,
      :resource_owner_account,
      :error,
      :sources,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for FindingChangeType
    #
    module FindingChangeType
      # No documentation available.
      #
      CHANGED = "CHANGED"

      # No documentation available.
      #
      NEW = "NEW"

      # No documentation available.
      #
      UNCHANGED = "UNCHANGED"
    end

    # <p>The source of the finding. This indicates how the access that generated the finding is
    #          granted. It is populated for Amazon S3 bucket findings.</p>
    #
    # @!attribute type
    #   <p>Indicates the type of access that generated the finding.</p>
    #
    #   Enum, one of: ["POLICY", "BUCKET_ACL", "S3_ACCESS_POINT"]
    #
    #   @return [String]
    #
    # @!attribute detail
    #   <p>Includes details about how the access that generated the finding is granted. This is
    #            populated for Amazon S3 bucket findings.</p>
    #
    #   @return [FindingSourceDetail]
    #
    FindingSource = ::Struct.new(
      :type,
      :detail,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Includes details about how the access that generated the finding is granted. This is
    #          populated for Amazon S3 bucket findings.</p>
    #
    # @!attribute access_point_arn
    #   <p>The ARN of the access point that generated the finding. The ARN format depends on
    #            whether the ARN represents an access point or a multi-region access point.</p>
    #
    #   @return [String]
    #
    FindingSourceDetail = ::Struct.new(
      :access_point_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for FindingSourceType
    #
    module FindingSourceType
      # No documentation available.
      #
      POLICY = "POLICY"

      # No documentation available.
      #
      BUCKET_ACL = "BUCKET_ACL"

      # No documentation available.
      #
      S3_ACCESS_POINT = "S3_ACCESS_POINT"
    end

    # Includes enum constants for FindingStatus
    #
    module FindingStatus
      # No documentation available.
      #
      ACTIVE = "ACTIVE"

      # No documentation available.
      #
      ARCHIVED = "ARCHIVED"

      # No documentation available.
      #
      RESOLVED = "RESOLVED"
    end

    # Includes enum constants for FindingStatusUpdate
    #
    module FindingStatusUpdate
      # No documentation available.
      #
      ACTIVE = "ACTIVE"

      # No documentation available.
      #
      ARCHIVED = "ARCHIVED"
    end

    # <p>Contains information about a finding.</p>
    #
    # @!attribute id
    #   <p>The ID of the finding.</p>
    #
    #   @return [String]
    #
    # @!attribute principal
    #   <p>The external principal that has access to a resource within the zone of trust.</p>
    #
    #   @return [Hash<String, String>]
    #
    # @!attribute action
    #   <p>The action in the analyzed policy statement that an external principal has permission to
    #            use.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute resource
    #   <p>The resource that the external principal has access to.</p>
    #
    #   @return [String]
    #
    # @!attribute is_public
    #   <p>Indicates whether the finding reports a resource that has a policy that allows public
    #            access.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute resource_type
    #   <p>The type of the resource that the external principal has access to.</p>
    #
    #   Enum, one of: ["AWS::S3::Bucket", "AWS::IAM::Role", "AWS::SQS::Queue", "AWS::Lambda::Function", "AWS::Lambda::LayerVersion", "AWS::KMS::Key", "AWS::SecretsManager::Secret"]
    #
    #   @return [String]
    #
    # @!attribute condition
    #   <p>The condition in the analyzed policy statement that resulted in a finding.</p>
    #
    #   @return [Hash<String, String>]
    #
    # @!attribute created_at
    #   <p>The time at which the finding was created.</p>
    #
    #   @return [Time]
    #
    # @!attribute analyzed_at
    #   <p>The time at which the resource-based policy that generated the finding was
    #            analyzed.</p>
    #
    #   @return [Time]
    #
    # @!attribute updated_at
    #   <p>The time at which the finding was most recently updated.</p>
    #
    #   @return [Time]
    #
    # @!attribute status
    #   <p>The status of the finding.</p>
    #
    #   Enum, one of: ["ACTIVE", "ARCHIVED", "RESOLVED"]
    #
    #   @return [String]
    #
    # @!attribute resource_owner_account
    #   <p>The Amazon Web Services account ID that owns the resource.</p>
    #
    #   @return [String]
    #
    # @!attribute error
    #   <p>The error that resulted in an Error finding.</p>
    #
    #   @return [String]
    #
    # @!attribute sources
    #   <p>The sources of the finding. This indicates how the access that generated the finding is
    #            granted. It is populated for Amazon S3 bucket findings.</p>
    #
    #   @return [Array<FindingSource>]
    #
    FindingSummary = ::Struct.new(
      :id,
      :principal,
      :action,
      :resource,
      :is_public,
      :resource_type,
      :condition,
      :created_at,
      :analyzed_at,
      :updated_at,
      :status,
      :resource_owner_account,
      :error,
      :sources,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains the text for the generated policy.</p>
    #
    # @!attribute policy
    #   <p>The text to use as the content for the new policy. The policy is created using the
    #               <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html">CreatePolicy</a> action.</p>
    #
    #   @return [String]
    #
    GeneratedPolicy = ::Struct.new(
      :policy,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains the generated policy details.</p>
    #
    # @!attribute is_complete
    #   <p>This value is set to <code>true</code> if the generated policy contains all possible
    #            actions for a service that IAM Access Analyzer identified from the CloudTrail trail that you specified,
    #            and <code>false</code> otherwise.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute principal_arn
    #   <p>The ARN of the IAM entity (user or role) for which you are generating a policy.</p>
    #
    #   @return [String]
    #
    # @!attribute cloud_trail_properties
    #   <p>Lists details about the <code>Trail</code> used to generated policy.</p>
    #
    #   @return [CloudTrailProperties]
    #
    GeneratedPolicyProperties = ::Struct.new(
      :is_complete,
      :principal_arn,
      :cloud_trail_properties,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains the text for the generated policy and its details.</p>
    #
    # @!attribute properties
    #   <p>A <code>GeneratedPolicyProperties</code> object that contains properties of the
    #            generated policy.</p>
    #
    #   @return [GeneratedPolicyProperties]
    #
    # @!attribute generated_policies
    #   <p>The text to use as the content for the new policy. The policy is created using the
    #               <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html">CreatePolicy</a> action.</p>
    #
    #   @return [Array<GeneratedPolicy>]
    #
    GeneratedPolicyResult = ::Struct.new(
      :properties,
      :generated_policies,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute access_preview_id
    #   <p>The unique ID for the access preview.</p>
    #
    #   @return [String]
    #
    # @!attribute analyzer_arn
    #   <p>The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html permission-resources">ARN of
    #               the analyzer</a> used to generate the access preview.</p>
    #
    #   @return [String]
    #
    GetAccessPreviewInput = ::Struct.new(
      :access_preview_id,
      :analyzer_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute access_preview
    #   <p>An object that contains information about the access preview.</p>
    #
    #   @return [AccessPreview]
    #
    GetAccessPreviewOutput = ::Struct.new(
      :access_preview,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Retrieves an analyzed resource.</p>
    #
    # @!attribute analyzer_arn
    #   <p>The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html permission-resources">ARN of
    #               the analyzer</a> to retrieve information from.</p>
    #
    #   @return [String]
    #
    # @!attribute resource_arn
    #   <p>The ARN of the resource to retrieve information about.</p>
    #
    #   @return [String]
    #
    GetAnalyzedResourceInput = ::Struct.new(
      :analyzer_arn,
      :resource_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The response to the request.</p>
    #
    # @!attribute resource
    #   <p>An <code>AnalyzedResource</code> object that contains information that IAM Access Analyzer
    #            found when it analyzed the resource.</p>
    #
    #   @return [AnalyzedResource]
    #
    GetAnalyzedResourceOutput = ::Struct.new(
      :resource,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Retrieves an analyzer.</p>
    #
    # @!attribute analyzer_name
    #   <p>The name of the analyzer retrieved.</p>
    #
    #   @return [String]
    #
    GetAnalyzerInput = ::Struct.new(
      :analyzer_name,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The response to the request.</p>
    #
    # @!attribute analyzer
    #   <p>An <code>AnalyzerSummary</code> object that contains information about the
    #            analyzer.</p>
    #
    #   @return [AnalyzerSummary]
    #
    GetAnalyzerOutput = ::Struct.new(
      :analyzer,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Retrieves an archive rule.</p>
    #
    # @!attribute analyzer_name
    #   <p>The name of the analyzer to retrieve rules from.</p>
    #
    #   @return [String]
    #
    # @!attribute rule_name
    #   <p>The name of the rule to retrieve.</p>
    #
    #   @return [String]
    #
    GetArchiveRuleInput = ::Struct.new(
      :analyzer_name,
      :rule_name,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The response to the request.</p>
    #
    # @!attribute archive_rule
    #   <p>Contains information about an archive rule.</p>
    #
    #   @return [ArchiveRuleSummary]
    #
    GetArchiveRuleOutput = ::Struct.new(
      :archive_rule,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Retrieves a finding.</p>
    #
    # @!attribute analyzer_arn
    #   <p>The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html permission-resources">ARN of
    #               the analyzer</a> that generated the finding.</p>
    #
    #   @return [String]
    #
    # @!attribute id
    #   <p>The ID of the finding to retrieve.</p>
    #
    #   @return [String]
    #
    GetFindingInput = ::Struct.new(
      :analyzer_arn,
      :id,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The response to the request.</p>
    #
    # @!attribute finding
    #   <p>A <code>finding</code> object that contains finding details.</p>
    #
    #   @return [Finding]
    #
    GetFindingOutput = ::Struct.new(
      :finding,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute job_id
    #   <p>The <code>JobId</code> that is returned by the <code>StartPolicyGeneration</code>
    #            operation. The <code>JobId</code> can be used with <code>GetGeneratedPolicy</code> to
    #            retrieve the generated policies or used with <code>CancelPolicyGeneration</code> to cancel
    #            the policy generation request.</p>
    #
    #   @return [String]
    #
    # @!attribute include_resource_placeholders
    #   <p>The level of detail that you want to generate. You can specify whether to generate
    #            policies with placeholders for resource ARNs for actions that support resource level
    #            granularity in policies.</p>
    #            <p>For example, in the resource section of a policy, you can receive a placeholder such as
    #               <code>"Resource":"arn:aws:s3:::${BucketName}"</code> instead of <code>"*"</code>.</p>
    #
    #   @return [Boolean]
    #
    # @!attribute include_service_level_template
    #   <p>The level of detail that you want to generate. You can specify whether to generate
    #            service-level policies. </p>
    #            <p>IAM Access Analyzer uses <code>iam:servicelastaccessed</code> to identify services that have
    #            been used recently to create this service-level template.</p>
    #
    #   @return [Boolean]
    #
    GetGeneratedPolicyInput = ::Struct.new(
      :job_id,
      :include_resource_placeholders,
      :include_service_level_template,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute job_details
    #   <p>A <code>GeneratedPolicyDetails</code> object that contains details about the generated
    #            policy.</p>
    #
    #   @return [JobDetails]
    #
    # @!attribute generated_policy_result
    #   <p>A <code>GeneratedPolicyResult</code> object that contains the generated policies and
    #            associated details.</p>
    #
    #   @return [GeneratedPolicyResult]
    #
    GetGeneratedPolicyOutput = ::Struct.new(
      :job_details,
      :generated_policy_result,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The proposed access control configuration for an IAM role. You can propose a
    #          configuration for a new IAM role or an existing IAM role that you own by specifying the
    #          trust policy. If the configuration is for a new IAM role, you must specify the trust
    #          policy. If the configuration is for an existing IAM role that you own and you do not
    #          propose the trust policy, the access preview uses the existing trust policy for the role.
    #          The proposed trust policy cannot be an empty string. For more information about role trust
    #          policy limits, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM and STS
    #          quotas</a>.</p>
    #
    # @!attribute trust_policy
    #   <p>The proposed trust policy for the IAM role.</p>
    #
    #   @return [String]
    #
    IamRoleConfiguration = ::Struct.new(
      :trust_policy,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>An criterion statement in an archive rule. Each archive rule may have multiple
    #          criteria.</p>
    #
    # @!attribute rule_name
    #   <p>The name of the rule.</p>
    #
    #   @return [String]
    #
    # @!attribute filter
    #   <p>The condition and values for a criterion.</p>
    #
    #   @return [Hash<String, Criterion>]
    #
    InlineArchiveRule = ::Struct.new(
      :rule_name,
      :filter,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Internal server error.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    # @!attribute retry_after_seconds
    #   <p>The seconds to wait to retry.</p>
    #
    #   @return [Integer]
    #
    InternalServerException = ::Struct.new(
      :message,
      :retry_after_seconds,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>This configuration sets the network origin for the Amazon S3 access point or multi-region
    #          access point to <code>Internet</code>.</p>
    #
    InternetConfiguration = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains details about the policy generation request.</p>
    #
    # @!attribute job_id
    #   <p>The <code>JobId</code> that is returned by the <code>StartPolicyGeneration</code>
    #            operation. The <code>JobId</code> can be used with <code>GetGeneratedPolicy</code> to
    #            retrieve the generated policies or used with <code>CancelPolicyGeneration</code> to cancel
    #            the policy generation request.</p>
    #
    #   @return [String]
    #
    # @!attribute status
    #   <p>The status of the job request.</p>
    #
    #   Enum, one of: ["IN_PROGRESS", "SUCCEEDED", "FAILED", "CANCELED"]
    #
    #   @return [String]
    #
    # @!attribute started_on
    #   <p>A timestamp of when the job was started.</p>
    #
    #   @return [Time]
    #
    # @!attribute completed_on
    #   <p>A timestamp of when the job was completed.</p>
    #
    #   @return [Time]
    #
    # @!attribute job_error
    #   <p>The job error for the policy generation request.</p>
    #
    #   @return [JobError]
    #
    JobDetails = ::Struct.new(
      :job_id,
      :status,
      :started_on,
      :completed_on,
      :job_error,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains the details about the policy generation error.</p>
    #
    # @!attribute code
    #   <p>The job error code.</p>
    #
    #   Enum, one of: ["AUTHORIZATION_ERROR", "RESOURCE_NOT_FOUND_ERROR", "SERVICE_QUOTA_EXCEEDED_ERROR", "SERVICE_ERROR"]
    #
    #   @return [String]
    #
    # @!attribute message
    #   <p>Specific information about the error. For example, which service quota was exceeded or
    #            which resource was not found.</p>
    #
    #   @return [String]
    #
    JobError = ::Struct.new(
      :code,
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for JobErrorCode
    #
    module JobErrorCode
      # No documentation available.
      #
      AUTHORIZATION_ERROR = "AUTHORIZATION_ERROR"

      # No documentation available.
      #
      RESOURCE_NOT_FOUND_ERROR = "RESOURCE_NOT_FOUND_ERROR"

      # No documentation available.
      #
      SERVICE_QUOTA_EXCEEDED_ERROR = "SERVICE_QUOTA_EXCEEDED_ERROR"

      # No documentation available.
      #
      SERVICE_ERROR = "SERVICE_ERROR"
    end

    # Includes enum constants for JobStatus
    #
    module JobStatus
      # No documentation available.
      #
      IN_PROGRESS = "IN_PROGRESS"

      # No documentation available.
      #
      SUCCEEDED = "SUCCEEDED"

      # No documentation available.
      #
      FAILED = "FAILED"

      # No documentation available.
      #
      CANCELED = "CANCELED"
    end

    # <p>A proposed grant configuration for a KMS key. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateGrant.html">CreateGrant</a>.</p>
    #
    # @!attribute operations
    #   <p>A list of operations that the grant permits.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute grantee_principal
    #   <p>The principal that is given permission to perform the operations that the grant
    #            permits.</p>
    #
    #   @return [String]
    #
    # @!attribute retiring_principal
    #   <p>The principal that is given permission to retire the grant by using <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_RetireGrant.html">RetireGrant</a> operation.</p>
    #
    #   @return [String]
    #
    # @!attribute constraints
    #   <p>Use this structure to propose allowing <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html cryptographic-operations">cryptographic
    #               operations</a> in the grant only when the operation request includes the specified
    #               <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html encrypt_context">encryption
    #            context</a>.</p>
    #
    #   @return [KmsGrantConstraints]
    #
    # @!attribute issuing_account
    #   <p> The Amazon Web Services account under which the grant was issued. The account is used to propose
    #            KMS grants issued by accounts other than the owner of the key.</p>
    #
    #   @return [String]
    #
    KmsGrantConfiguration = ::Struct.new(
      :operations,
      :grantee_principal,
      :retiring_principal,
      :constraints,
      :issuing_account,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Use this structure to propose allowing <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
    #             operations</a> in the grant only when the operation request includes the specified
    #             <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">encryption
    #          context</a>. You can specify only one type of encryption context. An empty map is
    #          treated as not specified. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_GrantConstraints.html">GrantConstraints</a>.</p>
    #
    # @!attribute encryption_context_equals
    #   <p>A list of key-value pairs that must match the encryption context in the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html cryptographic-operations">cryptographic
    #               operation</a> request. The grant allows the operation only when the encryption
    #            context in the request is the same as the encryption context specified in this
    #            constraint.</p>
    #
    #   @return [Hash<String, String>]
    #
    # @!attribute encryption_context_subset
    #   <p>A list of key-value pairs that must be included in the encryption context of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html cryptographic-operations">cryptographic
    #               operation</a> request. The grant allows the cryptographic operation only when the
    #            encryption context in the request includes the key-value pairs specified in this
    #            constraint, although it can include additional key-value pairs.</p>
    #
    #   @return [Hash<String, String>]
    #
    KmsGrantConstraints = ::Struct.new(
      :encryption_context_equals,
      :encryption_context_subset,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for KmsGrantOperation
    #
    module KmsGrantOperation
      # No documentation available.
      #
      CREATE_GRANT = "CreateGrant"

      # No documentation available.
      #
      DECRYPT = "Decrypt"

      # No documentation available.
      #
      DESCRIBE_KEY = "DescribeKey"

      # No documentation available.
      #
      ENCRYPT = "Encrypt"

      # No documentation available.
      #
      GENERATE_DATA_KEY = "GenerateDataKey"

      # No documentation available.
      #
      GENERATE_DATA_KEY_PAIR = "GenerateDataKeyPair"

      # No documentation available.
      #
      GENERATE_DATA_KEY_PAIR_WITHOUT_PLAINTEXT = "GenerateDataKeyPairWithoutPlaintext"

      # No documentation available.
      #
      GENERATE_DATA_KEY_WITHOUT_PLAINTEXT = "GenerateDataKeyWithoutPlaintext"

      # No documentation available.
      #
      GET_PUBLIC_KEY = "GetPublicKey"

      # No documentation available.
      #
      REENCRYPT_FROM = "ReEncryptFrom"

      # No documentation available.
      #
      REENCRYPT_TO = "ReEncryptTo"

      # No documentation available.
      #
      RETIRE_GRANT = "RetireGrant"

      # No documentation available.
      #
      SIGN = "Sign"

      # No documentation available.
      #
      VERIFY = "Verify"
    end

    # <p>Proposed access control configuration for a KMS key. You can propose a configuration
    #          for a new KMS key or an existing KMS key that you own by specifying the key policy and
    #          KMS grant configuration. If the configuration is for an existing key and you do not
    #          specify the key policy, the access preview uses the existing policy for the key. If the
    #          access preview is for a new resource and you do not specify the key policy, then the access
    #          preview uses the default key policy. The proposed key policy cannot be an empty string. For
    #          more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default">Default key
    #             policy</a>. For more information about key policy limits, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/resource-limits.html">Resource
    #             quotas</a>.</p>
    #          <p/>
    #
    # @!attribute key_policies
    #   <p>Resource policy configuration for the KMS key. The only valid value for the name of
    #            the key policy is <code>default</code>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html key-policy-default">Default key
    #               policy</a>.</p>
    #
    #   @return [Hash<String, String>]
    #
    # @!attribute grants
    #   <p>A list of proposed grant configurations for the KMS key. If the proposed grant
    #            configuration is for an existing key, the access preview uses the proposed list of grant
    #            configurations in place of the existing grants. Otherwise, the access preview uses the
    #            existing grants for the key.</p>
    #
    #   @return [Array<KmsGrantConfiguration>]
    #
    KmsKeyConfiguration = ::Struct.new(
      :key_policies,
      :grants,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute access_preview_id
    #   <p>The unique ID for the access preview.</p>
    #
    #   @return [String]
    #
    # @!attribute analyzer_arn
    #   <p>The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html permission-resources">ARN of
    #               the analyzer</a> used to generate the access.</p>
    #
    #   @return [String]
    #
    # @!attribute filter
    #   <p>Criteria to filter the returned findings.</p>
    #
    #   @return [Hash<String, Criterion>]
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to return in the response.</p>
    #
    #   @return [Integer]
    #
    ListAccessPreviewFindingsInput = ::Struct.new(
      :access_preview_id,
      :analyzer_arn,
      :filter,
      :next_token,
      :max_results,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute findings
    #   <p>A list of access preview findings that match the specified filter criteria.</p>
    #
    #   @return [Array<AccessPreviewFinding>]
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    ListAccessPreviewFindingsOutput = ::Struct.new(
      :findings,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute analyzer_arn
    #   <p>The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html permission-resources">ARN of
    #               the analyzer</a> used to generate the access preview.</p>
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to return in the response.</p>
    #
    #   @return [Integer]
    #
    ListAccessPreviewsInput = ::Struct.new(
      :analyzer_arn,
      :next_token,
      :max_results,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute access_previews
    #   <p>A list of access previews retrieved for the analyzer.</p>
    #
    #   @return [Array<AccessPreviewSummary>]
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    ListAccessPreviewsOutput = ::Struct.new(
      :access_previews,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Retrieves a list of resources that have been analyzed.</p>
    #
    # @!attribute analyzer_arn
    #   <p>The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html permission-resources">ARN of
    #               the analyzer</a> to retrieve a list of analyzed resources from.</p>
    #
    #   @return [String]
    #
    # @!attribute resource_type
    #   <p>The type of resource.</p>
    #
    #   Enum, one of: ["AWS::S3::Bucket", "AWS::IAM::Role", "AWS::SQS::Queue", "AWS::Lambda::Function", "AWS::Lambda::LayerVersion", "AWS::KMS::Key", "AWS::SecretsManager::Secret"]
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to return in the response.</p>
    #
    #   @return [Integer]
    #
    ListAnalyzedResourcesInput = ::Struct.new(
      :analyzer_arn,
      :resource_type,
      :next_token,
      :max_results,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The response to the request.</p>
    #
    # @!attribute analyzed_resources
    #   <p>A list of resources that were analyzed.</p>
    #
    #   @return [Array<AnalyzedResourceSummary>]
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    ListAnalyzedResourcesOutput = ::Struct.new(
      :analyzed_resources,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Retrieves a list of analyzers.</p>
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to return in the response.</p>
    #
    #   @return [Integer]
    #
    # @!attribute type
    #   <p>The type of analyzer.</p>
    #
    #   Enum, one of: ["ACCOUNT", "ORGANIZATION"]
    #
    #   @return [String]
    #
    ListAnalyzersInput = ::Struct.new(
      :next_token,
      :max_results,
      :type,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The response to the request.</p>
    #
    # @!attribute analyzers
    #   <p>The analyzers retrieved.</p>
    #
    #   @return [Array<AnalyzerSummary>]
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    ListAnalyzersOutput = ::Struct.new(
      :analyzers,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Retrieves a list of archive rules created for the specified analyzer.</p>
    #
    # @!attribute analyzer_name
    #   <p>The name of the analyzer to retrieve rules from.</p>
    #
    #   @return [String]
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to return in the request.</p>
    #
    #   @return [Integer]
    #
    ListArchiveRulesInput = ::Struct.new(
      :analyzer_name,
      :next_token,
      :max_results,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The response to the request.</p>
    #
    # @!attribute archive_rules
    #   <p>A list of archive rules created for the specified analyzer.</p>
    #
    #   @return [Array<ArchiveRuleSummary>]
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    ListArchiveRulesOutput = ::Struct.new(
      :archive_rules,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Retrieves a list of findings generated by the specified analyzer.</p>
    #
    # @!attribute analyzer_arn
    #   <p>The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html permission-resources">ARN of
    #               the analyzer</a> to retrieve findings from.</p>
    #
    #   @return [String]
    #
    # @!attribute filter
    #   <p>A filter to match for the findings to return.</p>
    #
    #   @return [Hash<String, Criterion>]
    #
    # @!attribute sort
    #   <p>The sort order for the findings returned.</p>
    #
    #   @return [SortCriteria]
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to return in the response.</p>
    #
    #   @return [Integer]
    #
    ListFindingsInput = ::Struct.new(
      :analyzer_arn,
      :filter,
      :sort,
      :next_token,
      :max_results,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The response to the request.</p>
    #
    # @!attribute findings
    #   <p>A list of findings retrieved from the analyzer that match the filter criteria specified,
    #            if any.</p>
    #
    #   @return [Array<FindingSummary>]
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    ListFindingsOutput = ::Struct.new(
      :findings,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute principal_arn
    #   <p>The ARN of the IAM entity (user or role) for which you are generating a policy. Use
    #            this with <code>ListGeneratedPolicies</code> to filter the results to only include results
    #            for a specific principal.</p>
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to return in the response.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    ListPolicyGenerationsInput = ::Struct.new(
      :principal_arn,
      :max_results,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute policy_generations
    #   <p>A <code>PolicyGeneration</code> object that contains details about the generated
    #            policy.</p>
    #
    #   @return [Array<PolicyGeneration>]
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    ListPolicyGenerationsOutput = ::Struct.new(
      :policy_generations,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Retrieves a list of tags applied to the specified resource.</p>
    #
    # @!attribute resource_arn
    #   <p>The ARN of the resource to retrieve tags from.</p>
    #
    #   @return [String]
    #
    ListTagsForResourceInput = ::Struct.new(
      :resource_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The response to the request.</p>
    #
    # @!attribute tags
    #   <p>The tags that are applied to the specified resource.</p>
    #
    #   @return [Hash<String, String>]
    #
    ListTagsForResourceOutput = ::Struct.new(
      :tags,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for Locale
    #
    module Locale
      # No documentation available.
      #
      DE = "DE"

      # No documentation available.
      #
      EN = "EN"

      # No documentation available.
      #
      ES = "ES"

      # No documentation available.
      #
      FR = "FR"

      # No documentation available.
      #
      IT = "IT"

      # No documentation available.
      #
      JA = "JA"

      # No documentation available.
      #
      KO = "KO"

      # No documentation available.
      #
      PT_BR = "PT_BR"

      # No documentation available.
      #
      ZH_CN = "ZH_CN"

      # No documentation available.
      #
      ZH_TW = "ZH_TW"
    end

    # <p>A location in a policy that is represented as a path through the JSON representation and
    #          a corresponding span.</p>
    #
    # @!attribute path
    #   <p>A path in a policy, represented as a sequence of path elements.</p>
    #
    #   @return [Array<PathElement>]
    #
    # @!attribute span
    #   <p>A span in a policy.</p>
    #
    #   @return [Span]
    #
    Location = ::Struct.new(
      :path,
      :span,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The proposed <code>InternetConfiguration</code> or <code>VpcConfiguration</code> to
    #          apply to the Amazon S3 access point. <code>VpcConfiguration</code> does not apply to
    #          multi-region access points. You can make the access point accessible from the internet, or
    #          you can specify that all requests made through that access point must originate from a
    #          specific virtual private cloud (VPC). You can specify only one type of network
    #          configuration. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/creating-access-points.html">Creating access
    #          points</a>.</p>
    #
    class NetworkOriginConfiguration < Hearth::Union
      # <p>The proposed virtual private cloud (VPC) configuration for the Amazon S3 access point. VPC
      #          configuration does not apply to multi-region access points. For more information, see
      #             <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_VpcConfiguration.html">VpcConfiguration</a>. </p>
      #
      class VpcConfiguration < NetworkOriginConfiguration
        def to_h
          { vpc_configuration: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::VpcConfiguration #{__getobj__ || 'nil'}>"
        end
      end

      # <p>The configuration for the Amazon S3 access point or multi-region access point with an
      #             <code>Internet</code> origin.</p>
      #
      class InternetConfiguration < NetworkOriginConfiguration
        def to_h
          { internet_configuration: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::InternetConfiguration #{__getobj__ || 'nil'}>"
        end
      end

      # Handles unknown future members
      #
      class Unknown < NetworkOriginConfiguration
        def to_h
          { unknown: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::Unknown #{__getobj__ || 'nil'}>"
        end
      end
    end

    # Includes enum constants for OrderBy
    #
    module OrderBy
      # No documentation available.
      #
      ASC = "ASC"

      # No documentation available.
      #
      DESC = "DESC"
    end

    # <p>A single element in a path through the JSON representation of a policy.</p>
    #
    class PathElement < Hearth::Union
      # <p>Refers to an index in a JSON array.</p>
      #
      class Index < PathElement
        def to_h
          { index: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::Index #{__getobj__ || 'nil'}>"
        end
      end

      # <p>Refers to a key in a JSON object.</p>
      #
      class Key < PathElement
        def to_h
          { key: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::Key #{__getobj__ || 'nil'}>"
        end
      end

      # <p>Refers to a substring of a literal string in a JSON object.</p>
      #
      class Substring < PathElement
        def to_h
          { substring: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::Substring #{__getobj__ || 'nil'}>"
        end
      end

      # <p>Refers to the value associated with a given key in a JSON object.</p>
      #
      class Value < PathElement
        def to_h
          { value: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::Value #{__getobj__ || 'nil'}>"
        end
      end

      # Handles unknown future members
      #
      class Unknown < PathElement
        def to_h
          { unknown: super(__getobj__) }
        end

        def to_s
          "#<AWS::SDK::AccessAnalyzer::Types::Unknown #{__getobj__ || 'nil'}>"
        end
      end
    end

    # <p>Contains details about the policy generation status and properties.</p>
    #
    # @!attribute job_id
    #   <p>The <code>JobId</code> that is returned by the <code>StartPolicyGeneration</code>
    #            operation. The <code>JobId</code> can be used with <code>GetGeneratedPolicy</code> to
    #            retrieve the generated policies or used with <code>CancelPolicyGeneration</code> to cancel
    #            the policy generation request.</p>
    #
    #   @return [String]
    #
    # @!attribute principal_arn
    #   <p>The ARN of the IAM entity (user or role) for which you are generating a policy.</p>
    #
    #   @return [String]
    #
    # @!attribute status
    #   <p>The status of the policy generation request.</p>
    #
    #   Enum, one of: ["IN_PROGRESS", "SUCCEEDED", "FAILED", "CANCELED"]
    #
    #   @return [String]
    #
    # @!attribute started_on
    #   <p>A timestamp of when the policy generation started.</p>
    #
    #   @return [Time]
    #
    # @!attribute completed_on
    #   <p>A timestamp of when the policy generation was completed.</p>
    #
    #   @return [Time]
    #
    PolicyGeneration = ::Struct.new(
      :job_id,
      :principal_arn,
      :status,
      :started_on,
      :completed_on,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains the ARN details about the IAM entity for which the policy is
    #          generated.</p>
    #
    # @!attribute principal_arn
    #   <p>The ARN of the IAM entity (user or role) for which you are generating a policy.</p>
    #
    #   @return [String]
    #
    PolicyGenerationDetails = ::Struct.new(
      :principal_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for PolicyType
    #
    module PolicyType
      # No documentation available.
      #
      IDENTITY_POLICY = "IDENTITY_POLICY"

      # No documentation available.
      #
      RESOURCE_POLICY = "RESOURCE_POLICY"

      # No documentation available.
      #
      SERVICE_CONTROL_POLICY = "SERVICE_CONTROL_POLICY"
    end

    # <p>A position in a policy.</p>
    #
    # @!attribute line
    #   <p>The line of the position, starting from 1.</p>
    #
    #   @return [Integer]
    #
    # @!attribute column
    #   <p>The column of the position, starting from 0.</p>
    #
    #   @return [Integer]
    #
    # @!attribute offset
    #   <p>The offset within the policy that corresponds to the position, starting from 0.</p>
    #
    #   @return [Integer]
    #
    Position = ::Struct.new(
      :line,
      :column,
      :offset,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for ReasonCode
    #
    module ReasonCode
      # No documentation available.
      #
      AWS_SERVICE_ACCESS_DISABLED = "AWS_SERVICE_ACCESS_DISABLED"

      # No documentation available.
      #
      DELEGATED_ADMINISTRATOR_DEREGISTERED = "DELEGATED_ADMINISTRATOR_DEREGISTERED"

      # No documentation available.
      #
      ORGANIZATION_DELETED = "ORGANIZATION_DELETED"

      # No documentation available.
      #
      SERVICE_LINKED_ROLE_CREATION_FAILED = "SERVICE_LINKED_ROLE_CREATION_FAILED"
    end

    # <p>The specified resource could not be found.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    # @!attribute resource_id
    #   <p>The ID of the resource.</p>
    #
    #   @return [String]
    #
    # @!attribute resource_type
    #   <p>The type of the resource.</p>
    #
    #   @return [String]
    #
    ResourceNotFoundException = ::Struct.new(
      :message,
      :resource_id,
      :resource_type,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for ResourceType
    #
    module ResourceType
      # No documentation available.
      #
      AWS_S3_BUCKET = "AWS::S3::Bucket"

      # No documentation available.
      #
      AWS_IAM_ROLE = "AWS::IAM::Role"

      # No documentation available.
      #
      AWS_SQS_QUEUE = "AWS::SQS::Queue"

      # No documentation available.
      #
      AWS_LAMBDA_FUNCTION = "AWS::Lambda::Function"

      # No documentation available.
      #
      AWS_LAMBDA_LAYERVERSION = "AWS::Lambda::LayerVersion"

      # No documentation available.
      #
      AWS_KMS_KEY = "AWS::KMS::Key"

      # No documentation available.
      #
      AWS_SECRETSMANAGER_SECRET = "AWS::SecretsManager::Secret"
    end

    # <p>The configuration for an Amazon S3 access point or multi-region access point for the bucket.
    #          You can propose up to 10 access points or multi-region access points per bucket. If the
    #          proposed Amazon S3 access point configuration is for an existing bucket, the access preview uses
    #          the proposed access point configuration in place of the existing access points. To propose
    #          an access point without a policy, you can provide an empty string as the access point
    #          policy. For more information, see <a href="https://docs.aws.amazon.com/https:/docs.aws.amazon.com/AmazonS3/latest/dev/creating-access-points.html">Creating access points</a>. For more information about access point policy limits,
    #          see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-points-restrictions-limitations.html">Access points
    #             restrictions and limitations</a>.</p>
    #
    # @!attribute access_point_policy
    #   <p>The access point or multi-region access point policy.</p>
    #
    #   @return [String]
    #
    # @!attribute public_access_block
    #   <p>The proposed <code>S3PublicAccessBlock</code> configuration to apply to this Amazon S3 access
    #            point or multi-region access point.</p>
    #
    #   @return [S3PublicAccessBlockConfiguration]
    #
    # @!attribute network_origin
    #   <p>The proposed <code>Internet</code> and <code>VpcConfiguration</code> to apply to this
    #            Amazon S3 access point. <code>VpcConfiguration</code> does not apply to multi-region access
    #            points. If the access preview is for a new resource and neither is specified, the access
    #            preview uses <code>Internet</code> for the network origin. If the access preview is for an
    #            existing resource and neither is specified, the access preview uses the exiting network
    #            origin.</p>
    #
    #   @return [NetworkOriginConfiguration]
    #
    S3AccessPointConfiguration = ::Struct.new(
      :access_point_policy,
      :public_access_block,
      :network_origin,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>A proposed access control list grant configuration for an Amazon S3 bucket. For more
    #          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#setting-acls">How to Specify an
    #          ACL</a>.</p>
    #
    # @!attribute permission
    #   <p>The permissions being granted.</p>
    #
    #   Enum, one of: ["READ", "WRITE", "READ_ACP", "WRITE_ACP", "FULL_CONTROL"]
    #
    #   @return [String]
    #
    # @!attribute grantee
    #   <p>The grantee to whom you’re assigning access rights.</p>
    #
    #   @return [AclGrantee]
    #
    S3BucketAclGrantConfiguration = ::Struct.new(
      :permission,
      :grantee,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Proposed access control configuration for an Amazon S3 bucket. You can propose a
    #          configuration for a new Amazon S3 bucket or an existing Amazon S3 bucket that you own by specifying
    #          the Amazon S3 bucket policy, bucket ACLs, bucket BPA settings, Amazon S3 access points, and
    #          multi-region access points attached to the bucket. If the configuration is for an existing
    #          Amazon S3 bucket and you do not specify the Amazon S3 bucket policy, the access preview uses the
    #          existing policy attached to the bucket. If the access preview is for a new resource and you
    #          do not specify the Amazon S3 bucket policy, the access preview assumes a bucket without a
    #          policy. To propose deletion of an existing bucket policy, you can specify an empty string.
    #          For more information about bucket policy limits, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html">Bucket Policy
    #          Examples</a>.</p>
    #
    # @!attribute bucket_policy
    #   <p>The proposed bucket policy for the Amazon S3 bucket.</p>
    #
    #   @return [String]
    #
    # @!attribute bucket_acl_grants
    #   <p>The proposed list of ACL grants for the Amazon S3 bucket. You can propose up to 100 ACL
    #            grants per bucket. If the proposed grant configuration is for an existing bucket, the
    #            access preview uses the proposed list of grant configurations in place of the existing
    #            grants. Otherwise, the access preview uses the existing grants for the bucket.</p>
    #
    #   @return [Array<S3BucketAclGrantConfiguration>]
    #
    # @!attribute bucket_public_access_block
    #   <p>The proposed block public access configuration for the Amazon S3 bucket.</p>
    #
    #   @return [S3PublicAccessBlockConfiguration]
    #
    # @!attribute access_points
    #   <p>The configuration of Amazon S3 access points or multi-region access points for the bucket.
    #            You can propose up to 10 new access points per bucket.</p>
    #
    #   @return [Hash<String, S3AccessPointConfiguration>]
    #
    S3BucketConfiguration = ::Struct.new(
      :bucket_policy,
      :bucket_acl_grants,
      :bucket_public_access_block,
      :access_points,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The <code>PublicAccessBlock</code> configuration to apply to this Amazon S3 bucket. If the
    #          proposed configuration is for an existing Amazon S3 bucket and the configuration is not
    #          specified, the access preview uses the existing setting. If the proposed configuration is
    #          for a new bucket and the configuration is not specified, the access preview uses
    #             <code>false</code>. If the proposed configuration is for a new access point or
    #          multi-region access point and the access point BPA configuration is not specified, the
    #          access preview uses <code>true</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html">PublicAccessBlockConfiguration</a>. </p>
    #
    # @!attribute ignore_public_acls
    #   <p> Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this
    #            bucket. </p>
    #
    #   @return [Boolean]
    #
    # @!attribute restrict_public_buckets
    #   <p> Specifies whether Amazon S3 should restrict public bucket policies for this bucket. </p>
    #
    #   @return [Boolean]
    #
    S3PublicAccessBlockConfiguration = ::Struct.new(
      :ignore_public_acls,
      :restrict_public_buckets,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The configuration for a Secrets Manager secret. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_CreateSecret.html">CreateSecret</a>.</p>
    #          <p>You can propose a configuration for a new secret or an existing secret that you own by
    #          specifying the secret policy and optional KMS encryption key. If the configuration is for
    #          an existing secret and you do not specify the secret policy, the access preview uses the
    #          existing policy for the secret. If the access preview is for a new resource and you do not
    #          specify the policy, the access preview assumes a secret without a policy. To propose
    #          deletion of an existing policy, you can specify an empty string. If the proposed
    #          configuration is for a new secret and you do not specify the KMS key ID, the access
    #          preview uses the Amazon Web Services managed key <code>aws/secretsmanager</code>. If you specify an empty
    #          string for the KMS key ID, the access preview uses the Amazon Web Services managed key of the Amazon Web Services
    #          account. For more information about secret policy limits, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_limits.html">Quotas for
    #             Secrets Manager.</a>.</p>
    #
    # @!attribute kms_key_id
    #   <p>The proposed ARN, key ID, or alias of the KMS key.</p>
    #
    #   @return [String]
    #
    # @!attribute secret_policy
    #   <p>The proposed resource policy defining who can access or manage the secret.</p>
    #
    #   @return [String]
    #
    SecretsManagerSecretConfiguration = ::Struct.new(
      :kms_key_id,
      :secret_policy,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Service quote met error.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    # @!attribute resource_id
    #   <p>The resource ID.</p>
    #
    #   @return [String]
    #
    # @!attribute resource_type
    #   <p>The resource type.</p>
    #
    #   @return [String]
    #
    ServiceQuotaExceededException = ::Struct.new(
      :message,
      :resource_id,
      :resource_type,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The criteria used to sort.</p>
    #
    # @!attribute attribute_name
    #   <p>The name of the attribute to sort on.</p>
    #
    #   @return [String]
    #
    # @!attribute order_by
    #   <p>The sort order, ascending or descending.</p>
    #
    #   Enum, one of: ["ASC", "DESC"]
    #
    #   @return [String]
    #
    SortCriteria = ::Struct.new(
      :attribute_name,
      :order_by,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>A span in a policy. The span consists of a start position (inclusive) and end position
    #          (exclusive).</p>
    #
    # @!attribute start
    #   <p>The start position of the span (inclusive).</p>
    #
    #   @return [Position]
    #
    # @!attribute end
    #   <p>The end position of the span (exclusive).</p>
    #
    #   @return [Position]
    #
    Span = ::Struct.new(
      :start,
      :end,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The proposed access control configuration for an Amazon SQS queue. You can propose a
    #          configuration for a new Amazon SQS queue or an existing Amazon SQS queue that you own by specifying
    #          the Amazon SQS policy. If the configuration is for an existing Amazon SQS queue and you do not
    #          specify the Amazon SQS policy, the access preview uses the existing Amazon SQS policy for the queue.
    #          If the access preview is for a new resource and you do not specify the policy, the access
    #          preview assumes an Amazon SQS queue without a policy. To propose deletion of an existing Amazon SQS
    #          queue policy, you can specify an empty string for the Amazon SQS policy. For more information
    #          about Amazon SQS policy limits, see <a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-policies.html">Quotas related
    #             to policies</a>.</p>
    #
    # @!attribute queue_policy
    #   <p> The proposed resource policy for the Amazon SQS queue. </p>
    #
    #   @return [String]
    #
    SqsQueueConfiguration = ::Struct.new(
      :queue_policy,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute policy_generation_details
    #   <p>Contains the ARN of the IAM entity (user or role) for which you are generating a
    #            policy.</p>
    #
    #   @return [PolicyGenerationDetails]
    #
    # @!attribute cloud_trail_details
    #   <p>A <code>CloudTrailDetails</code> object that contains details about a <code>Trail</code>
    #            that you want to analyze to generate policies.</p>
    #
    #   @return [CloudTrailDetails]
    #
    # @!attribute client_token
    #   <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the
    #            request. Idempotency ensures that an API request completes only once. With an idempotent
    #            request, if the original request completes successfully, the subsequent retries with the
    #            same client token return the result from the original successful request and they have no
    #            additional effect.</p>
    #            <p>If you do not specify a client token, one is automatically generated by the Amazon Web Services
    #            SDK.</p>
    #
    #   @return [String]
    #
    StartPolicyGenerationInput = ::Struct.new(
      :policy_generation_details,
      :cloud_trail_details,
      :client_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute job_id
    #   <p>The <code>JobId</code> that is returned by the <code>StartPolicyGeneration</code>
    #            operation. The <code>JobId</code> can be used with <code>GetGeneratedPolicy</code> to
    #            retrieve the generated policies or used with <code>CancelPolicyGeneration</code> to cancel
    #            the policy generation request.</p>
    #
    #   @return [String]
    #
    StartPolicyGenerationOutput = ::Struct.new(
      :job_id,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Starts a scan of the policies applied to the specified resource.</p>
    #
    # @!attribute analyzer_arn
    #   <p>The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html permission-resources">ARN of
    #               the analyzer</a> to use to scan the policies applied to the specified
    #            resource.</p>
    #
    #   @return [String]
    #
    # @!attribute resource_arn
    #   <p>The ARN of the resource to scan.</p>
    #
    #   @return [String]
    #
    StartResourceScanInput = ::Struct.new(
      :analyzer_arn,
      :resource_arn,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    StartResourceScanOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Provides more details about the current status of the analyzer. For example, if the
    #          creation for the analyzer fails, a <code>Failed</code> status is returned. For an analyzer
    #          with organization as the type, this failure can be due to an issue with creating the
    #          service-linked roles required in the member accounts of the Amazon Web Services organization.</p>
    #
    # @!attribute code
    #   <p>The reason code for the current status of the analyzer.</p>
    #
    #   Enum, one of: ["AWS_SERVICE_ACCESS_DISABLED", "DELEGATED_ADMINISTRATOR_DEREGISTERED", "ORGANIZATION_DELETED", "SERVICE_LINKED_ROLE_CREATION_FAILED"]
    #
    #   @return [String]
    #
    StatusReason = ::Struct.new(
      :code,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>A reference to a substring of a literal string in a JSON document.</p>
    #
    # @!attribute start
    #   <p>The start index of the substring, starting from 0.</p>
    #
    #   @return [Integer]
    #
    # @!attribute length
    #   <p>The length of the substring.</p>
    #
    #   @return [Integer]
    #
    Substring = ::Struct.new(
      :start,
      :length,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Adds a tag to the specified resource.</p>
    #
    # @!attribute resource_arn
    #   <p>The ARN of the resource to add the tag to.</p>
    #
    #   @return [String]
    #
    # @!attribute tags
    #   <p>The tags to add to the resource.</p>
    #
    #   @return [Hash<String, String>]
    #
    TagResourceInput = ::Struct.new(
      :resource_arn,
      :tags,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The response to the request.</p>
    #
    TagResourceOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Throttling limit exceeded error.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    # @!attribute retry_after_seconds
    #   <p>The seconds to wait to retry.</p>
    #
    #   @return [Integer]
    #
    ThrottlingException = ::Struct.new(
      :message,
      :retry_after_seconds,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains details about the CloudTrail trail being analyzed to generate a policy.</p>
    #
    # @!attribute cloud_trail_arn
    #   <p>Specifies the ARN of the trail. The format of a trail ARN is
    #               <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>.</p>
    #
    #   @return [String]
    #
    # @!attribute regions
    #   <p>A list of regions to get CloudTrail data from and analyze to generate a policy.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute all_regions
    #   <p>Possible values are <code>true</code> or <code>false</code>. If set to
    #            <code>true</code>, IAM Access Analyzer retrieves CloudTrail data from all regions to analyze and
    #            generate a policy.</p>
    #
    #   @return [Boolean]
    #
    Trail = ::Struct.new(
      :cloud_trail_arn,
      :regions,
      :all_regions,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains details about the CloudTrail trail being analyzed to generate a policy.</p>
    #
    # @!attribute cloud_trail_arn
    #   <p>Specifies the ARN of the trail. The format of a trail ARN is
    #               <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>.</p>
    #
    #   @return [String]
    #
    # @!attribute regions
    #   <p>A list of regions to get CloudTrail data from and analyze to generate a policy.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute all_regions
    #   <p>Possible values are <code>true</code> or <code>false</code>. If set to
    #            <code>true</code>, IAM Access Analyzer retrieves CloudTrail data from all regions to analyze and
    #            generate a policy.</p>
    #
    #   @return [Boolean]
    #
    TrailProperties = ::Struct.new(
      :cloud_trail_arn,
      :regions,
      :all_regions,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for Type
    #
    module Type
      # No documentation available.
      #
      ACCOUNT = "ACCOUNT"

      # No documentation available.
      #
      ORGANIZATION = "ORGANIZATION"
    end

    # <p>Removes a tag from the specified resource.</p>
    #
    # @!attribute resource_arn
    #   <p>The ARN of the resource to remove the tag from.</p>
    #
    #   @return [String]
    #
    # @!attribute tag_keys
    #   <p>The key for the tag to add.</p>
    #
    #   @return [Array<String>]
    #
    UntagResourceInput = ::Struct.new(
      :resource_arn,
      :tag_keys,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>The response to the request.</p>
    #
    UntagResourceOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Updates the specified archive rule.</p>
    #
    # @!attribute analyzer_name
    #   <p>The name of the analyzer to update the archive rules for.</p>
    #
    #   @return [String]
    #
    # @!attribute rule_name
    #   <p>The name of the rule to update.</p>
    #
    #   @return [String]
    #
    # @!attribute filter
    #   <p>A filter to match for the rules to update. Only rules that match the filter are
    #            updated.</p>
    #
    #   @return [Hash<String, Criterion>]
    #
    # @!attribute client_token
    #   <p>A client token.</p>
    #
    #   @return [String]
    #
    UpdateArchiveRuleInput = ::Struct.new(
      :analyzer_name,
      :rule_name,
      :filter,
      :client_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    UpdateArchiveRuleOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Updates findings with the new values provided in the request.</p>
    #
    # @!attribute analyzer_arn
    #   <p>The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html permission-resources">ARN of
    #               the analyzer</a> that generated the findings to update.</p>
    #
    #   @return [String]
    #
    # @!attribute status
    #   <p>The state represents the action to take to update the finding Status. Use
    #               <code>ARCHIVE</code> to change an Active finding to an Archived finding. Use
    #               <code>ACTIVE</code> to change an Archived finding to an Active finding.</p>
    #
    #   Enum, one of: ["ACTIVE", "ARCHIVED"]
    #
    #   @return [String]
    #
    # @!attribute ids
    #   <p>The IDs of the findings to update.</p>
    #
    #   @return [Array<String>]
    #
    # @!attribute resource_arn
    #   <p>The ARN of the resource identified in the finding.</p>
    #
    #   @return [String]
    #
    # @!attribute client_token
    #   <p>A client token.</p>
    #
    #   @return [String]
    #
    UpdateFindingsInput = ::Struct.new(
      :analyzer_arn,
      :status,
      :ids,
      :resource_arn,
      :client_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    UpdateFindingsOutput = ::Struct.new(
      nil,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>A finding in a policy. Each finding is an actionable recommendation that can be used to
    #          improve the policy.</p>
    #
    # @!attribute finding_details
    #   <p>A localized message that explains the finding and provides guidance on how to address
    #            it.</p>
    #
    #   @return [String]
    #
    # @!attribute finding_type
    #   <p>The impact of the finding.</p>
    #            <p>Security warnings report when the policy allows access that we consider overly
    #            permissive.</p>
    #            <p>Errors report when a part of the policy is not functional.</p>
    #            <p>Warnings report non-security issues when a policy does not conform to policy writing
    #            best practices.</p>
    #            <p>Suggestions recommend stylistic improvements in the policy that do not impact
    #            access.</p>
    #
    #   Enum, one of: ["ERROR", "SECURITY_WARNING", "SUGGESTION", "WARNING"]
    #
    #   @return [String]
    #
    # @!attribute issue_code
    #   <p>The issue code provides an identifier of the issue associated with this finding.</p>
    #
    #   @return [String]
    #
    # @!attribute learn_more_link
    #   <p>A link to additional documentation about the type of finding.</p>
    #
    #   @return [String]
    #
    # @!attribute locations
    #   <p>The list of locations in the policy document that are related to the finding. The issue
    #            code provides a summary of an issue identified by the finding.</p>
    #
    #   @return [Array<Location>]
    #
    ValidatePolicyFinding = ::Struct.new(
      :finding_details,
      :finding_type,
      :issue_code,
      :learn_more_link,
      :locations,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for ValidatePolicyFindingType
    #
    module ValidatePolicyFindingType
      # No documentation available.
      #
      ERROR = "ERROR"

      # No documentation available.
      #
      SECURITY_WARNING = "SECURITY_WARNING"

      # No documentation available.
      #
      SUGGESTION = "SUGGESTION"

      # No documentation available.
      #
      WARNING = "WARNING"
    end

    # @!attribute locale
    #   <p>The locale to use for localizing the findings.</p>
    #
    #   Enum, one of: ["DE", "EN", "ES", "FR", "IT", "JA", "KO", "PT_BR", "ZH_CN", "ZH_TW"]
    #
    #   @return [String]
    #
    # @!attribute max_results
    #   <p>The maximum number of results to return in the response.</p>
    #
    #   @return [Integer]
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    # @!attribute policy_document
    #   <p>The JSON policy document to use as the content for the policy.</p>
    #
    #   @return [String]
    #
    # @!attribute policy_type
    #   <p>The type of policy to validate. Identity policies grant permissions to IAM principals.
    #            Identity policies include managed and inline policies for IAM roles, users, and groups.
    #            They also include service-control policies (SCPs) that are attached to an Amazon Web Services
    #            organization, organizational unit (OU), or an account.</p>
    #            <p>Resource policies grant permissions on Amazon Web Services resources. Resource policies include trust
    #            policies for IAM roles and bucket policies for Amazon S3 buckets. You can provide a generic
    #            input such as identity policy or resource policy or a specific input such as managed policy
    #            or Amazon S3 bucket policy. </p>
    #
    #   Enum, one of: ["IDENTITY_POLICY", "RESOURCE_POLICY", "SERVICE_CONTROL_POLICY"]
    #
    #   @return [String]
    #
    # @!attribute validate_policy_resource_type
    #   <p>The type of resource to attach to your resource policy. Specify a value for the policy
    #            validation resource type only if the policy type is <code>RESOURCE_POLICY</code>. For
    #            example, to validate a resource policy to attach to an Amazon S3 bucket, you can choose
    #               <code>AWS::S3::Bucket</code> for the policy validation resource type.</p>
    #            <p>For resource types not supported as valid values, IAM Access Analyzer runs policy checks that
    #            apply to all resource policies. For example, to validate a resource policy to attach to a
    #            KMS key, do not specify a value for the policy validation resource type and IAM Access Analyzer
    #            will run policy checks that apply to all resource policies.</p>
    #
    #   Enum, one of: ["AWS::S3::Bucket", "AWS::S3::AccessPoint", "AWS::S3::MultiRegionAccessPoint", "AWS::S3ObjectLambda::AccessPoint"]
    #
    #   @return [String]
    #
    ValidatePolicyInput = ::Struct.new(
      :locale,
      :max_results,
      :next_token,
      :policy_document,
      :policy_type,
      :validate_policy_resource_type,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # @!attribute findings
    #   <p>The list of findings in a policy returned by IAM Access Analyzer based on its suite of policy
    #            checks.</p>
    #
    #   @return [Array<ValidatePolicyFinding>]
    #
    # @!attribute next_token
    #   <p>A token used for pagination of results returned.</p>
    #
    #   @return [String]
    #
    ValidatePolicyOutput = ::Struct.new(
      :findings,
      :next_token,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for ValidatePolicyResourceType
    #
    module ValidatePolicyResourceType
      # No documentation available.
      #
      S3_BUCKET = "AWS::S3::Bucket"

      # No documentation available.
      #
      S3_ACCESS_POINT = "AWS::S3::AccessPoint"

      # No documentation available.
      #
      S3_MULTI_REGION_ACCESS_POINT = "AWS::S3::MultiRegionAccessPoint"

      # No documentation available.
      #
      S3_OBJECT_LAMBDA_ACCESS_POINT = "AWS::S3ObjectLambda::AccessPoint"
    end

    # <p>Validation exception error.</p>
    #
    # @!attribute message
    #
    #   @return [String]
    #
    # @!attribute reason
    #   <p>The reason for the exception.</p>
    #
    #   Enum, one of: ["unknownOperation", "cannotParse", "fieldValidationFailed", "other"]
    #
    #   @return [String]
    #
    # @!attribute field_list
    #   <p>A list of fields that didn't validate.</p>
    #
    #   @return [Array<ValidationExceptionField>]
    #
    ValidationException = ::Struct.new(
      :message,
      :reason,
      :field_list,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # <p>Contains information about a validation exception.</p>
    #
    # @!attribute name
    #   <p>The name of the validation exception.</p>
    #
    #   @return [String]
    #
    # @!attribute message
    #   <p>A message about the validation exception.</p>
    #
    #   @return [String]
    #
    ValidationExceptionField = ::Struct.new(
      :name,
      :message,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

    # Includes enum constants for ValidationExceptionReason
    #
    module ValidationExceptionReason
      # No documentation available.
      #
      UNKNOWN_OPERATION = "unknownOperation"

      # No documentation available.
      #
      CANNOT_PARSE = "cannotParse"

      # No documentation available.
      #
      FIELD_VALIDATION_FAILED = "fieldValidationFailed"

      # No documentation available.
      #
      OTHER = "other"
    end

    # <p>The proposed virtual private cloud (VPC) configuration for the Amazon S3 access point. VPC
    #          configuration does not apply to multi-region access points. For more information, see
    #             <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_VpcConfiguration.html">VpcConfiguration</a>. </p>
    #
    # @!attribute vpc_id
    #   <p> If this field is specified, this access point will only allow connections from the
    #            specified VPC ID. </p>
    #
    #   @return [String]
    #
    VpcConfiguration = ::Struct.new(
      :vpc_id,
      keyword_init: true
    ) do
      include Hearth::Structure
    end

  end
end
